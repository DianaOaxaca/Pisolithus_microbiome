Tue Feb 20 18:39:42 MST 2024
Run trimgalore to DR1014-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1014-E_1.fastq.gz data/DR1014-E_2.fastq.gz -o results/02.trimgalore/DR1014-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1014-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1014-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1014-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	44	CTGTCTCTTATA	79948	0.06
Illumina	0	AGATCGGAAGAGC	79948	0.00
smallRNA	0	TGGAATTCTCGG	79948	0.00
Using Nextera adapter for trimming (count: 44). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1014-E_trimgalore/DR1014-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1014-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1014-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1014-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1014-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.416 s (5.202 µs/read; 11.53 M reads/minute).

=== Summary ===

Total reads processed:                  79,948
Reads with adapters:                     1,829 (2.3%)
Reads written (passing filters):        79,948 (100.0%)

Total basepairs processed:    24,064,348 bp
Quality-trimmed:                  48,268 bp (0.2%)
Total written (filtered):     24,008,352 bp (99.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1829 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 52.1%
  C: 10.3%
  G: 19.4%
  T: 18.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	708	19987.0	0	708
2	317	4996.8	0	317
3	649	1249.2	0	649
4	100	312.3	0	100
5	4	78.1	0	4
13	4	0.0	1	2 2
14	19	0.0	1	15 4
15	1	0.0	1	1
78	4	0.0	1	4
79	5	0.0	1	5
82	1	0.0	1	1
84	1	0.0	1	1
86	1	0.0	1	1
100	1	0.0	1	1
104	1	0.0	1	1
105	1	0.0	1	1
108	1	0.0	1	1
111	1	0.0	1	1
140	1	0.0	1	1
144	1	0.0	1	1
179	1	0.0	1	1
191	1	0.0	1	1
214	1	0.0	1	1
248	1	0.0	1	1
266	1	0.0	1	1
269	1	0.0	1	1
274	2	0.0	1	1 1

RUN STATISTICS FOR INPUT FILE: data/DR1014-E_1.fastq.gz
=============================================
79948 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1014-E_trimgalore/DR1014-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1014-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1014-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1014-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1014-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.463 s (5.792 µs/read; 10.36 M reads/minute).

=== Summary ===

Total reads processed:                  79,948
Reads with adapters:                    66,378 (83.0%)
Reads written (passing filters):        79,948 (100.0%)

Total basepairs processed:    24,064,348 bp
Quality-trimmed:                 505,311 bp (2.1%)
Total written (filtered):     23,487,260 bp (97.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 66378 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.0%
  C: 84.1%
  G: 10.9%
  T: 1.9%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	64788	19987.0	0	64788
2	1156	4996.8	0	1156
3	354	1249.2	0	354
4	20	312.3	0	20
5	16	78.1	0	16
7	1	4.9	0	1
10	3	0.1	1	2 1
11	1	0.0	1	0 1
13	3	0.0	1	3
14	4	0.0	1	4
15	1	0.0	1	1
28	1	0.0	1	1
38	1	0.0	1	1
41	1	0.0	1	1
42	1	0.0	1	1
44	2	0.0	1	2
47	1	0.0	1	1
54	1	0.0	1	1
55	1	0.0	1	1
56	1	0.0	1	0 1
57	2	0.0	1	2
66	1	0.0	1	1
79	1	0.0	1	1
82	1	0.0	1	1
90	1	0.0	1	1
92	1	0.0	1	1
93	1	0.0	1	1
113	1	0.0	1	1
135	1	0.0	1	1
145	1	0.0	1	1
149	1	0.0	1	0 1
165	2	0.0	1	1 1
168	1	0.0	1	1
171	1	0.0	1	1
173	1	0.0	1	1
174	1	0.0	1	0 1
189	1	0.0	1	1
204	1	0.0	1	1
281	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1014-E_2.fastq.gz
=============================================
79948 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1014-E_1_trimmed.fq.gz and DR1014-E_2_trimmed.fq.gz
file_1: DR1014-E_1_trimmed.fq.gz, file_2: DR1014-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1014-E_1_trimmed.fq.gz and DR1014-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1014-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1014-E_2_val_2.fq.gz

Total number of sequences analysed: 79948

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 2886 (3.61%)


  >>> Now running FastQC on the validated data DR1014-E_1_val_1.fq.gz<<<

Started analysis of DR1014-E_1_val_1.fq.gz
Approx 5% complete for DR1014-E_1_val_1.fq.gz
Approx 10% complete for DR1014-E_1_val_1.fq.gz
Approx 15% complete for DR1014-E_1_val_1.fq.gz
Approx 20% complete for DR1014-E_1_val_1.fq.gz
Approx 25% complete for DR1014-E_1_val_1.fq.gz
Approx 30% complete for DR1014-E_1_val_1.fq.gz
Approx 35% complete for DR1014-E_1_val_1.fq.gz
Approx 40% complete for DR1014-E_1_val_1.fq.gz
Approx 45% complete for DR1014-E_1_val_1.fq.gz
Approx 50% complete for DR1014-E_1_val_1.fq.gz
Approx 55% complete for DR1014-E_1_val_1.fq.gz
Approx 60% complete for DR1014-E_1_val_1.fq.gz
Approx 65% complete for DR1014-E_1_val_1.fq.gz
Approx 70% complete for DR1014-E_1_val_1.fq.gz
Approx 75% complete for DR1014-E_1_val_1.fq.gz
Approx 80% complete for DR1014-E_1_val_1.fq.gz
Approx 85% complete for DR1014-E_1_val_1.fq.gz
Approx 90% complete for DR1014-E_1_val_1.fq.gz
Approx 95% complete for DR1014-E_1_val_1.fq.gz
Analysis complete for DR1014-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1014-E_2_val_2.fq.gz<<<

Started analysis of DR1014-E_2_val_2.fq.gz
Approx 5% complete for DR1014-E_2_val_2.fq.gz
Approx 10% complete for DR1014-E_2_val_2.fq.gz
Approx 15% complete for DR1014-E_2_val_2.fq.gz
Approx 20% complete for DR1014-E_2_val_2.fq.gz
Approx 25% complete for DR1014-E_2_val_2.fq.gz
Approx 30% complete for DR1014-E_2_val_2.fq.gz
Approx 35% complete for DR1014-E_2_val_2.fq.gz
Approx 40% complete for DR1014-E_2_val_2.fq.gz
Approx 45% complete for DR1014-E_2_val_2.fq.gz
Approx 50% complete for DR1014-E_2_val_2.fq.gz
Approx 55% complete for DR1014-E_2_val_2.fq.gz
Approx 60% complete for DR1014-E_2_val_2.fq.gz
Approx 65% complete for DR1014-E_2_val_2.fq.gz
Approx 70% complete for DR1014-E_2_val_2.fq.gz
Approx 75% complete for DR1014-E_2_val_2.fq.gz
Approx 80% complete for DR1014-E_2_val_2.fq.gz
Approx 85% complete for DR1014-E_2_val_2.fq.gz
Approx 90% complete for DR1014-E_2_val_2.fq.gz
Approx 95% complete for DR1014-E_2_val_2.fq.gz
Analysis complete for DR1014-E_2_val_2.fq.gz
Deleting both intermediate output files DR1014-E_1_trimmed.fq.gz and DR1014-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1014-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1014-SAH_1.fastq.gz data/DR1014-SAH_2.fastq.gz -o results/02.trimgalore/DR1014-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1014-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1014-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1014-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	99	CTGTCTCTTATA	111902	0.09
smallRNA	0	TGGAATTCTCGG	111902	0.00
Illumina	0	AGATCGGAAGAGC	111902	0.00
Using Nextera adapter for trimming (count: 99). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1014-SAH_trimgalore/DR1014-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1014-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1014-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1014-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1014-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.522 s (4.662 µs/read; 12.87 M reads/minute).

=== Summary ===

Total reads processed:                 111,902
Reads with adapters:                    12,785 (11.4%)
Reads written (passing filters):       111,902 (100.0%)

Total basepairs processed:    33,682,502 bp
Quality-trimmed:                 155,187 bp (0.5%)
Total written (filtered):     33,481,298 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 12785 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 44.7%
  C: 11.8%
  G: 21.5%
  T: 21.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	6406	27975.5	0	6406
2	1927	6993.9	0	1927
3	3665	1748.5	0	3665
4	632	437.1	0	632
5	32	109.3	0	32
6	4	27.3	0	4
26	1	0.0	1	0 1
36	2	0.0	1	0 2
56	1	0.0	1	0 1
72	1	0.0	1	1
78	1	0.0	1	1
79	1	0.0	1	1
80	2	0.0	1	2
81	2	0.0	1	1 1
84	2	0.0	1	2
86	4	0.0	1	3 1
87	1	0.0	1	1
90	1	0.0	1	1
91	1	0.0	1	0 1
92	1	0.0	1	1
95	1	0.0	1	1
97	1	0.0	1	1
99	1	0.0	1	1
106	1	0.0	1	1
107	1	0.0	1	1
108	2	0.0	1	2
111	1	0.0	1	0 1
112	1	0.0	1	1
113	1	0.0	1	1
115	1	0.0	1	0 1
116	2	0.0	1	2
117	1	0.0	1	1
122	1	0.0	1	1
129	1	0.0	1	1
130	1	0.0	1	1
134	2	0.0	1	2
135	1	0.0	1	1
139	3	0.0	1	2 1
145	1	0.0	1	1
151	1	0.0	1	1
152	1	0.0	1	1
153	1	0.0	1	1
157	1	0.0	1	1
158	1	0.0	1	1
160	1	0.0	1	1
163	1	0.0	1	1
166	1	0.0	1	1
168	1	0.0	1	1
172	1	0.0	1	0 1
174	1	0.0	1	1
175	1	0.0	1	1
181	2	0.0	1	1 1
183	1	0.0	1	1
184	1	0.0	1	0 1
187	2	0.0	1	2
188	2	0.0	1	2
191	1	0.0	1	1
200	1	0.0	1	1
203	1	0.0	1	1
210	2	0.0	1	0 2
213	1	0.0	1	1
216	1	0.0	1	1
217	1	0.0	1	1
222	1	0.0	1	0 1
223	1	0.0	1	1
225	1	0.0	1	1
226	2	0.0	1	2
227	1	0.0	1	1
228	1	0.0	1	1
235	1	0.0	1	1
242	1	0.0	1	1
249	2	0.0	1	1 1
250	1	0.0	1	1
257	1	0.0	1	1
267	1	0.0	1	1
270	1	0.0	1	1
271	1	0.0	1	1
278	1	0.0	1	1
283	2	0.0	1	2
284	4	0.0	1	4
287	1	0.0	1	1
288	3	0.0	1	3
289	2	0.0	1	1 1
290	4	0.0	1	3 1
291	13	0.0	1	12 1

RUN STATISTICS FOR INPUT FILE: data/DR1014-SAH_1.fastq.gz
=============================================
111902 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1014-SAH_trimgalore/DR1014-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1014-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1014-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1014-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1014-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.564 s (5.041 µs/read; 11.90 M reads/minute).

=== Summary ===

Total reads processed:                 111,902
Reads with adapters:                    91,359 (81.6%)
Reads written (passing filters):       111,902 (100.0%)

Total basepairs processed:    33,682,502 bp
Quality-trimmed:               1,019,798 bp (3.0%)
Total written (filtered):     32,551,988 bp (96.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 91359 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.8%
  C: 79.6%
  G: 14.3%
  T: 2.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	88402	27975.5	0	88402
2	2111	6993.9	0	2111
3	651	1748.5	0	651
4	46	437.1	0	46
5	23	109.3	0	23
6	12	27.3	0	12
34	1	0.0	1	0 1
76	1	0.0	1	0 1
80	1	0.0	1	1
81	3	0.0	1	3
82	8	0.0	1	8
83	7	0.0	1	6 1
84	3	0.0	1	3
85	4	0.0	1	4
86	2	0.0	1	1 1
87	4	0.0	1	4
88	1	0.0	1	1
89	2	0.0	1	2
90	3	0.0	1	3
96	2	0.0	1	2
97	1	0.0	1	1
99	1	0.0	1	1
100	2	0.0	1	2
102	1	0.0	1	1
104	2	0.0	1	1 1
105	1	0.0	1	1
107	3	0.0	1	3
109	1	0.0	1	1
125	2	0.0	1	2
126	1	0.0	1	1
128	1	0.0	1	1
129	2	0.0	1	2
131	1	0.0	1	1
134	1	0.0	1	0 1
136	1	0.0	1	1
137	1	0.0	1	1
138	1	0.0	1	1
139	1	0.0	1	1
140	1	0.0	1	1
148	1	0.0	1	1
150	1	0.0	1	1
155	1	0.0	1	1
157	1	0.0	1	1
159	1	0.0	1	1
162	2	0.0	1	2
164	1	0.0	1	1
165	3	0.0	1	3
168	1	0.0	1	1
171	1	0.0	1	1
174	1	0.0	1	1
175	2	0.0	1	2
177	1	0.0	1	1
178	1	0.0	1	1
182	1	0.0	1	1
183	1	0.0	1	1
186	1	0.0	1	1
187	2	0.0	1	2
188	1	0.0	1	1
193	1	0.0	1	1
196	1	0.0	1	1
197	1	0.0	1	0 1
201	1	0.0	1	1
203	1	0.0	1	1
204	1	0.0	1	1
205	1	0.0	1	1
206	1	0.0	1	1
207	1	0.0	1	1
209	1	0.0	1	1
211	1	0.0	1	1
212	1	0.0	1	1
214	1	0.0	1	1
218	2	0.0	1	2
222	1	0.0	1	1
223	1	0.0	1	1
237	1	0.0	1	1
284	1	0.0	1	1
289	3	0.0	1	3
290	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1014-SAH_2.fastq.gz
=============================================
111902 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1014-SAH_1_trimmed.fq.gz and DR1014-SAH_2_trimmed.fq.gz
file_1: DR1014-SAH_1_trimmed.fq.gz, file_2: DR1014-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1014-SAH_1_trimmed.fq.gz and DR1014-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1014-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1014-SAH_2_val_2.fq.gz

Total number of sequences analysed: 111902

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 6102 (5.45%)


  >>> Now running FastQC on the validated data DR1014-SAH_1_val_1.fq.gz<<<

Started analysis of DR1014-SAH_1_val_1.fq.gz
Approx 5% complete for DR1014-SAH_1_val_1.fq.gz
Approx 10% complete for DR1014-SAH_1_val_1.fq.gz
Approx 15% complete for DR1014-SAH_1_val_1.fq.gz
Approx 20% complete for DR1014-SAH_1_val_1.fq.gz
Approx 25% complete for DR1014-SAH_1_val_1.fq.gz
Approx 30% complete for DR1014-SAH_1_val_1.fq.gz
Approx 35% complete for DR1014-SAH_1_val_1.fq.gz
Approx 40% complete for DR1014-SAH_1_val_1.fq.gz
Approx 45% complete for DR1014-SAH_1_val_1.fq.gz
Approx 50% complete for DR1014-SAH_1_val_1.fq.gz
Approx 55% complete for DR1014-SAH_1_val_1.fq.gz
Approx 60% complete for DR1014-SAH_1_val_1.fq.gz
Approx 65% complete for DR1014-SAH_1_val_1.fq.gz
Approx 70% complete for DR1014-SAH_1_val_1.fq.gz
Approx 75% complete for DR1014-SAH_1_val_1.fq.gz
Approx 80% complete for DR1014-SAH_1_val_1.fq.gz
Approx 85% complete for DR1014-SAH_1_val_1.fq.gz
Approx 90% complete for DR1014-SAH_1_val_1.fq.gz
Approx 95% complete for DR1014-SAH_1_val_1.fq.gz
Analysis complete for DR1014-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1014-SAH_2_val_2.fq.gz<<<

Started analysis of DR1014-SAH_2_val_2.fq.gz
Approx 5% complete for DR1014-SAH_2_val_2.fq.gz
Approx 10% complete for DR1014-SAH_2_val_2.fq.gz
Approx 15% complete for DR1014-SAH_2_val_2.fq.gz
Approx 20% complete for DR1014-SAH_2_val_2.fq.gz
Approx 25% complete for DR1014-SAH_2_val_2.fq.gz
Approx 30% complete for DR1014-SAH_2_val_2.fq.gz
Approx 35% complete for DR1014-SAH_2_val_2.fq.gz
Approx 40% complete for DR1014-SAH_2_val_2.fq.gz
Approx 45% complete for DR1014-SAH_2_val_2.fq.gz
Approx 50% complete for DR1014-SAH_2_val_2.fq.gz
Approx 55% complete for DR1014-SAH_2_val_2.fq.gz
Approx 60% complete for DR1014-SAH_2_val_2.fq.gz
Approx 65% complete for DR1014-SAH_2_val_2.fq.gz
Approx 70% complete for DR1014-SAH_2_val_2.fq.gz
Approx 75% complete for DR1014-SAH_2_val_2.fq.gz
Approx 80% complete for DR1014-SAH_2_val_2.fq.gz
Approx 85% complete for DR1014-SAH_2_val_2.fq.gz
Approx 90% complete for DR1014-SAH_2_val_2.fq.gz
Approx 95% complete for DR1014-SAH_2_val_2.fq.gz
Analysis complete for DR1014-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1014-SAH_1_trimmed.fq.gz and DR1014-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1015-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1015-SAH_1.fastq.gz data/DR1015-SAH_2.fastq.gz -o results/02.trimgalore/DR1015-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1015-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1015-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1015-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	67	CTGTCTCTTATA	85335	0.08
Illumina	0	AGATCGGAAGAGC	85335	0.00
smallRNA	0	TGGAATTCTCGG	85335	0.00
Using Nextera adapter for trimming (count: 67). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1015-SAH_trimgalore/DR1015-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1015-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1015-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1015-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1015-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.422 s (4.943 µs/read; 12.14 M reads/minute).

=== Summary ===

Total reads processed:                  85,335
Reads with adapters:                     9,183 (10.8%)
Reads written (passing filters):        85,335 (100.0%)

Total basepairs processed:    25,685,835 bp
Quality-trimmed:                  98,239 bp (0.4%)
Total written (filtered):     25,555,123 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 9183 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 52.6%
  C: 9.8%
  G: 19.3%
  T: 18.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4186	21333.8	0	4186
2	1459	5333.4	0	1459
3	2930	1333.4	0	2930
4	495	333.3	0	495
5	27	83.3	0	27
11	1	0.0	1	0 1
16	1	0.0	1	0 1
23	1	0.0	1	0 1
28	1	0.0	1	0 1
36	1	0.0	1	0 1
70	1	0.0	1	1
73	1	0.0	1	1
77	1	0.0	1	1
78	1	0.0	1	0 1
79	3	0.0	1	3
80	1	0.0	1	1
81	2	0.0	1	1 1
83	2	0.0	1	2
84	2	0.0	1	1 1
85	2	0.0	1	2
86	1	0.0	1	0 1
88	1	0.0	1	1
90	1	0.0	1	1
93	1	0.0	1	1
96	1	0.0	1	1
97	1	0.0	1	1
99	1	0.0	1	1
100	1	0.0	1	1
104	1	0.0	1	1
107	1	0.0	1	1
108	1	0.0	1	1
110	2	0.0	1	2
115	1	0.0	1	1
117	1	0.0	1	0 1
119	1	0.0	1	1
128	1	0.0	1	0 1
132	1	0.0	1	1
138	1	0.0	1	1
146	1	0.0	1	1
147	1	0.0	1	1
149	1	0.0	1	0 1
155	1	0.0	1	1
158	1	0.0	1	1
161	1	0.0	1	1
181	2	0.0	1	2
182	1	0.0	1	1
193	1	0.0	1	1
194	1	0.0	1	1
209	1	0.0	1	0 1
210	1	0.0	1	1
214	1	0.0	1	1
215	1	0.0	1	1
218	1	0.0	1	1
220	1	0.0	1	1
232	1	0.0	1	1
233	1	0.0	1	1
234	1	0.0	1	1
237	1	0.0	1	1
247	1	0.0	1	1
248	1	0.0	1	1
250	1	0.0	1	1
251	1	0.0	1	0 1
253	1	0.0	1	0 1
257	1	0.0	1	1
271	1	0.0	1	1
274	1	0.0	1	1
281	1	0.0	1	1
287	3	0.0	1	3
288	2	0.0	1	1 1
289	3	0.0	1	1 2
290	1	0.0	1	1
291	7	0.0	1	6 1

RUN STATISTICS FOR INPUT FILE: data/DR1015-SAH_1.fastq.gz
=============================================
85335 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1015-SAH_trimgalore/DR1015-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1015-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1015-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1015-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1015-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.482 s (5.653 µs/read; 10.61 M reads/minute).

=== Summary ===

Total reads processed:                  85,335
Reads with adapters:                    68,730 (80.5%)
Reads written (passing filters):        85,335 (100.0%)

Total basepairs processed:    25,685,835 bp
Quality-trimmed:                 808,142 bp (3.1%)
Total written (filtered):     24,794,887 bp (96.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 68730 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 4.1%
  C: 78.2%
  G: 15.2%
  T: 2.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	66223	21333.8	0	66223
2	1777	5333.4	0	1777
3	581	1333.4	0	581
4	43	333.3	0	43
5	14	83.3	0	14
6	5	20.8	0	5
9	1	0.3	0	0 1
10	1	0.1	1	0 1
26	1	0.0	1	1
38	1	0.0	1	0 1
39	1	0.0	1	1
59	1	0.0	1	1
61	1	0.0	1	1
66	1	0.0	1	1
69	1	0.0	1	0 1
73	2	0.0	1	2
79	1	0.0	1	1
81	2	0.0	1	2
82	9	0.0	1	9
83	1	0.0	1	1
84	4	0.0	1	4
85	2	0.0	1	2
86	1	0.0	1	1
87	2	0.0	1	1 1
89	1	0.0	1	1
91	1	0.0	1	1
94	1	0.0	1	1
96	1	0.0	1	0 1
97	2	0.0	1	0 2
98	2	0.0	1	2
99	1	0.0	1	1
100	1	0.0	1	1
101	1	0.0	1	1
102	2	0.0	1	2
104	1	0.0	1	1
106	1	0.0	1	1
110	1	0.0	1	1
111	2	0.0	1	2
117	1	0.0	1	0 1
118	1	0.0	1	1
119	1	0.0	1	1
123	1	0.0	1	1
124	1	0.0	1	0 1
125	1	0.0	1	1
127	1	0.0	1	1
140	1	0.0	1	1
142	1	0.0	1	1
144	1	0.0	1	1
148	1	0.0	1	0 1
150	1	0.0	1	1
153	1	0.0	1	1
155	1	0.0	1	1
158	1	0.0	1	1
169	1	0.0	1	1
179	1	0.0	1	1
180	1	0.0	1	1
185	1	0.0	1	1
187	1	0.0	1	1
189	1	0.0	1	1
190	1	0.0	1	1
196	1	0.0	1	1
205	1	0.0	1	1
212	1	0.0	1	1
222	1	0.0	1	1
228	1	0.0	1	0 1
236	1	0.0	1	0 1
248	1	0.0	1	0 1
256	1	0.0	1	1
286	1	0.0	1	0 1
287	1	0.0	1	1
288	1	0.0	1	1
289	1	0.0	1	1
291	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/DR1015-SAH_2.fastq.gz
=============================================
85335 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1015-SAH_1_trimmed.fq.gz and DR1015-SAH_2_trimmed.fq.gz
file_1: DR1015-SAH_1_trimmed.fq.gz, file_2: DR1015-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1015-SAH_1_trimmed.fq.gz and DR1015-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1015-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1015-SAH_2_val_2.fq.gz

Total number of sequences analysed: 85335

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4634 (5.43%)


  >>> Now running FastQC on the validated data DR1015-SAH_1_val_1.fq.gz<<<

Started analysis of DR1015-SAH_1_val_1.fq.gz
Approx 5% complete for DR1015-SAH_1_val_1.fq.gz
Approx 10% complete for DR1015-SAH_1_val_1.fq.gz
Approx 15% complete for DR1015-SAH_1_val_1.fq.gz
Approx 20% complete for DR1015-SAH_1_val_1.fq.gz
Approx 25% complete for DR1015-SAH_1_val_1.fq.gz
Approx 30% complete for DR1015-SAH_1_val_1.fq.gz
Approx 35% complete for DR1015-SAH_1_val_1.fq.gz
Approx 40% complete for DR1015-SAH_1_val_1.fq.gz
Approx 45% complete for DR1015-SAH_1_val_1.fq.gz
Approx 50% complete for DR1015-SAH_1_val_1.fq.gz
Approx 55% complete for DR1015-SAH_1_val_1.fq.gz
Approx 60% complete for DR1015-SAH_1_val_1.fq.gz
Approx 65% complete for DR1015-SAH_1_val_1.fq.gz
Approx 70% complete for DR1015-SAH_1_val_1.fq.gz
Approx 75% complete for DR1015-SAH_1_val_1.fq.gz
Approx 80% complete for DR1015-SAH_1_val_1.fq.gz
Approx 85% complete for DR1015-SAH_1_val_1.fq.gz
Approx 90% complete for DR1015-SAH_1_val_1.fq.gz
Approx 95% complete for DR1015-SAH_1_val_1.fq.gz
Analysis complete for DR1015-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1015-SAH_2_val_2.fq.gz<<<

Started analysis of DR1015-SAH_2_val_2.fq.gz
Approx 5% complete for DR1015-SAH_2_val_2.fq.gz
Approx 10% complete for DR1015-SAH_2_val_2.fq.gz
Approx 15% complete for DR1015-SAH_2_val_2.fq.gz
Approx 20% complete for DR1015-SAH_2_val_2.fq.gz
Approx 25% complete for DR1015-SAH_2_val_2.fq.gz
Approx 30% complete for DR1015-SAH_2_val_2.fq.gz
Approx 35% complete for DR1015-SAH_2_val_2.fq.gz
Approx 40% complete for DR1015-SAH_2_val_2.fq.gz
Approx 45% complete for DR1015-SAH_2_val_2.fq.gz
Approx 50% complete for DR1015-SAH_2_val_2.fq.gz
Approx 55% complete for DR1015-SAH_2_val_2.fq.gz
Approx 60% complete for DR1015-SAH_2_val_2.fq.gz
Approx 65% complete for DR1015-SAH_2_val_2.fq.gz
Approx 70% complete for DR1015-SAH_2_val_2.fq.gz
Approx 75% complete for DR1015-SAH_2_val_2.fq.gz
Approx 80% complete for DR1015-SAH_2_val_2.fq.gz
Approx 85% complete for DR1015-SAH_2_val_2.fq.gz
Approx 90% complete for DR1015-SAH_2_val_2.fq.gz
Approx 95% complete for DR1015-SAH_2_val_2.fq.gz
Analysis complete for DR1015-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1015-SAH_1_trimmed.fq.gz and DR1015-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1018-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1018-E_1.fastq.gz data/DR1018-E_2.fastq.gz -o results/02.trimgalore/DR1018-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1018-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1018-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1018-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	19	CTGTCTCTTATA	34289	0.06
smallRNA	0	TGGAATTCTCGG	34289	0.00
Illumina	0	AGATCGGAAGAGC	34289	0.00
Using Nextera adapter for trimming (count: 19). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1018-E_trimgalore/DR1018-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1018-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1018-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1018-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1018-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.238 s (6.956 µs/read; 8.63 M reads/minute).

=== Summary ===

Total reads processed:                  34,289
Reads with adapters:                     2,533 (7.4%)
Reads written (passing filters):        34,289 (100.0%)

Total basepairs processed:    10,320,989 bp
Quality-trimmed:                  28,743 bp (0.3%)
Total written (filtered):     10,285,238 bp (99.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 2533 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 55.0%
  C: 11.6%
  G: 18.5%
  T: 14.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	1152	8572.2	0	1152
2	364	2143.1	0	364
3	897	535.8	0	897
4	92	133.9	0	92
5	3	33.5	0	3
15	1	0.0	1	1
25	1	0.0	1	1
27	1	0.0	1	1
29	1	0.0	1	1
40	1	0.0	1	0 1
43	3	0.0	1	3
49	1	0.0	1	1
56	1	0.0	1	0 1
76	2	0.0	1	1 1
78	4	0.0	1	4
79	1	0.0	1	1
80	1	0.0	1	0 1
81	1	0.0	1	0 1
84	1	0.0	1	1
88	1	0.0	1	1
102	1	0.0	1	1
139	1	0.0	1	0 1
283	1	0.0	1	1
284	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1018-E_1.fastq.gz
=============================================
34289 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1018-E_trimgalore/DR1018-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1018-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1018-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1018-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1018-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.274 s (7.991 µs/read; 7.51 M reads/minute).

=== Summary ===

Total reads processed:                  34,289
Reads with adapters:                    27,747 (80.9%)
Reads written (passing filters):        34,289 (100.0%)

Total basepairs processed:    10,320,989 bp
Quality-trimmed:                 379,818 bp (3.7%)
Total written (filtered):      9,910,722 bp (96.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 27747 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 4.1%
  C: 80.6%
  G: 12.7%
  T: 2.6%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	26816	8572.2	0	26816
2	671	2143.1	0	671
3	208	535.8	0	208
4	10	133.9	0	10
5	10	33.5	0	10
6	7	8.4	0	7
7	2	2.1	0	2
9	1	0.1	0	1
11	1	0.0	1	1
16	1	0.0	1	1
27	2	0.0	1	1 1
28	1	0.0	1	0 1
41	1	0.0	1	1
42	2	0.0	1	1 1
43	1	0.0	1	0 1
45	1	0.0	1	1
46	1	0.0	1	1
47	2	0.0	1	1 1
80	1	0.0	1	1
81	1	0.0	1	1
83	1	0.0	1	1
85	1	0.0	1	1
89	1	0.0	1	0 1
100	1	0.0	1	1
139	1	0.0	1	1
161	1	0.0	1	1
232	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1018-E_2.fastq.gz
=============================================
34289 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1018-E_1_trimmed.fq.gz and DR1018-E_2_trimmed.fq.gz
file_1: DR1018-E_1_trimmed.fq.gz, file_2: DR1018-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1018-E_1_trimmed.fq.gz and DR1018-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1018-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1018-E_2_val_2.fq.gz

Total number of sequences analysed: 34289

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 2428 (7.08%)


  >>> Now running FastQC on the validated data DR1018-E_1_val_1.fq.gz<<<

Started analysis of DR1018-E_1_val_1.fq.gz
Approx 5% complete for DR1018-E_1_val_1.fq.gz
Approx 10% complete for DR1018-E_1_val_1.fq.gz
Approx 15% complete for DR1018-E_1_val_1.fq.gz
Approx 20% complete for DR1018-E_1_val_1.fq.gz
Approx 25% complete for DR1018-E_1_val_1.fq.gz
Approx 30% complete for DR1018-E_1_val_1.fq.gz
Approx 35% complete for DR1018-E_1_val_1.fq.gz
Approx 40% complete for DR1018-E_1_val_1.fq.gz
Approx 45% complete for DR1018-E_1_val_1.fq.gz
Approx 50% complete for DR1018-E_1_val_1.fq.gz
Approx 55% complete for DR1018-E_1_val_1.fq.gz
Approx 60% complete for DR1018-E_1_val_1.fq.gz
Approx 65% complete for DR1018-E_1_val_1.fq.gz
Approx 70% complete for DR1018-E_1_val_1.fq.gz
Approx 75% complete for DR1018-E_1_val_1.fq.gz
Approx 80% complete for DR1018-E_1_val_1.fq.gz
Approx 85% complete for DR1018-E_1_val_1.fq.gz
Approx 90% complete for DR1018-E_1_val_1.fq.gz
Approx 95% complete for DR1018-E_1_val_1.fq.gz
Analysis complete for DR1018-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1018-E_2_val_2.fq.gz<<<

Started analysis of DR1018-E_2_val_2.fq.gz
Approx 5% complete for DR1018-E_2_val_2.fq.gz
Approx 10% complete for DR1018-E_2_val_2.fq.gz
Approx 15% complete for DR1018-E_2_val_2.fq.gz
Approx 20% complete for DR1018-E_2_val_2.fq.gz
Approx 25% complete for DR1018-E_2_val_2.fq.gz
Approx 30% complete for DR1018-E_2_val_2.fq.gz
Approx 35% complete for DR1018-E_2_val_2.fq.gz
Approx 40% complete for DR1018-E_2_val_2.fq.gz
Approx 45% complete for DR1018-E_2_val_2.fq.gz
Approx 50% complete for DR1018-E_2_val_2.fq.gz
Approx 55% complete for DR1018-E_2_val_2.fq.gz
Approx 60% complete for DR1018-E_2_val_2.fq.gz
Approx 65% complete for DR1018-E_2_val_2.fq.gz
Approx 70% complete for DR1018-E_2_val_2.fq.gz
Approx 75% complete for DR1018-E_2_val_2.fq.gz
Approx 80% complete for DR1018-E_2_val_2.fq.gz
Approx 85% complete for DR1018-E_2_val_2.fq.gz
Approx 90% complete for DR1018-E_2_val_2.fq.gz
Approx 95% complete for DR1018-E_2_val_2.fq.gz
Analysis complete for DR1018-E_2_val_2.fq.gz
Deleting both intermediate output files DR1018-E_1_trimmed.fq.gz and DR1018-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1018-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1018-SAH_1.fastq.gz data/DR1018-SAH_2.fastq.gz -o results/02.trimgalore/DR1018-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1018-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1018-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1018-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	61	CTGTCTCTTATA	105560	0.06
smallRNA	0	TGGAATTCTCGG	105560	0.00
Illumina	0	AGATCGGAAGAGC	105560	0.00
Using Nextera adapter for trimming (count: 61). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1018-SAH_trimgalore/DR1018-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1018-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1018-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1018-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1018-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.492 s (4.659 µs/read; 12.88 M reads/minute).

=== Summary ===

Total reads processed:                 105,560
Reads with adapters:                    12,194 (11.6%)
Reads written (passing filters):       105,560 (100.0%)

Total basepairs processed:    31,773,560 bp
Quality-trimmed:                 135,391 bp (0.4%)
Total written (filtered):     31,601,331 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 12194 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 53.6%
  C: 10.8%
  G: 16.9%
  T: 18.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	5253	26390.0	0	5253
2	1929	6597.5	0	1929
3	4226	1649.4	0	4226
4	673	412.3	0	673
5	35	103.1	0	35
6	5	25.8	0	5
19	1	0.0	1	0 1
20	1	0.0	1	1
34	1	0.0	1	0 1
35	1	0.0	1	0 1
45	1	0.0	1	1
78	3	0.0	1	3
81	3	0.0	1	2 1
82	1	0.0	1	1
83	1	0.0	1	1
84	2	0.0	1	0 2
85	1	0.0	1	1
86	1	0.0	1	0 1
87	1	0.0	1	1
88	1	0.0	1	1
89	2	0.0	1	2
95	1	0.0	1	1
97	2	0.0	1	2
100	1	0.0	1	1
101	1	0.0	1	1
103	1	0.0	1	1
104	1	0.0	1	1
105	1	0.0	1	1
106	1	0.0	1	1
112	1	0.0	1	1
114	1	0.0	1	1
126	1	0.0	1	1
136	1	0.0	1	1
148	1	0.0	1	1
152	1	0.0	1	1
154	1	0.0	1	1
162	1	0.0	1	1
164	1	0.0	1	1
165	1	0.0	1	1
169	1	0.0	1	1
185	1	0.0	1	1
189	1	0.0	1	1
200	1	0.0	1	1
212	1	0.0	1	1
214	1	0.0	1	1
215	2	0.0	1	2
217	1	0.0	1	1
224	1	0.0	1	1
226	1	0.0	1	0 1
232	2	0.0	1	2
235	1	0.0	1	1
256	1	0.0	1	1
262	1	0.0	1	0 1
263	2	0.0	1	2
272	1	0.0	1	1
278	1	0.0	1	1
284	1	0.0	1	1
288	2	0.0	1	1 1
290	5	0.0	1	5
291	5	0.0	1	3 2

RUN STATISTICS FOR INPUT FILE: data/DR1018-SAH_1.fastq.gz
=============================================
105560 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1018-SAH_trimgalore/DR1018-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1018-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1018-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1018-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1018-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.587 s (5.562 µs/read; 10.79 M reads/minute).

=== Summary ===

Total reads processed:                 105,560
Reads with adapters:                    84,858 (80.4%)
Reads written (passing filters):       105,560 (100.0%)

Total basepairs processed:    31,773,560 bp
Quality-trimmed:               1,005,201 bp (3.2%)
Total written (filtered):     30,670,871 bp (96.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 84858 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 4.1%
  C: 78.1%
  G: 15.2%
  T: 2.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	81889	26390.0	0	81889
2	2150	6597.5	0	2150
3	683	1649.4	0	683
4	31	412.3	0	31
5	26	103.1	0	26
6	9	25.8	0	9
7	1	6.4	0	1
35	2	0.0	1	1 1
39	1	0.0	1	1
42	1	0.0	1	1
81	2	0.0	1	2
82	4	0.0	1	4
83	4	0.0	1	4
84	1	0.0	1	1
85	2	0.0	1	2
86	2	0.0	1	2
87	2	0.0	1	2
89	3	0.0	1	3
91	1	0.0	1	1
92	3	0.0	1	3
93	2	0.0	1	2
94	2	0.0	1	2
95	1	0.0	1	1
99	1	0.0	1	1
102	1	0.0	1	1
105	1	0.0	1	1
109	1	0.0	1	1
113	2	0.0	1	2
120	1	0.0	1	1
121	2	0.0	1	2
134	1	0.0	1	1
136	1	0.0	1	0 1
137	1	0.0	1	1
138	1	0.0	1	1
139	1	0.0	1	1
157	1	0.0	1	0 1
160	1	0.0	1	0 1
162	1	0.0	1	1
171	1	0.0	1	1
172	1	0.0	1	1
178	1	0.0	1	0 1
179	1	0.0	1	1
181	1	0.0	1	1
191	1	0.0	1	1
195	1	0.0	1	1
196	2	0.0	1	2
203	1	0.0	1	1
206	1	0.0	1	1
210	1	0.0	1	1
211	2	0.0	1	1 1
247	1	0.0	1	1
279	1	0.0	1	1
287	1	0.0	1	1
290	2	0.0	1	1 1

RUN STATISTICS FOR INPUT FILE: data/DR1018-SAH_2.fastq.gz
=============================================
105560 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1018-SAH_1_trimmed.fq.gz and DR1018-SAH_2_trimmed.fq.gz
file_1: DR1018-SAH_1_trimmed.fq.gz, file_2: DR1018-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1018-SAH_1_trimmed.fq.gz and DR1018-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1018-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1018-SAH_2_val_2.fq.gz

Total number of sequences analysed: 105560

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 5767 (5.46%)


  >>> Now running FastQC on the validated data DR1018-SAH_1_val_1.fq.gz<<<

Started analysis of DR1018-SAH_1_val_1.fq.gz
Approx 5% complete for DR1018-SAH_1_val_1.fq.gz
Approx 10% complete for DR1018-SAH_1_val_1.fq.gz
Approx 15% complete for DR1018-SAH_1_val_1.fq.gz
Approx 20% complete for DR1018-SAH_1_val_1.fq.gz
Approx 25% complete for DR1018-SAH_1_val_1.fq.gz
Approx 30% complete for DR1018-SAH_1_val_1.fq.gz
Approx 35% complete for DR1018-SAH_1_val_1.fq.gz
Approx 40% complete for DR1018-SAH_1_val_1.fq.gz
Approx 45% complete for DR1018-SAH_1_val_1.fq.gz
Approx 50% complete for DR1018-SAH_1_val_1.fq.gz
Approx 55% complete for DR1018-SAH_1_val_1.fq.gz
Approx 60% complete for DR1018-SAH_1_val_1.fq.gz
Approx 65% complete for DR1018-SAH_1_val_1.fq.gz
Approx 70% complete for DR1018-SAH_1_val_1.fq.gz
Approx 75% complete for DR1018-SAH_1_val_1.fq.gz
Approx 80% complete for DR1018-SAH_1_val_1.fq.gz
Approx 85% complete for DR1018-SAH_1_val_1.fq.gz
Approx 90% complete for DR1018-SAH_1_val_1.fq.gz
Approx 95% complete for DR1018-SAH_1_val_1.fq.gz
Analysis complete for DR1018-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1018-SAH_2_val_2.fq.gz<<<

Started analysis of DR1018-SAH_2_val_2.fq.gz
Approx 5% complete for DR1018-SAH_2_val_2.fq.gz
Approx 10% complete for DR1018-SAH_2_val_2.fq.gz
Approx 15% complete for DR1018-SAH_2_val_2.fq.gz
Approx 20% complete for DR1018-SAH_2_val_2.fq.gz
Approx 25% complete for DR1018-SAH_2_val_2.fq.gz
Approx 30% complete for DR1018-SAH_2_val_2.fq.gz
Approx 35% complete for DR1018-SAH_2_val_2.fq.gz
Approx 40% complete for DR1018-SAH_2_val_2.fq.gz
Approx 45% complete for DR1018-SAH_2_val_2.fq.gz
Approx 50% complete for DR1018-SAH_2_val_2.fq.gz
Approx 55% complete for DR1018-SAH_2_val_2.fq.gz
Approx 60% complete for DR1018-SAH_2_val_2.fq.gz
Approx 65% complete for DR1018-SAH_2_val_2.fq.gz
Approx 70% complete for DR1018-SAH_2_val_2.fq.gz
Approx 75% complete for DR1018-SAH_2_val_2.fq.gz
Approx 80% complete for DR1018-SAH_2_val_2.fq.gz
Approx 85% complete for DR1018-SAH_2_val_2.fq.gz
Approx 90% complete for DR1018-SAH_2_val_2.fq.gz
Approx 95% complete for DR1018-SAH_2_val_2.fq.gz
Analysis complete for DR1018-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1018-SAH_1_trimmed.fq.gz and DR1018-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1019-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1019-E_1.fastq.gz data/DR1019-E_2.fastq.gz -o results/02.trimgalore/DR1019-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1019-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1019-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1019-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	353	CTGTCTCTTATA	72135	0.49
smallRNA	0	TGGAATTCTCGG	72135	0.00
Illumina	0	AGATCGGAAGAGC	72135	0.00
Using Nextera adapter for trimming (count: 353). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1019-E_trimgalore/DR1019-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1019-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1019-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1019-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1019-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.370 s (5.125 µs/read; 11.71 M reads/minute).

=== Summary ===

Total reads processed:                  72,135
Reads with adapters:                     8,512 (11.8%)
Reads written (passing filters):        72,135 (100.0%)

Total basepairs processed:    21,712,635 bp
Quality-trimmed:                  85,606 bp (0.4%)
Total written (filtered):     21,581,460 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 8512 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 43.7%
  C: 17.6%
  G: 18.5%
  T: 20.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4358	18033.8	0	4358
2	1550	4508.4	0	1550
3	1735	1127.1	0	1735
4	427	281.8	0	427
5	5	70.4	0	5
6	3	17.6	0	3
7	2	4.4	0	2
8	5	1.1	0	5
9	14	0.3	0	14
11	1	0.0	1	1
12	13	0.0	1	7 6
13	1	0.0	1	1
14	1	0.0	1	1
20	1	0.0	1	1
24	1	0.0	1	1
25	12	0.0	1	10 2
26	35	0.0	1	29 6
27	31	0.0	1	22 9
29	3	0.0	1	3
30	9	0.0	1	9
31	4	0.0	1	2 2
32	15	0.0	1	11 4
33	1	0.0	1	1
35	3	0.0	1	0 3
36	3	0.0	1	3
37	3	0.0	1	2 1
38	2	0.0	1	2
39	2	0.0	1	1 1
40	4	0.0	1	3 1
41	2	0.0	1	2
42	15	0.0	1	13 2
43	89	0.0	1	84 5
44	3	0.0	1	3
45	3	0.0	1	3
47	4	0.0	1	4
49	2	0.0	1	1 1
53	1	0.0	1	1
54	2	0.0	1	2
56	3	0.0	1	3
57	2	0.0	1	2
62	2	0.0	1	2
63	2	0.0	1	2
65	4	0.0	1	4
70	1	0.0	1	1
76	3	0.0	1	2 1
77	4	0.0	1	4
78	6	0.0	1	5 1
79	9	0.0	1	8 1
80	6	0.0	1	6
81	3	0.0	1	3
82	2	0.0	1	2
83	3	0.0	1	3
84	1	0.0	1	1
85	1	0.0	1	1
90	2	0.0	1	2
91	1	0.0	1	1
92	2	0.0	1	2
93	3	0.0	1	1 2
94	2	0.0	1	2
95	1	0.0	1	1
96	1	0.0	1	1
100	1	0.0	1	1
102	3	0.0	1	0 3
103	2	0.0	1	2
105	2	0.0	1	2
106	1	0.0	1	1
109	1	0.0	1	1
116	2	0.0	1	2
118	1	0.0	1	1
120	2	0.0	1	1 1
123	1	0.0	1	1
125	1	0.0	1	1
133	1	0.0	1	1
135	1	0.0	1	1
138	1	0.0	1	1
144	1	0.0	1	1
153	1	0.0	1	1
154	1	0.0	1	1
158	2	0.0	1	2
160	1	0.0	1	1
161	1	0.0	1	1
165	4	0.0	1	4
167	1	0.0	1	0 1
170	1	0.0	1	0 1
182	2	0.0	1	2
183	1	0.0	1	1
186	1	0.0	1	1
189	1	0.0	1	1
194	1	0.0	1	0 1
195	2	0.0	1	2
197	1	0.0	1	1
202	1	0.0	1	1
206	1	0.0	1	0 1
209	1	0.0	1	1
211	1	0.0	1	1
214	1	0.0	1	0 1
215	1	0.0	1	1
217	1	0.0	1	1
227	1	0.0	1	1
242	1	0.0	1	1
243	3	0.0	1	3
250	3	0.0	1	3
253	1	0.0	1	1
256	1	0.0	1	1
258	1	0.0	1	1
261	1	0.0	1	1
271	1	0.0	1	1
273	1	0.0	1	1
274	1	0.0	1	1
282	1	0.0	1	0 1
284	1	0.0	1	1
285	1	0.0	1	1
287	3	0.0	1	3
288	5	0.0	1	5
289	2	0.0	1	1 1
290	3	0.0	1	2 1
291	3	0.0	1	3

RUN STATISTICS FOR INPUT FILE: data/DR1019-E_1.fastq.gz
=============================================
72135 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1019-E_trimgalore/DR1019-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1019-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1019-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1019-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1019-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.421 s (5.838 µs/read; 10.28 M reads/minute).

=== Summary ===

Total reads processed:                  72,135
Reads with adapters:                    56,033 (77.7%)
Reads written (passing filters):        72,135 (100.0%)

Total basepairs processed:    21,712,635 bp
Quality-trimmed:                 767,711 bp (3.5%)
Total written (filtered):     20,864,094 bp (96.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 56033 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 4.3%
  C: 77.3%
  G: 15.2%
  T: 3.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	53508	18033.8	0	53508
2	1467	4508.4	0	1467
3	522	1127.1	0	522
4	103	281.8	0	103
5	48	70.4	0	48
6	50	17.6	0	50
7	5	4.4	0	5
8	3	1.1	0	3
9	5	0.3	0	5
10	4	0.1	1	2 2
11	3	0.0	1	3
12	5	0.0	1	5
13	1	0.0	1	1
15	3	0.0	1	3
16	5	0.0	1	4 1
17	1	0.0	1	1
18	3	0.0	1	1 2
19	3	0.0	1	2 1
20	3	0.0	1	3
21	5	0.0	1	3 2
22	1	0.0	1	1
23	6	0.0	1	4 2
24	6	0.0	1	4 2
25	6	0.0	1	2 4
26	9	0.0	1	5 4
27	11	0.0	1	6 5
28	5	0.0	1	4 1
29	6	0.0	1	4 2
30	2	0.0	1	1 1
31	12	0.0	1	9 3
32	8	0.0	1	8
33	2	0.0	1	1 1
34	1	0.0	1	1
35	1	0.0	1	0 1
36	1	0.0	1	1
38	8	0.0	1	6 2
39	5	0.0	1	4 1
40	9	0.0	1	8 1
41	8	0.0	1	6 2
42	44	0.0	1	35 9
43	7	0.0	1	6 1
44	2	0.0	1	2
46	1	0.0	1	1
48	1	0.0	1	0 1
49	3	0.0	1	3
50	3	0.0	1	1 2
53	2	0.0	1	1 1
54	1	0.0	1	1
55	4	0.0	1	4
56	2	0.0	1	1 1
58	1	0.0	1	1
59	2	0.0	1	1 1
69	1	0.0	1	1
76	1	0.0	1	1
79	1	0.0	1	1
80	1	0.0	1	1
81	2	0.0	1	2
82	11	0.0	1	10 1
83	5	0.0	1	4 1
84	2	0.0	1	2
85	7	0.0	1	6 1
86	5	0.0	1	4 1
87	1	0.0	1	1
88	4	0.0	1	4
90	1	0.0	1	0 1
93	1	0.0	1	0 1
94	1	0.0	1	1
97	1	0.0	1	0 1
99	1	0.0	1	1
103	1	0.0	1	1
104	1	0.0	1	1
105	1	0.0	1	1
107	1	0.0	1	1
109	2	0.0	1	2
110	1	0.0	1	1
111	1	0.0	1	1
118	1	0.0	1	1
119	2	0.0	1	1 1
127	2	0.0	1	2
129	1	0.0	1	1
131	2	0.0	1	2
133	1	0.0	1	1
135	1	0.0	1	1
137	1	0.0	1	1
140	2	0.0	1	0 2
150	1	0.0	1	1
152	1	0.0	1	0 1
156	1	0.0	1	1
157	1	0.0	1	1
158	1	0.0	1	1
161	2	0.0	1	2
165	1	0.0	1	1
169	1	0.0	1	1
173	1	0.0	1	1
175	3	0.0	1	3
176	1	0.0	1	1
178	1	0.0	1	1
181	1	0.0	1	1
185	1	0.0	1	1
186	1	0.0	1	1
187	1	0.0	1	1
191	1	0.0	1	0 1
194	1	0.0	1	1
198	1	0.0	1	1
204	1	0.0	1	1
207	1	0.0	1	1
208	1	0.0	1	0 1
216	1	0.0	1	1
226	1	0.0	1	0 1
227	1	0.0	1	1
236	1	0.0	1	0 1
249	1	0.0	1	0 1
258	1	0.0	1	0 1
272	1	0.0	1	0 1
287	2	0.0	1	2
288	1	0.0	1	1
289	1	0.0	1	1
290	1	0.0	1	1
291	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/DR1019-E_2.fastq.gz
=============================================
72135 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1019-E_1_trimmed.fq.gz and DR1019-E_2_trimmed.fq.gz
file_1: DR1019-E_1_trimmed.fq.gz, file_2: DR1019-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1019-E_1_trimmed.fq.gz and DR1019-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1019-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1019-E_2_val_2.fq.gz

Total number of sequences analysed: 72135

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4829 (6.69%)


  >>> Now running FastQC on the validated data DR1019-E_1_val_1.fq.gz<<<

Started analysis of DR1019-E_1_val_1.fq.gz
Approx 5% complete for DR1019-E_1_val_1.fq.gz
Approx 10% complete for DR1019-E_1_val_1.fq.gz
Approx 15% complete for DR1019-E_1_val_1.fq.gz
Approx 20% complete for DR1019-E_1_val_1.fq.gz
Approx 25% complete for DR1019-E_1_val_1.fq.gz
Approx 30% complete for DR1019-E_1_val_1.fq.gz
Approx 35% complete for DR1019-E_1_val_1.fq.gz
Approx 40% complete for DR1019-E_1_val_1.fq.gz
Approx 45% complete for DR1019-E_1_val_1.fq.gz
Approx 50% complete for DR1019-E_1_val_1.fq.gz
Approx 55% complete for DR1019-E_1_val_1.fq.gz
Approx 60% complete for DR1019-E_1_val_1.fq.gz
Approx 65% complete for DR1019-E_1_val_1.fq.gz
Approx 70% complete for DR1019-E_1_val_1.fq.gz
Approx 75% complete for DR1019-E_1_val_1.fq.gz
Approx 80% complete for DR1019-E_1_val_1.fq.gz
Approx 85% complete for DR1019-E_1_val_1.fq.gz
Approx 90% complete for DR1019-E_1_val_1.fq.gz
Approx 95% complete for DR1019-E_1_val_1.fq.gz
Analysis complete for DR1019-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1019-E_2_val_2.fq.gz<<<

Started analysis of DR1019-E_2_val_2.fq.gz
Approx 5% complete for DR1019-E_2_val_2.fq.gz
Approx 10% complete for DR1019-E_2_val_2.fq.gz
Approx 15% complete for DR1019-E_2_val_2.fq.gz
Approx 20% complete for DR1019-E_2_val_2.fq.gz
Approx 25% complete for DR1019-E_2_val_2.fq.gz
Approx 30% complete for DR1019-E_2_val_2.fq.gz
Approx 35% complete for DR1019-E_2_val_2.fq.gz
Approx 40% complete for DR1019-E_2_val_2.fq.gz
Approx 45% complete for DR1019-E_2_val_2.fq.gz
Approx 50% complete for DR1019-E_2_val_2.fq.gz
Approx 55% complete for DR1019-E_2_val_2.fq.gz
Approx 60% complete for DR1019-E_2_val_2.fq.gz
Approx 65% complete for DR1019-E_2_val_2.fq.gz
Approx 70% complete for DR1019-E_2_val_2.fq.gz
Approx 75% complete for DR1019-E_2_val_2.fq.gz
Approx 80% complete for DR1019-E_2_val_2.fq.gz
Approx 85% complete for DR1019-E_2_val_2.fq.gz
Approx 90% complete for DR1019-E_2_val_2.fq.gz
Approx 95% complete for DR1019-E_2_val_2.fq.gz
Analysis complete for DR1019-E_2_val_2.fq.gz
Deleting both intermediate output files DR1019-E_1_trimmed.fq.gz and DR1019-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1019-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1019-SAH_1.fastq.gz data/DR1019-SAH_2.fastq.gz -o results/02.trimgalore/DR1019-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1019-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1019-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1019-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	49	CTGTCTCTTATA	92690	0.05
smallRNA	0	TGGAATTCTCGG	92690	0.00
Illumina	0	AGATCGGAAGAGC	92690	0.00
Using Nextera adapter for trimming (count: 49). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1019-SAH_trimgalore/DR1019-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1019-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1019-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1019-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1019-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.439 s (4.732 µs/read; 12.68 M reads/minute).

=== Summary ===

Total reads processed:                  92,690
Reads with adapters:                     9,960 (10.7%)
Reads written (passing filters):        92,690 (100.0%)

Total basepairs processed:    27,899,690 bp
Quality-trimmed:                 109,329 bp (0.4%)
Total written (filtered):     27,763,076 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 9960 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 45.9%
  C: 11.1%
  G: 20.7%
  T: 22.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	5255	23172.5	0	5255
2	1639	5793.1	0	1639
3	2687	1448.3	0	2687
4	278	362.1	0	278
5	35	90.5	0	35
6	4	22.6	0	4
18	1	0.0	1	0 1
19	1	0.0	1	1
23	1	0.0	1	0 1
29	3	0.0	1	3
30	1	0.0	1	0 1
36	2	0.0	1	0 2
73	1	0.0	1	1
79	3	0.0	1	2 1
80	2	0.0	1	2
82	2	0.0	1	2
84	1	0.0	1	0 1
86	1	0.0	1	1
88	3	0.0	1	3
91	1	0.0	1	1
92	1	0.0	1	1
93	2	0.0	1	1 1
97	1	0.0	1	1
99	1	0.0	1	1
104	1	0.0	1	1
114	1	0.0	1	0 1
119	1	0.0	1	1
148	1	0.0	1	1
171	2	0.0	1	2
172	1	0.0	1	1
181	1	0.0	1	1
187	1	0.0	1	1
188	1	0.0	1	0 1
190	1	0.0	1	1
191	1	0.0	1	0 1
194	1	0.0	1	1
203	1	0.0	1	1
208	1	0.0	1	0 1
210	1	0.0	1	1
211	1	0.0	1	1
221	1	0.0	1	0 1
225	1	0.0	1	1
231	2	0.0	1	2
243	1	0.0	1	1
261	1	0.0	1	1
265	1	0.0	1	1
273	1	0.0	1	1
276	1	0.0	1	1
281	1	0.0	1	1
286	1	0.0	1	1
289	1	0.0	1	1
290	1	0.0	1	1
291	4	0.0	1	4

RUN STATISTICS FOR INPUT FILE: data/DR1019-SAH_1.fastq.gz
=============================================
92690 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1019-SAH_trimgalore/DR1019-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1019-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1019-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1019-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1019-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.498 s (5.369 µs/read; 11.17 M reads/minute).

=== Summary ===

Total reads processed:                  92,690
Reads with adapters:                    76,378 (82.4%)
Reads written (passing filters):        92,690 (100.0%)

Total basepairs processed:    27,899,690 bp
Quality-trimmed:                 823,962 bp (3.0%)
Total written (filtered):     26,989,504 bp (96.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 76378 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.8%
  C: 79.3%
  G: 14.6%
  T: 2.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	73859	23172.5	0	73859
2	1789	5793.1	0	1789
3	595	1448.3	0	595
4	47	362.1	0	47
5	20	90.5	0	20
6	8	22.6	0	8
11	1	0.0	1	0 1
16	1	0.0	1	0 1
17	1	0.0	1	0 1
29	2	0.0	1	1 1
31	1	0.0	1	1
33	1	0.0	1	1
36	1	0.0	1	1
44	1	0.0	1	0 1
46	1	0.0	1	1
48	1	0.0	1	1
65	1	0.0	1	1
76	1	0.0	1	0 1
80	1	0.0	1	1
81	1	0.0	1	1
82	3	0.0	1	3
83	1	0.0	1	1
84	4	0.0	1	4
85	3	0.0	1	3
87	1	0.0	1	1
88	1	0.0	1	1
89	2	0.0	1	1 1
91	1	0.0	1	1
94	1	0.0	1	1
97	1	0.0	1	0 1
101	1	0.0	1	1
118	1	0.0	1	1
121	1	0.0	1	1
126	1	0.0	1	1
128	1	0.0	1	1
130	3	0.0	1	3
137	1	0.0	1	0 1
142	2	0.0	1	2
149	1	0.0	1	1
151	1	0.0	1	1
158	1	0.0	1	1
161	1	0.0	1	1
162	1	0.0	1	1
165	1	0.0	1	1
168	1	0.0	1	1
176	1	0.0	1	1
183	1	0.0	1	1
188	2	0.0	1	2
194	1	0.0	1	1
220	1	0.0	1	1
221	1	0.0	1	1
289	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1019-SAH_2.fastq.gz
=============================================
92690 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1019-SAH_1_trimmed.fq.gz and DR1019-SAH_2_trimmed.fq.gz
file_1: DR1019-SAH_1_trimmed.fq.gz, file_2: DR1019-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1019-SAH_1_trimmed.fq.gz and DR1019-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1019-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1019-SAH_2_val_2.fq.gz

Total number of sequences analysed: 92690

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4838 (5.22%)


  >>> Now running FastQC on the validated data DR1019-SAH_1_val_1.fq.gz<<<

Started analysis of DR1019-SAH_1_val_1.fq.gz
Approx 5% complete for DR1019-SAH_1_val_1.fq.gz
Approx 10% complete for DR1019-SAH_1_val_1.fq.gz
Approx 15% complete for DR1019-SAH_1_val_1.fq.gz
Approx 20% complete for DR1019-SAH_1_val_1.fq.gz
Approx 25% complete for DR1019-SAH_1_val_1.fq.gz
Approx 30% complete for DR1019-SAH_1_val_1.fq.gz
Approx 35% complete for DR1019-SAH_1_val_1.fq.gz
Approx 40% complete for DR1019-SAH_1_val_1.fq.gz
Approx 45% complete for DR1019-SAH_1_val_1.fq.gz
Approx 50% complete for DR1019-SAH_1_val_1.fq.gz
Approx 55% complete for DR1019-SAH_1_val_1.fq.gz
Approx 60% complete for DR1019-SAH_1_val_1.fq.gz
Approx 65% complete for DR1019-SAH_1_val_1.fq.gz
Approx 70% complete for DR1019-SAH_1_val_1.fq.gz
Approx 75% complete for DR1019-SAH_1_val_1.fq.gz
Approx 80% complete for DR1019-SAH_1_val_1.fq.gz
Approx 85% complete for DR1019-SAH_1_val_1.fq.gz
Approx 90% complete for DR1019-SAH_1_val_1.fq.gz
Approx 95% complete for DR1019-SAH_1_val_1.fq.gz
Analysis complete for DR1019-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1019-SAH_2_val_2.fq.gz<<<

Started analysis of DR1019-SAH_2_val_2.fq.gz
Approx 5% complete for DR1019-SAH_2_val_2.fq.gz
Approx 10% complete for DR1019-SAH_2_val_2.fq.gz
Approx 15% complete for DR1019-SAH_2_val_2.fq.gz
Approx 20% complete for DR1019-SAH_2_val_2.fq.gz
Approx 25% complete for DR1019-SAH_2_val_2.fq.gz
Approx 30% complete for DR1019-SAH_2_val_2.fq.gz
Approx 35% complete for DR1019-SAH_2_val_2.fq.gz
Approx 40% complete for DR1019-SAH_2_val_2.fq.gz
Approx 45% complete for DR1019-SAH_2_val_2.fq.gz
Approx 50% complete for DR1019-SAH_2_val_2.fq.gz
Approx 55% complete for DR1019-SAH_2_val_2.fq.gz
Approx 60% complete for DR1019-SAH_2_val_2.fq.gz
Approx 65% complete for DR1019-SAH_2_val_2.fq.gz
Approx 70% complete for DR1019-SAH_2_val_2.fq.gz
Approx 75% complete for DR1019-SAH_2_val_2.fq.gz
Approx 80% complete for DR1019-SAH_2_val_2.fq.gz
Approx 85% complete for DR1019-SAH_2_val_2.fq.gz
Approx 90% complete for DR1019-SAH_2_val_2.fq.gz
Approx 95% complete for DR1019-SAH_2_val_2.fq.gz
Analysis complete for DR1019-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1019-SAH_1_trimmed.fq.gz and DR1019-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1020-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1020-SAH_1.fastq.gz data/DR1020-SAH_2.fastq.gz -o results/02.trimgalore/DR1020-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1020-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1020-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1020-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	54	CTGTCTCTTATA	90938	0.06
Illumina	0	AGATCGGAAGAGC	90938	0.00
smallRNA	0	TGGAATTCTCGG	90938	0.00
Using Nextera adapter for trimming (count: 54). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1020-SAH_trimgalore/DR1020-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1020-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1020-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1020-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1020-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.433 s (4.758 µs/read; 12.61 M reads/minute).

=== Summary ===

Total reads processed:                  90,938
Reads with adapters:                     9,766 (10.7%)
Reads written (passing filters):        90,938 (100.0%)

Total basepairs processed:    27,372,338 bp
Quality-trimmed:                 111,911 bp (0.4%)
Total written (filtered):     27,231,124 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 9766 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 45.4%
  C: 12.2%
  G: 19.7%
  T: 22.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	5172	22734.5	0	5172
2	1428	5683.6	0	1428
3	2526	1420.9	0	2526
4	537	355.2	0	537
5	31	88.8	0	31
6	6	22.2	0	6
9	1	0.3	0	1
36	1	0.0	1	0 1
78	2	0.0	1	2
79	1	0.0	1	1
81	3	0.0	1	3
82	1	0.0	1	1
84	1	0.0	1	1
85	1	0.0	1	1
87	1	0.0	1	1
88	1	0.0	1	0 1
89	1	0.0	1	1
92	1	0.0	1	1
99	1	0.0	1	1
111	1	0.0	1	1
123	1	0.0	1	1
126	2	0.0	1	2
127	1	0.0	1	1
134	1	0.0	1	1
138	2	0.0	1	2
140	1	0.0	1	1
141	1	0.0	1	1
145	1	0.0	1	1
147	1	0.0	1	0 1
149	1	0.0	1	1
151	1	0.0	1	0 1
152	1	0.0	1	1
163	1	0.0	1	1
164	1	0.0	1	1
178	1	0.0	1	1
186	1	0.0	1	1
188	1	0.0	1	1
190	2	0.0	1	2
194	2	0.0	1	2
198	1	0.0	1	1
199	1	0.0	1	0 1
202	1	0.0	1	1
206	2	0.0	1	2
208	2	0.0	1	1 1
221	1	0.0	1	1
226	1	0.0	1	0 1
227	1	0.0	1	0 1
228	1	0.0	1	0 1
230	1	0.0	1	1
233	1	0.0	1	1
252	1	0.0	1	1
269	1	0.0	1	1
273	1	0.0	1	0 1
276	2	0.0	1	2
278	1	0.0	1	0 1
281	1	0.0	1	1
287	2	0.0	1	2
290	1	0.0	1	1
291	3	0.0	1	3

RUN STATISTICS FOR INPUT FILE: data/DR1020-SAH_1.fastq.gz
=============================================
90938 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1020-SAH_trimgalore/DR1020-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1020-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1020-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1020-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1020-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.515 s (5.662 µs/read; 10.60 M reads/minute).

=== Summary ===

Total reads processed:                  90,938
Reads with adapters:                    74,556 (82.0%)
Reads written (passing filters):        90,938 (100.0%)

Total basepairs processed:    27,372,338 bp
Quality-trimmed:                 841,559 bp (3.1%)
Total written (filtered):     26,444,398 bp (96.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 74556 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.9%
  C: 79.3%
  G: 14.5%
  T: 2.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	71965	22734.5	0	71965
2	1845	5683.6	0	1845
3	599	1420.9	0	599
4	46	355.2	0	46
5	21	88.8	0	21
6	15	22.2	0	15
10	1	0.1	1	0 1
35	1	0.0	1	0 1
55	1	0.0	1	1
72	1	0.0	1	1
79	1	0.0	1	1
82	3	0.0	1	3
83	5	0.0	1	5
84	2	0.0	1	2
85	2	0.0	1	2
86	5	0.0	1	5
87	2	0.0	1	2
88	1	0.0	1	1
91	1	0.0	1	1
94	1	0.0	1	1
95	1	0.0	1	1
97	1	0.0	1	0 1
100	1	0.0	1	1
109	1	0.0	1	1
111	1	0.0	1	1
119	1	0.0	1	0 1
121	2	0.0	1	2
123	1	0.0	1	1
130	2	0.0	1	2
133	2	0.0	1	2
136	1	0.0	1	1
137	1	0.0	1	1
139	2	0.0	1	2
141	1	0.0	1	1
142	1	0.0	1	1
159	1	0.0	1	1
174	2	0.0	1	2
175	1	0.0	1	1
177	1	0.0	1	1
187	1	0.0	1	1
188	1	0.0	1	1
190	1	0.0	1	1
195	1	0.0	1	1
205	1	0.0	1	1
209	1	0.0	1	1
212	1	0.0	1	1
219	1	0.0	1	1
221	1	0.0	1	1
248	1	0.0	1	0 1
264	1	0.0	1	1
288	1	0.0	1	1
291	2	0.0	1	1 1

RUN STATISTICS FOR INPUT FILE: data/DR1020-SAH_2.fastq.gz
=============================================
90938 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1020-SAH_1_trimmed.fq.gz and DR1020-SAH_2_trimmed.fq.gz
file_1: DR1020-SAH_1_trimmed.fq.gz, file_2: DR1020-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1020-SAH_1_trimmed.fq.gz and DR1020-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1020-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1020-SAH_2_val_2.fq.gz

Total number of sequences analysed: 90938

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4911 (5.40%)


  >>> Now running FastQC on the validated data DR1020-SAH_1_val_1.fq.gz<<<

Started analysis of DR1020-SAH_1_val_1.fq.gz
Approx 5% complete for DR1020-SAH_1_val_1.fq.gz
Approx 10% complete for DR1020-SAH_1_val_1.fq.gz
Approx 15% complete for DR1020-SAH_1_val_1.fq.gz
Approx 20% complete for DR1020-SAH_1_val_1.fq.gz
Approx 25% complete for DR1020-SAH_1_val_1.fq.gz
Approx 30% complete for DR1020-SAH_1_val_1.fq.gz
Approx 35% complete for DR1020-SAH_1_val_1.fq.gz
Approx 40% complete for DR1020-SAH_1_val_1.fq.gz
Approx 45% complete for DR1020-SAH_1_val_1.fq.gz
Approx 50% complete for DR1020-SAH_1_val_1.fq.gz
Approx 55% complete for DR1020-SAH_1_val_1.fq.gz
Approx 60% complete for DR1020-SAH_1_val_1.fq.gz
Approx 65% complete for DR1020-SAH_1_val_1.fq.gz
Approx 70% complete for DR1020-SAH_1_val_1.fq.gz
Approx 75% complete for DR1020-SAH_1_val_1.fq.gz
Approx 80% complete for DR1020-SAH_1_val_1.fq.gz
Approx 85% complete for DR1020-SAH_1_val_1.fq.gz
Approx 90% complete for DR1020-SAH_1_val_1.fq.gz
Approx 95% complete for DR1020-SAH_1_val_1.fq.gz
Analysis complete for DR1020-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1020-SAH_2_val_2.fq.gz<<<

Started analysis of DR1020-SAH_2_val_2.fq.gz
Approx 5% complete for DR1020-SAH_2_val_2.fq.gz
Approx 10% complete for DR1020-SAH_2_val_2.fq.gz
Approx 15% complete for DR1020-SAH_2_val_2.fq.gz
Approx 20% complete for DR1020-SAH_2_val_2.fq.gz
Approx 25% complete for DR1020-SAH_2_val_2.fq.gz
Approx 30% complete for DR1020-SAH_2_val_2.fq.gz
Approx 35% complete for DR1020-SAH_2_val_2.fq.gz
Approx 40% complete for DR1020-SAH_2_val_2.fq.gz
Approx 45% complete for DR1020-SAH_2_val_2.fq.gz
Approx 50% complete for DR1020-SAH_2_val_2.fq.gz
Approx 55% complete for DR1020-SAH_2_val_2.fq.gz
Approx 60% complete for DR1020-SAH_2_val_2.fq.gz
Approx 65% complete for DR1020-SAH_2_val_2.fq.gz
Approx 70% complete for DR1020-SAH_2_val_2.fq.gz
Approx 75% complete for DR1020-SAH_2_val_2.fq.gz
Approx 80% complete for DR1020-SAH_2_val_2.fq.gz
Approx 85% complete for DR1020-SAH_2_val_2.fq.gz
Approx 90% complete for DR1020-SAH_2_val_2.fq.gz
Approx 95% complete for DR1020-SAH_2_val_2.fq.gz
Analysis complete for DR1020-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1020-SAH_1_trimmed.fq.gz and DR1020-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1021-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1021-SAH_1.fastq.gz data/DR1021-SAH_2.fastq.gz -o results/02.trimgalore/DR1021-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1021-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1021-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1021-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	88	CTGTCTCTTATA	104803	0.08
smallRNA	1	TGGAATTCTCGG	104803	0.00
Illumina	0	AGATCGGAAGAGC	104803	0.00
Using Nextera adapter for trimming (count: 88). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1021-SAH_trimgalore/DR1021-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1021-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1021-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1021-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1021-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.472 s (4.505 µs/read; 13.32 M reads/minute).

=== Summary ===

Total reads processed:                 104,803
Reads with adapters:                    11,637 (11.1%)
Reads written (passing filters):       104,803 (100.0%)

Total basepairs processed:    31,545,703 bp
Quality-trimmed:                 127,467 bp (0.4%)
Total written (filtered):     31,375,283 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 11637 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 46.5%
  C: 10.9%
  G: 20.3%
  T: 22.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	5785	26200.8	0	5785
2	1735	6550.2	0	1735
3	3192	1637.5	0	3192
4	778	409.4	0	778
5	36	102.3	0	36
6	1	25.6	0	1
26	1	0.0	1	1
36	4	0.0	1	0 4
70	1	0.0	1	0 1
73	2	0.0	1	2
78	3	0.0	1	2 1
79	2	0.0	1	2
80	1	0.0	1	1
81	2	0.0	1	2
82	1	0.0	1	1
83	3	0.0	1	3
84	1	0.0	1	1
86	1	0.0	1	1
87	2	0.0	1	2
92	1	0.0	1	1
94	1	0.0	1	1
95	1	0.0	1	1
96	2	0.0	1	2
110	1	0.0	1	0 1
119	1	0.0	1	1
120	1	0.0	1	1
128	1	0.0	1	0 1
132	1	0.0	1	1
142	2	0.0	1	2
145	1	0.0	1	1
146	1	0.0	1	1
150	1	0.0	1	1
153	1	0.0	1	0 1
156	2	0.0	1	1 1
158	1	0.0	1	1
161	1	0.0	1	0 1
165	1	0.0	1	1
168	1	0.0	1	0 1
179	1	0.0	1	1
185	1	0.0	1	1
186	1	0.0	1	1
188	2	0.0	1	2
190	1	0.0	1	1
191	1	0.0	1	1
193	1	0.0	1	1
197	1	0.0	1	1
199	1	0.0	1	1
208	1	0.0	1	1
210	1	0.0	1	1
213	2	0.0	1	1 1
214	1	0.0	1	1
218	1	0.0	1	1
223	1	0.0	1	0 1
229	1	0.0	1	0 1
230	1	0.0	1	1
231	1	0.0	1	1
237	1	0.0	1	1
238	1	0.0	1	0 1
241	1	0.0	1	1
242	2	0.0	1	2
250	2	0.0	1	1 1
251	1	0.0	1	1
252	2	0.0	1	1 1
257	1	0.0	1	1
259	1	0.0	1	0 1
261	1	0.0	1	1
266	1	0.0	1	1
268	1	0.0	1	0 1
270	1	0.0	1	1
279	2	0.0	1	2
286	1	0.0	1	1
287	3	0.0	1	2 1
288	4	0.0	1	4
289	4	0.0	1	4
290	3	0.0	1	3
291	11	0.0	1	10 1

RUN STATISTICS FOR INPUT FILE: data/DR1021-SAH_1.fastq.gz
=============================================
104803 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1021-SAH_trimgalore/DR1021-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1021-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1021-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1021-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1021-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.524 s (5.001 µs/read; 12.00 M reads/minute).

=== Summary ===

Total reads processed:                 104,803
Reads with adapters:                    85,384 (81.5%)
Reads written (passing filters):       104,803 (100.0%)

Total basepairs processed:    31,545,703 bp
Quality-trimmed:                 952,628 bp (3.0%)
Total written (filtered):     30,489,218 bp (96.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 85384 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.8%
  C: 78.8%
  G: 15.2%
  T: 2.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	82428	26200.8	0	82428
2	2087	6550.2	0	2087
3	670	1637.5	0	670
4	40	409.4	0	40
5	29	102.3	0	29
6	21	25.6	0	21
7	1	6.4	0	1
9	1	0.4	0	1
29	1	0.0	1	1
39	1	0.0	1	0 1
42	1	0.0	1	1
57	1	0.0	1	1
72	2	0.0	1	2
80	2	0.0	1	2
82	3	0.0	1	3
83	7	0.0	1	6 1
84	7	0.0	1	7
85	2	0.0	1	2
86	2	0.0	1	2
87	4	0.0	1	4
88	1	0.0	1	1
89	2	0.0	1	2
90	1	0.0	1	1
91	1	0.0	1	1
92	1	0.0	1	1
95	1	0.0	1	1
97	2	0.0	1	2
98	1	0.0	1	1
103	2	0.0	1	2
105	1	0.0	1	1
113	3	0.0	1	3
114	1	0.0	1	0 1
116	1	0.0	1	1
120	2	0.0	1	1 1
122	1	0.0	1	1
124	3	0.0	1	3
125	1	0.0	1	1
130	1	0.0	1	0 1
132	1	0.0	1	1
138	1	0.0	1	1
142	1	0.0	1	1
146	1	0.0	1	0 1
150	1	0.0	1	0 1
152	1	0.0	1	1
154	2	0.0	1	2
160	2	0.0	1	1 1
162	2	0.0	1	2
163	1	0.0	1	1
168	1	0.0	1	1
169	1	0.0	1	1
171	2	0.0	1	1 1
172	1	0.0	1	1
176	3	0.0	1	3
177	1	0.0	1	1
178	1	0.0	1	1
179	1	0.0	1	1
180	1	0.0	1	1
181	1	0.0	1	1
182	2	0.0	1	2
189	1	0.0	1	1
194	1	0.0	1	1
195	1	0.0	1	1
199	1	0.0	1	1
200	1	0.0	1	1
212	2	0.0	1	2
217	1	0.0	1	0 1
218	1	0.0	1	1
219	1	0.0	1	1
230	1	0.0	1	1
234	1	0.0	1	1
267	1	0.0	1	1
287	1	0.0	1	1
289	2	0.0	1	2
290	1	0.0	1	1
291	3	0.0	1	2 1

RUN STATISTICS FOR INPUT FILE: data/DR1021-SAH_2.fastq.gz
=============================================
104803 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1021-SAH_1_trimmed.fq.gz and DR1021-SAH_2_trimmed.fq.gz
file_1: DR1021-SAH_1_trimmed.fq.gz, file_2: DR1021-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1021-SAH_1_trimmed.fq.gz and DR1021-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1021-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1021-SAH_2_val_2.fq.gz

Total number of sequences analysed: 104803

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 5433 (5.18%)


  >>> Now running FastQC on the validated data DR1021-SAH_1_val_1.fq.gz<<<

Started analysis of DR1021-SAH_1_val_1.fq.gz
Approx 5% complete for DR1021-SAH_1_val_1.fq.gz
Approx 10% complete for DR1021-SAH_1_val_1.fq.gz
Approx 15% complete for DR1021-SAH_1_val_1.fq.gz
Approx 20% complete for DR1021-SAH_1_val_1.fq.gz
Approx 25% complete for DR1021-SAH_1_val_1.fq.gz
Approx 30% complete for DR1021-SAH_1_val_1.fq.gz
Approx 35% complete for DR1021-SAH_1_val_1.fq.gz
Approx 40% complete for DR1021-SAH_1_val_1.fq.gz
Approx 45% complete for DR1021-SAH_1_val_1.fq.gz
Approx 50% complete for DR1021-SAH_1_val_1.fq.gz
Approx 55% complete for DR1021-SAH_1_val_1.fq.gz
Approx 60% complete for DR1021-SAH_1_val_1.fq.gz
Approx 65% complete for DR1021-SAH_1_val_1.fq.gz
Approx 70% complete for DR1021-SAH_1_val_1.fq.gz
Approx 75% complete for DR1021-SAH_1_val_1.fq.gz
Approx 80% complete for DR1021-SAH_1_val_1.fq.gz
Approx 85% complete for DR1021-SAH_1_val_1.fq.gz
Approx 90% complete for DR1021-SAH_1_val_1.fq.gz
Approx 95% complete for DR1021-SAH_1_val_1.fq.gz
Analysis complete for DR1021-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1021-SAH_2_val_2.fq.gz<<<

Started analysis of DR1021-SAH_2_val_2.fq.gz
Approx 5% complete for DR1021-SAH_2_val_2.fq.gz
Approx 10% complete for DR1021-SAH_2_val_2.fq.gz
Approx 15% complete for DR1021-SAH_2_val_2.fq.gz
Approx 20% complete for DR1021-SAH_2_val_2.fq.gz
Approx 25% complete for DR1021-SAH_2_val_2.fq.gz
Approx 30% complete for DR1021-SAH_2_val_2.fq.gz
Approx 35% complete for DR1021-SAH_2_val_2.fq.gz
Approx 40% complete for DR1021-SAH_2_val_2.fq.gz
Approx 45% complete for DR1021-SAH_2_val_2.fq.gz
Approx 50% complete for DR1021-SAH_2_val_2.fq.gz
Approx 55% complete for DR1021-SAH_2_val_2.fq.gz
Approx 60% complete for DR1021-SAH_2_val_2.fq.gz
Approx 65% complete for DR1021-SAH_2_val_2.fq.gz
Approx 70% complete for DR1021-SAH_2_val_2.fq.gz
Approx 75% complete for DR1021-SAH_2_val_2.fq.gz
Approx 80% complete for DR1021-SAH_2_val_2.fq.gz
Approx 85% complete for DR1021-SAH_2_val_2.fq.gz
Approx 90% complete for DR1021-SAH_2_val_2.fq.gz
Approx 95% complete for DR1021-SAH_2_val_2.fq.gz
Analysis complete for DR1021-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1021-SAH_1_trimmed.fq.gz and DR1021-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1025-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1025-E_1.fastq.gz data/DR1025-E_2.fastq.gz -o results/02.trimgalore/DR1025-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1025-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1025-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1025-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	201	CTGTCTCTTATA	71311	0.28
Illumina	1	AGATCGGAAGAGC	71311	0.00
smallRNA	0	TGGAATTCTCGG	71311	0.00
Using Nextera adapter for trimming (count: 201). Second best hit was Illumina (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1025-E_trimgalore/DR1025-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1025-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1025-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1025-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1025-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.365 s (5.117 µs/read; 11.73 M reads/minute).

=== Summary ===

Total reads processed:                  71,311
Reads with adapters:                     8,842 (12.4%)
Reads written (passing filters):        71,311 (100.0%)

Total basepairs processed:    21,464,611 bp
Quality-trimmed:                  83,887 bp (0.4%)
Total written (filtered):     21,340,025 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 8842 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 45.3%
  C: 20.5%
  G: 15.3%
  T: 18.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4450	17827.8	0	4450
2	1688	4456.9	0	1688
3	2283	1114.2	0	2283
4	179	278.6	0	179
5	5	69.6	0	5
6	3	17.4	0	3
7	2	4.4	0	2
12	1	0.0	1	1
13	2	0.0	1	2
15	1	0.0	1	1
19	1	0.0	1	0 1
21	2	0.0	1	2
22	4	0.0	1	3 1
23	10	0.0	1	9 1
24	4	0.0	1	4
26	2	0.0	1	0 2
27	15	0.0	1	15
30	5	0.0	1	5
34	2	0.0	1	1 1
36	1	0.0	1	0 1
38	4	0.0	1	2 2
39	1	0.0	1	1
40	1	0.0	1	1
41	2	0.0	1	2
42	10	0.0	1	9 1
43	23	0.0	1	20 3
47	3	0.0	1	3
50	2	0.0	1	2
51	1	0.0	1	1
54	1	0.0	1	1
55	1	0.0	1	0 1
60	1	0.0	1	1
61	4	0.0	1	4
62	1	0.0	1	1
63	2	0.0	1	2
67	1	0.0	1	1
68	1	0.0	1	1
71	1	0.0	1	1
77	1	0.0	1	1
78	4	0.0	1	2 2
79	7	0.0	1	6 1
80	5	0.0	1	4 1
81	3	0.0	1	3
82	2	0.0	1	2
83	2	0.0	1	1 1
84	1	0.0	1	0 1
86	2	0.0	1	2
87	1	0.0	1	1
88	2	0.0	1	2
89	1	0.0	1	0 1
90	1	0.0	1	1
91	3	0.0	1	3
93	2	0.0	1	2
94	1	0.0	1	1
96	3	0.0	1	3
97	2	0.0	1	2
98	2	0.0	1	2
107	1	0.0	1	1
114	1	0.0	1	0 1
117	1	0.0	1	1
121	3	0.0	1	3
124	1	0.0	1	1
134	1	0.0	1	1
135	1	0.0	1	1
137	1	0.0	1	1
140	1	0.0	1	1
143	2	0.0	1	1 1
145	1	0.0	1	1
152	1	0.0	1	1
154	2	0.0	1	2
164	1	0.0	1	0 1
170	1	0.0	1	1
171	1	0.0	1	0 1
175	1	0.0	1	1
177	1	0.0	1	1
185	1	0.0	1	1
190	1	0.0	1	1
194	1	0.0	1	1
195	2	0.0	1	2
197	1	0.0	1	1
202	1	0.0	1	1
205	1	0.0	1	1
211	1	0.0	1	0 1
213	2	0.0	1	2
220	1	0.0	1	1
221	1	0.0	1	1
230	1	0.0	1	1
235	1	0.0	1	1
243	2	0.0	1	2
245	1	0.0	1	1
249	1	0.0	1	1
250	2	0.0	1	2
254	1	0.0	1	1
260	1	0.0	1	1
261	1	0.0	1	1
265	1	0.0	1	1
272	1	0.0	1	1
276	1	0.0	1	1
278	1	0.0	1	1
283	1	0.0	1	1
285	1	0.0	1	1
287	11	0.0	1	10 1
288	5	0.0	1	3 2
289	2	0.0	1	2
290	4	0.0	1	3 1
291	3	0.0	1	2 1

RUN STATISTICS FOR INPUT FILE: data/DR1025-E_1.fastq.gz
=============================================
71311 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1025-E_trimgalore/DR1025-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1025-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1025-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1025-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1025-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.434 s (6.081 µs/read; 9.87 M reads/minute).

=== Summary ===

Total reads processed:                  71,311
Reads with adapters:                    55,226 (77.4%)
Reads written (passing filters):        71,311 (100.0%)

Total basepairs processed:    21,464,611 bp
Quality-trimmed:                 729,814 bp (3.4%)
Total written (filtered):     20,658,305 bp (96.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 55226 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 4.4%
  C: 78.7%
  G: 14.1%
  T: 2.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	52951	17827.8	0	52951
2	1519	4456.9	0	1519
3	476	1114.2	0	476
4	48	278.6	0	48
5	24	69.6	0	24
6	4	17.4	0	4
7	4	4.4	0	4
10	1	0.1	1	0 1
11	3	0.0	1	0 3
12	1	0.0	1	1
15	3	0.0	1	2 1
17	1	0.0	1	1
18	2	0.0	1	1 1
19	5	0.0	1	3 2
22	5	0.0	1	2 3
23	4	0.0	1	1 3
24	4	0.0	1	2 2
25	1	0.0	1	1
26	1	0.0	1	0 1
27	8	0.0	1	4 4
28	2	0.0	1	0 2
29	5	0.0	1	4 1
30	3	0.0	1	3
31	3	0.0	1	3
32	2	0.0	1	0 2
33	2	0.0	1	1 1
34	1	0.0	1	1
35	1	0.0	1	1
36	1	0.0	1	1
38	1	0.0	1	1
39	1	0.0	1	1
40	4	0.0	1	4
41	1	0.0	1	1
42	9	0.0	1	8 1
44	4	0.0	1	4
46	2	0.0	1	2
47	1	0.0	1	1
48	2	0.0	1	2
49	1	0.0	1	1
50	1	0.0	1	1
53	1	0.0	1	1
57	1	0.0	1	1
58	1	0.0	1	0 1
59	1	0.0	1	1
78	2	0.0	1	2
81	6	0.0	1	6
82	5	0.0	1	5
83	2	0.0	1	2
84	4	0.0	1	4
85	6	0.0	1	6
86	6	0.0	1	5 1
87	2	0.0	1	2
91	1	0.0	1	1
92	3	0.0	1	3
94	1	0.0	1	1
97	1	0.0	1	1
98	1	0.0	1	1
99	1	0.0	1	1
101	2	0.0	1	1 1
106	1	0.0	1	1
114	2	0.0	1	2
119	1	0.0	1	1
122	2	0.0	1	2
124	1	0.0	1	1
125	2	0.0	1	2
126	1	0.0	1	1
127	1	0.0	1	0 1
140	1	0.0	1	1
141	1	0.0	1	1
142	1	0.0	1	1
143	1	0.0	1	1
147	1	0.0	1	1
151	1	0.0	1	1
152	1	0.0	1	1
154	1	0.0	1	1
156	1	0.0	1	1
157	1	0.0	1	1
158	1	0.0	1	1
162	1	0.0	1	1
163	1	0.0	1	1
165	1	0.0	1	1
166	1	0.0	1	1
167	2	0.0	1	2
170	1	0.0	1	1
171	1	0.0	1	1
173	1	0.0	1	1
174	2	0.0	1	0 2
175	1	0.0	1	1
177	1	0.0	1	0 1
178	1	0.0	1	1
180	1	0.0	1	1
183	1	0.0	1	1
186	1	0.0	1	1
187	1	0.0	1	1
189	2	0.0	1	1 1
191	1	0.0	1	1
192	2	0.0	1	2
195	3	0.0	1	3
196	1	0.0	1	1
201	1	0.0	1	1
204	1	0.0	1	1
206	1	0.0	1	0 1
207	1	0.0	1	1
221	1	0.0	1	0 1
223	1	0.0	1	1
225	1	0.0	1	1
227	1	0.0	1	0 1
240	2	0.0	1	2
241	1	0.0	1	0 1
249	1	0.0	1	1
258	1	0.0	1	1
275	1	0.0	1	0 1
279	1	0.0	1	1
287	2	0.0	1	1 1
288	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1025-E_2.fastq.gz
=============================================
71311 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1025-E_1_trimmed.fq.gz and DR1025-E_2_trimmed.fq.gz
file_1: DR1025-E_1_trimmed.fq.gz, file_2: DR1025-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1025-E_1_trimmed.fq.gz and DR1025-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1025-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1025-E_2_val_2.fq.gz

Total number of sequences analysed: 71311

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4725 (6.63%)


  >>> Now running FastQC on the validated data DR1025-E_1_val_1.fq.gz<<<

Started analysis of DR1025-E_1_val_1.fq.gz
Approx 5% complete for DR1025-E_1_val_1.fq.gz
Approx 10% complete for DR1025-E_1_val_1.fq.gz
Approx 15% complete for DR1025-E_1_val_1.fq.gz
Approx 20% complete for DR1025-E_1_val_1.fq.gz
Approx 25% complete for DR1025-E_1_val_1.fq.gz
Approx 30% complete for DR1025-E_1_val_1.fq.gz
Approx 35% complete for DR1025-E_1_val_1.fq.gz
Approx 40% complete for DR1025-E_1_val_1.fq.gz
Approx 45% complete for DR1025-E_1_val_1.fq.gz
Approx 50% complete for DR1025-E_1_val_1.fq.gz
Approx 55% complete for DR1025-E_1_val_1.fq.gz
Approx 60% complete for DR1025-E_1_val_1.fq.gz
Approx 65% complete for DR1025-E_1_val_1.fq.gz
Approx 70% complete for DR1025-E_1_val_1.fq.gz
Approx 75% complete for DR1025-E_1_val_1.fq.gz
Approx 80% complete for DR1025-E_1_val_1.fq.gz
Approx 85% complete for DR1025-E_1_val_1.fq.gz
Approx 90% complete for DR1025-E_1_val_1.fq.gz
Approx 95% complete for DR1025-E_1_val_1.fq.gz
Analysis complete for DR1025-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1025-E_2_val_2.fq.gz<<<

Started analysis of DR1025-E_2_val_2.fq.gz
Approx 5% complete for DR1025-E_2_val_2.fq.gz
Approx 10% complete for DR1025-E_2_val_2.fq.gz
Approx 15% complete for DR1025-E_2_val_2.fq.gz
Approx 20% complete for DR1025-E_2_val_2.fq.gz
Approx 25% complete for DR1025-E_2_val_2.fq.gz
Approx 30% complete for DR1025-E_2_val_2.fq.gz
Approx 35% complete for DR1025-E_2_val_2.fq.gz
Approx 40% complete for DR1025-E_2_val_2.fq.gz
Approx 45% complete for DR1025-E_2_val_2.fq.gz
Approx 50% complete for DR1025-E_2_val_2.fq.gz
Approx 55% complete for DR1025-E_2_val_2.fq.gz
Approx 60% complete for DR1025-E_2_val_2.fq.gz
Approx 65% complete for DR1025-E_2_val_2.fq.gz
Approx 70% complete for DR1025-E_2_val_2.fq.gz
Approx 75% complete for DR1025-E_2_val_2.fq.gz
Approx 80% complete for DR1025-E_2_val_2.fq.gz
Approx 85% complete for DR1025-E_2_val_2.fq.gz
Approx 90% complete for DR1025-E_2_val_2.fq.gz
Approx 95% complete for DR1025-E_2_val_2.fq.gz
Analysis complete for DR1025-E_2_val_2.fq.gz
Deleting both intermediate output files DR1025-E_1_trimmed.fq.gz and DR1025-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1025-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1025-SAH_1.fastq.gz data/DR1025-SAH_2.fastq.gz -o results/02.trimgalore/DR1025-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1025-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1025-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1025-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	82	CTGTCTCTTATA	113082	0.07
smallRNA	0	TGGAATTCTCGG	113082	0.00
Illumina	0	AGATCGGAAGAGC	113082	0.00
Using Nextera adapter for trimming (count: 82). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1025-SAH_trimgalore/DR1025-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1025-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1025-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1025-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1025-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.527 s (4.657 µs/read; 12.88 M reads/minute).

=== Summary ===

Total reads processed:                 113,082
Reads with adapters:                    12,209 (10.8%)
Reads written (passing filters):       113,082 (100.0%)

Total basepairs processed:    34,037,682 bp
Quality-trimmed:                 135,059 bp (0.4%)
Total written (filtered):     33,864,145 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 12209 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 52.0%
  C: 10.2%
  G: 18.5%
  T: 19.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	6024	28270.5	0	6024
2	1959	7067.6	0	1959
3	3592	1766.9	0	3592
4	497	441.7	0	497
5	41	110.4	0	41
6	5	27.6	0	5
8	1	1.7	0	1
34	1	0.0	1	0 1
36	1	0.0	1	0 1
79	1	0.0	1	1
80	1	0.0	1	1
82	2	0.0	1	1 1
83	2	0.0	1	2
87	1	0.0	1	1
88	1	0.0	1	1
89	1	0.0	1	1
90	1	0.0	1	1
92	2	0.0	1	2
93	2	0.0	1	2
94	2	0.0	1	2
95	1	0.0	1	1
96	1	0.0	1	1
98	1	0.0	1	1
100	1	0.0	1	1
106	1	0.0	1	1
114	2	0.0	1	2
117	2	0.0	1	2
118	1	0.0	1	1
119	2	0.0	1	2
122	1	0.0	1	1
127	2	0.0	1	2
132	1	0.0	1	0 1
133	2	0.0	1	2
134	1	0.0	1	1
140	1	0.0	1	1
141	2	0.0	1	2
144	2	0.0	1	2
151	3	0.0	1	2 1
162	2	0.0	1	2
164	1	0.0	1	1
165	2	0.0	1	2
167	2	0.0	1	2
178	1	0.0	1	0 1
185	1	0.0	1	1
199	1	0.0	1	1
206	1	0.0	1	1
209	1	0.0	1	1
213	2	0.0	1	2
215	1	0.0	1	1
220	2	0.0	1	2
226	1	0.0	1	1
227	2	0.0	1	2
229	1	0.0	1	1
231	1	0.0	1	1
237	1	0.0	1	1
240	1	0.0	1	0 1
245	1	0.0	1	1
246	1	0.0	1	1
258	1	0.0	1	1
261	1	0.0	1	1
264	1	0.0	1	1
268	1	0.0	1	1
272	1	0.0	1	1
278	1	0.0	1	1
284	1	0.0	1	1
286	1	0.0	1	1
288	3	0.0	1	2 1
289	2	0.0	1	2
290	3	0.0	1	3
291	3	0.0	1	3

RUN STATISTICS FOR INPUT FILE: data/DR1025-SAH_1.fastq.gz
=============================================
113082 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1025-SAH_trimgalore/DR1025-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1025-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1025-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1025-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1025-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.580 s (5.129 µs/read; 11.70 M reads/minute).

=== Summary ===

Total reads processed:                 113,082
Reads with adapters:                    92,443 (81.7%)
Reads written (passing filters):       113,082 (100.0%)

Total basepairs processed:    34,037,682 bp
Quality-trimmed:               1,004,320 bp (3.0%)
Total written (filtered):     32,924,422 bp (96.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 92443 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.9%
  C: 79.4%
  G: 14.4%
  T: 2.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	89424	28270.5	0	89424
2	2149	7067.6	0	2149
3	702	1766.9	0	702
4	38	441.7	0	38
5	23	110.4	0	23
6	10	27.6	0	10
7	1	6.9	0	1
10	1	0.1	1	0 1
27	1	0.0	1	0 1
30	1	0.0	1	0 1
35	1	0.0	1	0 1
49	1	0.0	1	1
55	1	0.0	1	0 1
61	1	0.0	1	1
77	1	0.0	1	0 1
79	1	0.0	1	1
82	3	0.0	1	3
83	6	0.0	1	5 1
84	4	0.0	1	4
85	2	0.0	1	2
86	3	0.0	1	3
87	3	0.0	1	3
88	2	0.0	1	2
91	2	0.0	1	2
92	1	0.0	1	1
94	2	0.0	1	2
95	1	0.0	1	0 1
98	1	0.0	1	1
99	2	0.0	1	2
102	2	0.0	1	2
103	1	0.0	1	1
110	1	0.0	1	0 1
112	1	0.0	1	1
113	1	0.0	1	0 1
115	2	0.0	1	2
118	1	0.0	1	1
121	1	0.0	1	1
122	1	0.0	1	1
123	1	0.0	1	0 1
124	1	0.0	1	1
127	1	0.0	1	1
130	2	0.0	1	2
135	1	0.0	1	0 1
136	1	0.0	1	1
140	1	0.0	1	1
145	2	0.0	1	2
146	2	0.0	1	2
148	2	0.0	1	1 1
152	1	0.0	1	1
157	1	0.0	1	1
167	1	0.0	1	1
171	1	0.0	1	1
172	1	0.0	1	1
174	1	0.0	1	1
175	2	0.0	1	2
181	1	0.0	1	1
184	1	0.0	1	1
189	1	0.0	1	1
192	1	0.0	1	1
193	1	0.0	1	0 1
203	2	0.0	1	2
205	1	0.0	1	1
207	1	0.0	1	1
212	2	0.0	1	1 1
223	1	0.0	1	1
225	1	0.0	1	1
226	1	0.0	1	1
228	1	0.0	1	0 1
236	1	0.0	1	1
287	1	0.0	1	1
289	1	0.0	1	1
290	1	0.0	1	1
291	3	0.0	1	3

RUN STATISTICS FOR INPUT FILE: data/DR1025-SAH_2.fastq.gz
=============================================
113082 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1025-SAH_1_trimmed.fq.gz and DR1025-SAH_2_trimmed.fq.gz
file_1: DR1025-SAH_1_trimmed.fq.gz, file_2: DR1025-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1025-SAH_1_trimmed.fq.gz and DR1025-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1025-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1025-SAH_2_val_2.fq.gz

Total number of sequences analysed: 113082

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 5741 (5.08%)


  >>> Now running FastQC on the validated data DR1025-SAH_1_val_1.fq.gz<<<

Started analysis of DR1025-SAH_1_val_1.fq.gz
Approx 5% complete for DR1025-SAH_1_val_1.fq.gz
Approx 10% complete for DR1025-SAH_1_val_1.fq.gz
Approx 15% complete for DR1025-SAH_1_val_1.fq.gz
Approx 20% complete for DR1025-SAH_1_val_1.fq.gz
Approx 25% complete for DR1025-SAH_1_val_1.fq.gz
Approx 30% complete for DR1025-SAH_1_val_1.fq.gz
Approx 35% complete for DR1025-SAH_1_val_1.fq.gz
Approx 40% complete for DR1025-SAH_1_val_1.fq.gz
Approx 45% complete for DR1025-SAH_1_val_1.fq.gz
Approx 50% complete for DR1025-SAH_1_val_1.fq.gz
Approx 55% complete for DR1025-SAH_1_val_1.fq.gz
Approx 60% complete for DR1025-SAH_1_val_1.fq.gz
Approx 65% complete for DR1025-SAH_1_val_1.fq.gz
Approx 70% complete for DR1025-SAH_1_val_1.fq.gz
Approx 75% complete for DR1025-SAH_1_val_1.fq.gz
Approx 80% complete for DR1025-SAH_1_val_1.fq.gz
Approx 85% complete for DR1025-SAH_1_val_1.fq.gz
Approx 90% complete for DR1025-SAH_1_val_1.fq.gz
Approx 95% complete for DR1025-SAH_1_val_1.fq.gz
Analysis complete for DR1025-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1025-SAH_2_val_2.fq.gz<<<

Started analysis of DR1025-SAH_2_val_2.fq.gz
Approx 5% complete for DR1025-SAH_2_val_2.fq.gz
Approx 10% complete for DR1025-SAH_2_val_2.fq.gz
Approx 15% complete for DR1025-SAH_2_val_2.fq.gz
Approx 20% complete for DR1025-SAH_2_val_2.fq.gz
Approx 25% complete for DR1025-SAH_2_val_2.fq.gz
Approx 30% complete for DR1025-SAH_2_val_2.fq.gz
Approx 35% complete for DR1025-SAH_2_val_2.fq.gz
Approx 40% complete for DR1025-SAH_2_val_2.fq.gz
Approx 45% complete for DR1025-SAH_2_val_2.fq.gz
Approx 50% complete for DR1025-SAH_2_val_2.fq.gz
Approx 55% complete for DR1025-SAH_2_val_2.fq.gz
Approx 60% complete for DR1025-SAH_2_val_2.fq.gz
Approx 65% complete for DR1025-SAH_2_val_2.fq.gz
Approx 70% complete for DR1025-SAH_2_val_2.fq.gz
Approx 75% complete for DR1025-SAH_2_val_2.fq.gz
Approx 80% complete for DR1025-SAH_2_val_2.fq.gz
Approx 85% complete for DR1025-SAH_2_val_2.fq.gz
Approx 90% complete for DR1025-SAH_2_val_2.fq.gz
Approx 95% complete for DR1025-SAH_2_val_2.fq.gz
Analysis complete for DR1025-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1025-SAH_1_trimmed.fq.gz and DR1025-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1027-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1027-E_1.fastq.gz data/DR1027-E_2.fastq.gz -o results/02.trimgalore/DR1027-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1027-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1027-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1027-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	433	CTGTCTCTTATA	82366	0.53
Illumina	0	AGATCGGAAGAGC	82366	0.00
smallRNA	0	TGGAATTCTCGG	82366	0.00
Using Nextera adapter for trimming (count: 433). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1027-E_trimgalore/DR1027-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1027-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1027-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1027-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1027-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.418 s (5.072 µs/read; 11.83 M reads/minute).

=== Summary ===

Total reads processed:                  82,366
Reads with adapters:                     8,781 (10.7%)
Reads written (passing filters):        82,366 (100.0%)

Total basepairs processed:    24,792,166 bp
Quality-trimmed:                  94,225 bp (0.4%)
Total written (filtered):     24,641,121 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 8781 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 51.7%
  C: 16.7%
  G: 16.9%
  T: 14.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3915	20591.5	0	3915
2	1536	5147.9	0	1536
3	2618	1287.0	0	2618
4	177	321.7	0	177
5	15	80.4	0	15
6	2	20.1	0	2
7	4	5.0	0	4
9	8	0.3	0	8
11	1	0.0	1	1
12	15	0.0	1	14 1
14	1	0.0	1	1
15	8	0.0	1	8
17	2	0.0	1	2
18	1	0.0	1	0 1
22	2	0.0	1	2
24	1	0.0	1	1
25	4	0.0	1	3 1
26	13	0.0	1	9 4
27	2	0.0	1	0 2
29	1	0.0	1	1
30	5	0.0	1	3 2
31	3	0.0	1	3
32	19	0.0	1	16 3
33	1	0.0	1	1
34	1	0.0	1	1
35	1	0.0	1	0 1
36	2	0.0	1	0 2
38	5	0.0	1	5
39	7	0.0	1	7
40	4	0.0	1	2 2
41	12	0.0	1	10 2
42	51	0.0	1	46 5
43	130	0.0	1	117 13
44	8	0.0	1	8
45	2	0.0	1	2
46	2	0.0	1	2
47	5	0.0	1	5
49	5	0.0	1	3 2
50	4	0.0	1	4
58	1	0.0	1	1
60	1	0.0	1	1
61	4	0.0	1	4
62	1	0.0	1	1
63	3	0.0	1	2 1
69	1	0.0	1	1
70	3	0.0	1	3
77	2	0.0	1	2
78	22	0.0	1	20 2
79	8	0.0	1	8
80	4	0.0	1	4
81	3	0.0	1	3
82	6	0.0	1	6
85	4	0.0	1	3 1
86	4	0.0	1	3 1
87	1	0.0	1	1
88	3	0.0	1	3
89	1	0.0	1	1
90	3	0.0	1	2 1
91	1	0.0	1	0 1
95	3	0.0	1	3
97	3	0.0	1	2 1
99	1	0.0	1	1
101	1	0.0	1	1
102	2	0.0	1	2
103	1	0.0	1	1
104	2	0.0	1	1 1
106	3	0.0	1	2 1
108	1	0.0	1	1
115	4	0.0	1	4
116	1	0.0	1	1
118	1	0.0	1	0 1
123	1	0.0	1	1
128	1	0.0	1	1
131	2	0.0	1	2
136	1	0.0	1	1
138	1	0.0	1	1
142	1	0.0	1	1
144	1	0.0	1	1
145	1	0.0	1	1
156	1	0.0	1	0 1
158	3	0.0	1	1 2
161	1	0.0	1	1
165	1	0.0	1	0 1
169	1	0.0	1	0 1
171	2	0.0	1	2
176	1	0.0	1	0 1
182	1	0.0	1	1
183	1	0.0	1	1
185	1	0.0	1	0 1
189	2	0.0	1	2
192	1	0.0	1	0 1
195	1	0.0	1	1
200	1	0.0	1	1
204	1	0.0	1	0 1
207	1	0.0	1	1
208	2	0.0	1	0 2
209	1	0.0	1	0 1
210	1	0.0	1	1
211	1	0.0	1	1
213	1	0.0	1	1
215	1	0.0	1	1
218	1	0.0	1	0 1
220	1	0.0	1	1
225	2	0.0	1	2
226	1	0.0	1	1
238	1	0.0	1	1
240	1	0.0	1	0 1
243	1	0.0	1	1
244	1	0.0	1	1
245	1	0.0	1	1
251	1	0.0	1	0 1
252	1	0.0	1	1
256	2	0.0	1	2
259	1	0.0	1	1
261	1	0.0	1	1
271	1	0.0	1	1
277	3	0.0	1	3
279	1	0.0	1	1
280	1	0.0	1	1
281	1	0.0	1	1
283	1	0.0	1	1
284	1	0.0	1	1
285	3	0.0	1	2 1
286	1	0.0	1	1
287	5	0.0	1	4 1
288	14	0.0	1	11 3
289	2	0.0	1	1 1
290	1	0.0	1	1
291	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/DR1027-E_1.fastq.gz
=============================================
82366 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1027-E_trimgalore/DR1027-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1027-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1027-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1027-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1027-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.471 s (5.722 µs/read; 10.49 M reads/minute).

=== Summary ===

Total reads processed:                  82,366
Reads with adapters:                    64,777 (78.6%)
Reads written (passing filters):        82,366 (100.0%)

Total basepairs processed:    24,792,166 bp
Quality-trimmed:                 826,939 bp (3.3%)
Total written (filtered):     23,868,943 bp (96.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 64777 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 4.1%
  C: 78.1%
  G: 14.6%
  T: 3.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	61928	20591.5	0	61928
2	1578	5147.9	0	1578
3	566	1287.0	0	566
4	133	321.7	0	133
5	63	80.4	0	63
6	76	20.1	0	76
7	5	5.0	0	5
9	5	0.3	0	5
10	2	0.1	1	1 1
11	12	0.0	1	9 3
12	6	0.0	1	3 3
13	3	0.0	1	2 1
14	4	0.0	1	4
16	3	0.0	1	2 1
18	2	0.0	1	1 1
19	4	0.0	1	2 2
20	4	0.0	1	4
21	4	0.0	1	3 1
22	4	0.0	1	3 1
23	3	0.0	1	2 1
24	2	0.0	1	2
25	1	0.0	1	1
26	9	0.0	1	6 3
27	8	0.0	1	6 2
28	6	0.0	1	2 4
29	10	0.0	1	7 3
30	2	0.0	1	1 1
31	15	0.0	1	12 3
32	7	0.0	1	4 3
33	3	0.0	1	2 1
34	4	0.0	1	4
35	4	0.0	1	3 1
36	5	0.0	1	4 1
37	9	0.0	1	6 3
38	28	0.0	1	24 4
39	18	0.0	1	17 1
40	5	0.0	1	3 2
41	11	0.0	1	8 3
42	25	0.0	1	20 5
43	33	0.0	1	28 5
44	9	0.0	1	9
45	10	0.0	1	10
46	7	0.0	1	7
47	5	0.0	1	5
48	1	0.0	1	1
49	5	0.0	1	4 1
51	1	0.0	1	1
54	1	0.0	1	1
56	1	0.0	1	1
58	1	0.0	1	1
60	1	0.0	1	1
62	1	0.0	1	1
63	1	0.0	1	0 1
69	1	0.0	1	1
70	1	0.0	1	1
75	1	0.0	1	0 1
81	3	0.0	1	2 1
82	1	0.0	1	0 1
83	2	0.0	1	2
84	8	0.0	1	6 2
85	8	0.0	1	6 2
86	5	0.0	1	5
87	4	0.0	1	3 1
89	2	0.0	1	2
90	1	0.0	1	1
91	5	0.0	1	5
92	2	0.0	1	2
93	2	0.0	1	2
94	1	0.0	1	1
96	1	0.0	1	1
97	2	0.0	1	2
98	4	0.0	1	3 1
101	1	0.0	1	1
102	1	0.0	1	0 1
104	2	0.0	1	2
108	1	0.0	1	1
109	1	0.0	1	1
110	2	0.0	1	2
116	1	0.0	1	1
118	2	0.0	1	2
134	1	0.0	1	1
136	1	0.0	1	1
138	1	0.0	1	1
144	1	0.0	1	1
145	1	0.0	1	1
146	2	0.0	1	1 1
147	1	0.0	1	1
152	1	0.0	1	1
154	1	0.0	1	1
160	1	0.0	1	1
165	2	0.0	1	1 1
166	1	0.0	1	1
167	2	0.0	1	2
171	1	0.0	1	1
172	1	0.0	1	0 1
175	1	0.0	1	1
176	1	0.0	1	1
177	1	0.0	1	1
182	1	0.0	1	1
183	1	0.0	1	0 1
186	1	0.0	1	1
187	1	0.0	1	1
189	1	0.0	1	1
202	1	0.0	1	1
203	2	0.0	1	1 1
204	2	0.0	1	2
205	1	0.0	1	1
206	1	0.0	1	1
207	1	0.0	1	1
208	1	0.0	1	1
211	1	0.0	1	1
213	1	0.0	1	1
214	1	0.0	1	1
217	2	0.0	1	1 1
219	1	0.0	1	1
221	1	0.0	1	0 1
223	2	0.0	1	1 1
227	1	0.0	1	0 1
233	1	0.0	1	1
243	1	0.0	1	0 1
247	1	0.0	1	1
267	1	0.0	1	1
274	1	0.0	1	1
282	1	0.0	1	1
285	1	0.0	1	1
286	2	0.0	1	1 1
287	2	0.0	1	2
288	1	0.0	1	1
289	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1027-E_2.fastq.gz
=============================================
82366 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1027-E_1_trimmed.fq.gz and DR1027-E_2_trimmed.fq.gz
file_1: DR1027-E_1_trimmed.fq.gz, file_2: DR1027-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1027-E_1_trimmed.fq.gz and DR1027-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1027-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1027-E_2_val_2.fq.gz

Total number of sequences analysed: 82366

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 5240 (6.36%)


  >>> Now running FastQC on the validated data DR1027-E_1_val_1.fq.gz<<<

Started analysis of DR1027-E_1_val_1.fq.gz
Approx 5% complete for DR1027-E_1_val_1.fq.gz
Approx 10% complete for DR1027-E_1_val_1.fq.gz
Approx 15% complete for DR1027-E_1_val_1.fq.gz
Approx 20% complete for DR1027-E_1_val_1.fq.gz
Approx 25% complete for DR1027-E_1_val_1.fq.gz
Approx 30% complete for DR1027-E_1_val_1.fq.gz
Approx 35% complete for DR1027-E_1_val_1.fq.gz
Approx 40% complete for DR1027-E_1_val_1.fq.gz
Approx 45% complete for DR1027-E_1_val_1.fq.gz
Approx 50% complete for DR1027-E_1_val_1.fq.gz
Approx 55% complete for DR1027-E_1_val_1.fq.gz
Approx 60% complete for DR1027-E_1_val_1.fq.gz
Approx 65% complete for DR1027-E_1_val_1.fq.gz
Approx 70% complete for DR1027-E_1_val_1.fq.gz
Approx 75% complete for DR1027-E_1_val_1.fq.gz
Approx 80% complete for DR1027-E_1_val_1.fq.gz
Approx 85% complete for DR1027-E_1_val_1.fq.gz
Approx 90% complete for DR1027-E_1_val_1.fq.gz
Approx 95% complete for DR1027-E_1_val_1.fq.gz
Analysis complete for DR1027-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1027-E_2_val_2.fq.gz<<<

Started analysis of DR1027-E_2_val_2.fq.gz
Approx 5% complete for DR1027-E_2_val_2.fq.gz
Approx 10% complete for DR1027-E_2_val_2.fq.gz
Approx 15% complete for DR1027-E_2_val_2.fq.gz
Approx 20% complete for DR1027-E_2_val_2.fq.gz
Approx 25% complete for DR1027-E_2_val_2.fq.gz
Approx 30% complete for DR1027-E_2_val_2.fq.gz
Approx 35% complete for DR1027-E_2_val_2.fq.gz
Approx 40% complete for DR1027-E_2_val_2.fq.gz
Approx 45% complete for DR1027-E_2_val_2.fq.gz
Approx 50% complete for DR1027-E_2_val_2.fq.gz
Approx 55% complete for DR1027-E_2_val_2.fq.gz
Approx 60% complete for DR1027-E_2_val_2.fq.gz
Approx 65% complete for DR1027-E_2_val_2.fq.gz
Approx 70% complete for DR1027-E_2_val_2.fq.gz
Approx 75% complete for DR1027-E_2_val_2.fq.gz
Approx 80% complete for DR1027-E_2_val_2.fq.gz
Approx 85% complete for DR1027-E_2_val_2.fq.gz
Approx 90% complete for DR1027-E_2_val_2.fq.gz
Approx 95% complete for DR1027-E_2_val_2.fq.gz
Analysis complete for DR1027-E_2_val_2.fq.gz
Deleting both intermediate output files DR1027-E_1_trimmed.fq.gz and DR1027-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1027-H sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1027-H_1.fastq.gz data/DR1027-H_2.fastq.gz -o results/02.trimgalore/DR1027-H_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1027-H_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1027-H_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1027-H_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	141	CTGTCTCTTATA	129732	0.11
smallRNA	0	TGGAATTCTCGG	129732	0.00
Illumina	0	AGATCGGAAGAGC	129732	0.00
Using Nextera adapter for trimming (count: 141). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1027-H_trimgalore/DR1027-H_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1027-H_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1027-H_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1027-H_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1027-H_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.558 s (4.302 µs/read; 13.95 M reads/minute).

=== Summary ===

Total reads processed:                 129,732
Reads with adapters:                    13,478 (10.4%)
Reads written (passing filters):       129,732 (100.0%)

Total basepairs processed:    39,049,332 bp
Quality-trimmed:                 159,127 bp (0.4%)
Total written (filtered):     38,854,794 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 13478 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 47.5%
  C: 11.7%
  G: 21.3%
  T: 19.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	6403	32433.0	0	6403
2	2516	8108.2	0	2516
3	4107	2027.1	0	4107
4	271	506.8	0	271
5	17	126.7	0	17
6	4	31.7	0	4
11	1	0.0	1	1
14	1	0.0	1	1
17	1	0.0	1	1
18	1	0.0	1	1
20	2	0.0	1	1 1
22	1	0.0	1	1
25	1	0.0	1	1
26	1	0.0	1	0 1
29	3	0.0	1	3
30	2	0.0	1	2
31	2	0.0	1	0 2
32	1	0.0	1	1
40	1	0.0	1	1
41	2	0.0	1	1 1
42	6	0.0	1	4 2
43	79	0.0	1	73 6
44	2	0.0	1	2
45	2	0.0	1	2
48	1	0.0	1	1
49	1	0.0	1	1
50	2	0.0	1	2
75	1	0.0	1	1
78	6	0.0	1	6
79	8	0.0	1	8
80	5	0.0	1	5
81	3	0.0	1	2 1
82	1	0.0	1	1
83	2	0.0	1	2
85	1	0.0	1	1
88	1	0.0	1	1
100	1	0.0	1	1
102	1	0.0	1	1
105	1	0.0	1	1
111	1	0.0	1	1
121	1	0.0	1	1
129	1	0.0	1	1
163	1	0.0	1	1
169	1	0.0	1	1
178	1	0.0	1	1
198	1	0.0	1	1
204	1	0.0	1	0 1
208	1	0.0	1	1
224	1	0.0	1	1
265	1	0.0	1	0 1
268	1	0.0	1	0 1
272	1	0.0	1	1
273	1	0.0	1	0 1
286	1	0.0	1	1
287	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1027-H_1.fastq.gz
=============================================
129732 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1027-H_trimgalore/DR1027-H_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1027-H_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1027-H_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1027-H_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1027-H_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.618 s (4.764 µs/read; 12.59 M reads/minute).

=== Summary ===

Total reads processed:                 129,732
Reads with adapters:                   107,513 (82.9%)
Reads written (passing filters):       129,732 (100.0%)

Total basepairs processed:    39,049,332 bp
Quality-trimmed:               1,005,633 bp (2.6%)
Total written (filtered):     37,924,540 bp (97.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 107513 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.6%
  C: 81.2%
  G: 13.2%
  T: 2.0%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	104334	32433.0	0	104334
2	2202	8108.2	0	2202
3	720	2027.1	0	720
4	44	506.8	0	44
5	33	126.7	0	33
6	30	31.7	0	30
7	2	7.9	0	2
8	2	2.0	0	2
10	1	0.1	1	0 1
11	2	0.0	1	0 2
12	1	0.0	1	1
13	1	0.0	1	1
15	1	0.0	1	1
16	4	0.0	1	3 1
17	1	0.0	1	1
19	1	0.0	1	0 1
21	2	0.0	1	2
22	1	0.0	1	1
23	3	0.0	1	3
24	2	0.0	1	1 1
26	2	0.0	1	1 1
27	6	0.0	1	6
28	3	0.0	1	1 2
29	3	0.0	1	3
31	4	0.0	1	4
32	7	0.0	1	6 1
33	5	0.0	1	4 1
34	3	0.0	1	0 3
35	3	0.0	1	3
37	6	0.0	1	5 1
38	2	0.0	1	2
39	7	0.0	1	5 2
40	2	0.0	1	1 1
41	11	0.0	1	8 3
42	12	0.0	1	10 2
43	3	0.0	1	2 1
44	4	0.0	1	4
45	3	0.0	1	2 1
47	1	0.0	1	1
48	2	0.0	1	2
51	1	0.0	1	1
53	1	0.0	1	1
54	1	0.0	1	1
58	1	0.0	1	1
59	1	0.0	1	1
60	2	0.0	1	2
63	1	0.0	1	1
65	1	0.0	1	0 1
74	1	0.0	1	1
83	5	0.0	1	5
84	1	0.0	1	1
85	2	0.0	1	2
86	1	0.0	1	1
88	2	0.0	1	2
89	1	0.0	1	1
92	1	0.0	1	1
99	1	0.0	1	1
101	1	0.0	1	1
114	1	0.0	1	1
123	1	0.0	1	0 1
129	1	0.0	1	1
156	1	0.0	1	1
157	1	0.0	1	1
159	1	0.0	1	1
182	1	0.0	1	1
183	1	0.0	1	1
196	1	0.0	1	1
222	1	0.0	1	1
245	1	0.0	1	1
288	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1027-H_2.fastq.gz
=============================================
129732 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1027-H_1_trimmed.fq.gz and DR1027-H_2_trimmed.fq.gz
file_1: DR1027-H_1_trimmed.fq.gz, file_2: DR1027-H_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1027-H_1_trimmed.fq.gz and DR1027-H_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1027-H_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1027-H_2_val_2.fq.gz

Total number of sequences analysed: 129732

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 5966 (4.60%)


  >>> Now running FastQC on the validated data DR1027-H_1_val_1.fq.gz<<<

Started analysis of DR1027-H_1_val_1.fq.gz
Approx 5% complete for DR1027-H_1_val_1.fq.gz
Approx 10% complete for DR1027-H_1_val_1.fq.gz
Approx 15% complete for DR1027-H_1_val_1.fq.gz
Approx 20% complete for DR1027-H_1_val_1.fq.gz
Approx 25% complete for DR1027-H_1_val_1.fq.gz
Approx 30% complete for DR1027-H_1_val_1.fq.gz
Approx 35% complete for DR1027-H_1_val_1.fq.gz
Approx 40% complete for DR1027-H_1_val_1.fq.gz
Approx 45% complete for DR1027-H_1_val_1.fq.gz
Approx 50% complete for DR1027-H_1_val_1.fq.gz
Approx 55% complete for DR1027-H_1_val_1.fq.gz
Approx 60% complete for DR1027-H_1_val_1.fq.gz
Approx 65% complete for DR1027-H_1_val_1.fq.gz
Approx 70% complete for DR1027-H_1_val_1.fq.gz
Approx 75% complete for DR1027-H_1_val_1.fq.gz
Approx 80% complete for DR1027-H_1_val_1.fq.gz
Approx 85% complete for DR1027-H_1_val_1.fq.gz
Approx 90% complete for DR1027-H_1_val_1.fq.gz
Approx 95% complete for DR1027-H_1_val_1.fq.gz
Analysis complete for DR1027-H_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1027-H_2_val_2.fq.gz<<<

Started analysis of DR1027-H_2_val_2.fq.gz
Approx 5% complete for DR1027-H_2_val_2.fq.gz
Approx 10% complete for DR1027-H_2_val_2.fq.gz
Approx 15% complete for DR1027-H_2_val_2.fq.gz
Approx 20% complete for DR1027-H_2_val_2.fq.gz
Approx 25% complete for DR1027-H_2_val_2.fq.gz
Approx 30% complete for DR1027-H_2_val_2.fq.gz
Approx 35% complete for DR1027-H_2_val_2.fq.gz
Approx 40% complete for DR1027-H_2_val_2.fq.gz
Approx 45% complete for DR1027-H_2_val_2.fq.gz
Approx 50% complete for DR1027-H_2_val_2.fq.gz
Approx 55% complete for DR1027-H_2_val_2.fq.gz
Approx 60% complete for DR1027-H_2_val_2.fq.gz
Approx 65% complete for DR1027-H_2_val_2.fq.gz
Approx 70% complete for DR1027-H_2_val_2.fq.gz
Approx 75% complete for DR1027-H_2_val_2.fq.gz
Approx 80% complete for DR1027-H_2_val_2.fq.gz
Approx 85% complete for DR1027-H_2_val_2.fq.gz
Approx 90% complete for DR1027-H_2_val_2.fq.gz
Approx 95% complete for DR1027-H_2_val_2.fq.gz
Analysis complete for DR1027-H_2_val_2.fq.gz
Deleting both intermediate output files DR1027-H_1_trimmed.fq.gz and DR1027-H_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1027-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1027-SAH_1.fastq.gz data/DR1027-SAH_2.fastq.gz -o results/02.trimgalore/DR1027-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1027-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1027-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1027-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	68	CTGTCTCTTATA	94012	0.07
smallRNA	0	TGGAATTCTCGG	94012	0.00
Illumina	0	AGATCGGAAGAGC	94012	0.00
Using Nextera adapter for trimming (count: 68). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1027-SAH_trimgalore/DR1027-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1027-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1027-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1027-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1027-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.446 s (4.744 µs/read; 12.65 M reads/minute).

=== Summary ===

Total reads processed:                  94,012
Reads with adapters:                     9,913 (10.5%)
Reads written (passing filters):        94,012 (100.0%)

Total basepairs processed:    28,297,612 bp
Quality-trimmed:                 108,141 bp (0.4%)
Total written (filtered):     28,156,131 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 9913 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 51.6%
  C: 9.8%
  G: 20.3%
  T: 18.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	5020	23503.0	0	5020
2	1777	5875.8	0	1777
3	2714	1468.9	0	2714
4	275	367.2	0	275
5	35	91.8	0	35
6	3	23.0	0	3
7	1	5.7	0	1
36	3	0.0	1	0 3
78	1	0.0	1	1
79	3	0.0	1	2 1
80	2	0.0	1	2
82	2	0.0	1	1 1
83	1	0.0	1	0 1
84	3	0.0	1	2 1
86	1	0.0	1	1
89	1	0.0	1	1
92	1	0.0	1	0 1
93	1	0.0	1	1
95	2	0.0	1	1 1
98	1	0.0	1	1
104	1	0.0	1	1
108	2	0.0	1	2
112	1	0.0	1	1
114	1	0.0	1	1
115	1	0.0	1	1
116	1	0.0	1	1
127	1	0.0	1	0 1
128	1	0.0	1	1
137	1	0.0	1	1
138	1	0.0	1	1
140	1	0.0	1	0 1
150	1	0.0	1	1
151	1	0.0	1	0 1
154	1	0.0	1	1
155	1	0.0	1	1
156	1	0.0	1	1
159	2	0.0	1	2
163	1	0.0	1	1
167	1	0.0	1	1
168	1	0.0	1	1
174	1	0.0	1	1
180	1	0.0	1	0 1
181	1	0.0	1	0 1
183	2	0.0	1	2
184	1	0.0	1	1
189	1	0.0	1	1
191	1	0.0	1	0 1
192	1	0.0	1	1
193	1	0.0	1	1
195	1	0.0	1	1
201	1	0.0	1	0 1
203	1	0.0	1	1
206	2	0.0	1	1 1
208	1	0.0	1	1
210	1	0.0	1	1
217	1	0.0	1	1
220	1	0.0	1	1
222	1	0.0	1	1
239	1	0.0	1	1
242	1	0.0	1	1
244	1	0.0	1	1
250	1	0.0	1	1
257	1	0.0	1	1
267	1	0.0	1	0 1
269	1	0.0	1	0 1
273	1	0.0	1	1
274	1	0.0	1	1
279	1	0.0	1	1
283	1	0.0	1	1
284	1	0.0	1	1
285	2	0.0	1	2
286	1	0.0	1	1
288	3	0.0	1	3
291	6	0.0	1	5 1

RUN STATISTICS FOR INPUT FILE: data/DR1027-SAH_1.fastq.gz
=============================================
94012 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1027-SAH_trimgalore/DR1027-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1027-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1027-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1027-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1027-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.508 s (5.404 µs/read; 11.10 M reads/minute).

=== Summary ===

Total reads processed:                  94,012
Reads with adapters:                    76,510 (81.4%)
Reads written (passing filters):        94,012 (100.0%)

Total basepairs processed:    28,297,612 bp
Quality-trimmed:                 767,794 bp (2.7%)
Total written (filtered):     27,438,453 bp (97.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 76510 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.6%
  C: 79.7%
  G: 14.7%
  T: 2.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	73982	23503.0	0	73982
2	1732	5875.8	0	1732
3	635	1468.9	0	635
4	48	367.2	0	48
5	20	91.8	0	20
6	5	23.0	0	5
7	1	5.7	0	1
10	1	0.1	1	0 1
15	1	0.0	1	0 1
24	1	0.0	1	0 1
32	1	0.0	1	1
36	1	0.0	1	0 1
58	1	0.0	1	1
59	2	0.0	1	2
65	1	0.0	1	1
74	1	0.0	1	1
81	1	0.0	1	1
82	1	0.0	1	1
83	5	0.0	1	5
84	3	0.0	1	3
85	2	0.0	1	2
86	3	0.0	1	3
87	1	0.0	1	1
88	2	0.0	1	2
90	1	0.0	1	1
95	1	0.0	1	1
96	1	0.0	1	1
97	2	0.0	1	1 1
99	1	0.0	1	1
100	1	0.0	1	1
101	1	0.0	1	1
102	1	0.0	1	1
103	1	0.0	1	1
109	1	0.0	1	1
110	2	0.0	1	2
111	1	0.0	1	1
117	1	0.0	1	0 1
119	3	0.0	1	2 1
125	1	0.0	1	1
129	1	0.0	1	1
131	1	0.0	1	1
132	1	0.0	1	1
133	1	0.0	1	1
136	2	0.0	1	2
137	2	0.0	1	2
141	1	0.0	1	1
155	1	0.0	1	1
156	1	0.0	1	1
158	1	0.0	1	0 1
160	1	0.0	1	1
164	1	0.0	1	1
170	1	0.0	1	1
174	2	0.0	1	2
175	2	0.0	1	1 1
177	1	0.0	1	1
181	1	0.0	1	1
184	1	0.0	1	1
194	1	0.0	1	1
199	2	0.0	1	2
201	1	0.0	1	1
204	1	0.0	1	1
211	1	0.0	1	1
215	1	0.0	1	1
218	1	0.0	1	1
224	3	0.0	1	3
247	1	0.0	1	1
288	2	0.0	1	2
290	2	0.0	1	2
291	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/DR1027-SAH_2.fastq.gz
=============================================
94012 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1027-SAH_1_trimmed.fq.gz and DR1027-SAH_2_trimmed.fq.gz
file_1: DR1027-SAH_1_trimmed.fq.gz, file_2: DR1027-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1027-SAH_1_trimmed.fq.gz and DR1027-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1027-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1027-SAH_2_val_2.fq.gz

Total number of sequences analysed: 94012

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4198 (4.47%)


  >>> Now running FastQC on the validated data DR1027-SAH_1_val_1.fq.gz<<<

Started analysis of DR1027-SAH_1_val_1.fq.gz
Approx 5% complete for DR1027-SAH_1_val_1.fq.gz
Approx 10% complete for DR1027-SAH_1_val_1.fq.gz
Approx 15% complete for DR1027-SAH_1_val_1.fq.gz
Approx 20% complete for DR1027-SAH_1_val_1.fq.gz
Approx 25% complete for DR1027-SAH_1_val_1.fq.gz
Approx 30% complete for DR1027-SAH_1_val_1.fq.gz
Approx 35% complete for DR1027-SAH_1_val_1.fq.gz
Approx 40% complete for DR1027-SAH_1_val_1.fq.gz
Approx 45% complete for DR1027-SAH_1_val_1.fq.gz
Approx 50% complete for DR1027-SAH_1_val_1.fq.gz
Approx 55% complete for DR1027-SAH_1_val_1.fq.gz
Approx 60% complete for DR1027-SAH_1_val_1.fq.gz
Approx 65% complete for DR1027-SAH_1_val_1.fq.gz
Approx 70% complete for DR1027-SAH_1_val_1.fq.gz
Approx 75% complete for DR1027-SAH_1_val_1.fq.gz
Approx 80% complete for DR1027-SAH_1_val_1.fq.gz
Approx 85% complete for DR1027-SAH_1_val_1.fq.gz
Approx 90% complete for DR1027-SAH_1_val_1.fq.gz
Approx 95% complete for DR1027-SAH_1_val_1.fq.gz
Analysis complete for DR1027-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1027-SAH_2_val_2.fq.gz<<<

Started analysis of DR1027-SAH_2_val_2.fq.gz
Approx 5% complete for DR1027-SAH_2_val_2.fq.gz
Approx 10% complete for DR1027-SAH_2_val_2.fq.gz
Approx 15% complete for DR1027-SAH_2_val_2.fq.gz
Approx 20% complete for DR1027-SAH_2_val_2.fq.gz
Approx 25% complete for DR1027-SAH_2_val_2.fq.gz
Approx 30% complete for DR1027-SAH_2_val_2.fq.gz
Approx 35% complete for DR1027-SAH_2_val_2.fq.gz
Approx 40% complete for DR1027-SAH_2_val_2.fq.gz
Approx 45% complete for DR1027-SAH_2_val_2.fq.gz
Approx 50% complete for DR1027-SAH_2_val_2.fq.gz
Approx 55% complete for DR1027-SAH_2_val_2.fq.gz
Approx 60% complete for DR1027-SAH_2_val_2.fq.gz
Approx 65% complete for DR1027-SAH_2_val_2.fq.gz
Approx 70% complete for DR1027-SAH_2_val_2.fq.gz
Approx 75% complete for DR1027-SAH_2_val_2.fq.gz
Approx 80% complete for DR1027-SAH_2_val_2.fq.gz
Approx 85% complete for DR1027-SAH_2_val_2.fq.gz
Approx 90% complete for DR1027-SAH_2_val_2.fq.gz
Approx 95% complete for DR1027-SAH_2_val_2.fq.gz
Analysis complete for DR1027-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1027-SAH_1_trimmed.fq.gz and DR1027-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1028-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1028-SAH_1.fastq.gz data/DR1028-SAH_2.fastq.gz -o results/02.trimgalore/DR1028-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1028-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1028-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1028-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	29	CTGTCTCTTATA	85271	0.03
smallRNA	2	TGGAATTCTCGG	85271	0.00
Illumina	0	AGATCGGAAGAGC	85271	0.00
Using Nextera adapter for trimming (count: 29). Second best hit was smallRNA (count: 2)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1028-SAH_trimgalore/DR1028-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1028-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1028-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1028-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1028-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.432 s (5.064 µs/read; 11.85 M reads/minute).

=== Summary ===

Total reads processed:                  85,271
Reads with adapters:                     9,562 (11.2%)
Reads written (passing filters):        85,271 (100.0%)

Total basepairs processed:    25,666,571 bp
Quality-trimmed:                 131,366 bp (0.5%)
Total written (filtered):     25,512,184 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 9562 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 39.0%
  C: 13.3%
  G: 25.1%
  T: 22.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	5235	21317.8	0	5235
2	1634	5329.4	0	1634
3	2203	1332.4	0	2203
4	408	333.1	0	408
5	41	83.3	0	41
6	4	20.8	0	4
36	1	0.0	1	0 1
78	1	0.0	1	1
80	1	0.0	1	1
82	1	0.0	1	1
83	4	0.0	1	4
84	1	0.0	1	1
85	1	0.0	1	1
86	1	0.0	1	1
87	1	0.0	1	1
90	1	0.0	1	1
91	1	0.0	1	1
106	1	0.0	1	0 1
136	1	0.0	1	1
147	1	0.0	1	0 1
154	1	0.0	1	1
160	1	0.0	1	1
169	1	0.0	1	0 1
170	1	0.0	1	1
177	1	0.0	1	1
181	1	0.0	1	0 1
197	1	0.0	1	1
199	1	0.0	1	1
200	1	0.0	1	1
207	1	0.0	1	0 1
225	1	0.0	1	1
231	1	0.0	1	1
268	1	0.0	1	1
270	1	0.0	1	0 1
280	1	0.0	1	1
284	1	0.0	1	1
288	2	0.0	1	1 1
290	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/DR1028-SAH_1.fastq.gz
=============================================
85271 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1028-SAH_trimgalore/DR1028-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1028-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1028-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1028-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1028-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.538 s (6.311 µs/read; 9.51 M reads/minute).

=== Summary ===

Total reads processed:                  85,271
Reads with adapters:                    69,803 (81.9%)
Reads written (passing filters):        85,271 (100.0%)

Total basepairs processed:    25,666,571 bp
Quality-trimmed:                 710,979 bp (2.8%)
Total written (filtered):     24,878,628 bp (96.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 69803 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.8%
  C: 79.4%
  G: 14.7%
  T: 2.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	67616	21317.8	0	67616
2	1547	5329.4	0	1547
3	535	1332.4	0	535
4	45	333.1	0	45
5	13	83.3	0	13
6	9	20.8	0	9
10	1	0.1	1	0 1
58	1	0.0	1	0 1
62	1	0.0	1	0 1
65	1	0.0	1	1
77	1	0.0	1	0 1
78	1	0.0	1	1
80	2	0.0	1	2
83	1	0.0	1	1
84	1	0.0	1	1
85	1	0.0	1	1
86	1	0.0	1	1
87	3	0.0	1	3
88	1	0.0	1	1
89	1	0.0	1	1
90	1	0.0	1	1
91	2	0.0	1	2
93	1	0.0	1	1
100	1	0.0	1	1
106	1	0.0	1	1
107	2	0.0	1	2
112	1	0.0	1	1
144	1	0.0	1	1
145	1	0.0	1	1
146	1	0.0	1	1
147	1	0.0	1	1
149	1	0.0	1	1
172	1	0.0	1	1
177	1	0.0	1	1
182	1	0.0	1	1
212	1	0.0	1	0 1
215	1	0.0	1	1
224	1	0.0	1	1
254	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1028-SAH_2.fastq.gz
=============================================
85271 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1028-SAH_1_trimmed.fq.gz and DR1028-SAH_2_trimmed.fq.gz
file_1: DR1028-SAH_1_trimmed.fq.gz, file_2: DR1028-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1028-SAH_1_trimmed.fq.gz and DR1028-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1028-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1028-SAH_2_val_2.fq.gz

Total number of sequences analysed: 85271

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4151 (4.87%)


  >>> Now running FastQC on the validated data DR1028-SAH_1_val_1.fq.gz<<<

Started analysis of DR1028-SAH_1_val_1.fq.gz
Approx 5% complete for DR1028-SAH_1_val_1.fq.gz
Approx 10% complete for DR1028-SAH_1_val_1.fq.gz
Approx 15% complete for DR1028-SAH_1_val_1.fq.gz
Approx 20% complete for DR1028-SAH_1_val_1.fq.gz
Approx 25% complete for DR1028-SAH_1_val_1.fq.gz
Approx 30% complete for DR1028-SAH_1_val_1.fq.gz
Approx 35% complete for DR1028-SAH_1_val_1.fq.gz
Approx 40% complete for DR1028-SAH_1_val_1.fq.gz
Approx 45% complete for DR1028-SAH_1_val_1.fq.gz
Approx 50% complete for DR1028-SAH_1_val_1.fq.gz
Approx 55% complete for DR1028-SAH_1_val_1.fq.gz
Approx 60% complete for DR1028-SAH_1_val_1.fq.gz
Approx 65% complete for DR1028-SAH_1_val_1.fq.gz
Approx 70% complete for DR1028-SAH_1_val_1.fq.gz
Approx 75% complete for DR1028-SAH_1_val_1.fq.gz
Approx 80% complete for DR1028-SAH_1_val_1.fq.gz
Approx 85% complete for DR1028-SAH_1_val_1.fq.gz
Approx 90% complete for DR1028-SAH_1_val_1.fq.gz
Approx 95% complete for DR1028-SAH_1_val_1.fq.gz
Analysis complete for DR1028-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1028-SAH_2_val_2.fq.gz<<<

Started analysis of DR1028-SAH_2_val_2.fq.gz
Approx 5% complete for DR1028-SAH_2_val_2.fq.gz
Approx 10% complete for DR1028-SAH_2_val_2.fq.gz
Approx 15% complete for DR1028-SAH_2_val_2.fq.gz
Approx 20% complete for DR1028-SAH_2_val_2.fq.gz
Approx 25% complete for DR1028-SAH_2_val_2.fq.gz
Approx 30% complete for DR1028-SAH_2_val_2.fq.gz
Approx 35% complete for DR1028-SAH_2_val_2.fq.gz
Approx 40% complete for DR1028-SAH_2_val_2.fq.gz
Approx 45% complete for DR1028-SAH_2_val_2.fq.gz
Approx 50% complete for DR1028-SAH_2_val_2.fq.gz
Approx 55% complete for DR1028-SAH_2_val_2.fq.gz
Approx 60% complete for DR1028-SAH_2_val_2.fq.gz
Approx 65% complete for DR1028-SAH_2_val_2.fq.gz
Approx 70% complete for DR1028-SAH_2_val_2.fq.gz
Approx 75% complete for DR1028-SAH_2_val_2.fq.gz
Approx 80% complete for DR1028-SAH_2_val_2.fq.gz
Approx 85% complete for DR1028-SAH_2_val_2.fq.gz
Approx 90% complete for DR1028-SAH_2_val_2.fq.gz
Approx 95% complete for DR1028-SAH_2_val_2.fq.gz
Analysis complete for DR1028-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1028-SAH_1_trimmed.fq.gz and DR1028-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1029-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1029-SAH_1.fastq.gz data/DR1029-SAH_2.fastq.gz -o results/02.trimgalore/DR1029-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1029-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1029-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1029-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	102	CTGTCTCTTATA	92976	0.11
Illumina	0	AGATCGGAAGAGC	92976	0.00
smallRNA	0	TGGAATTCTCGG	92976	0.00
Using Nextera adapter for trimming (count: 102). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1029-SAH_trimgalore/DR1029-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1029-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1029-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1029-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1029-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.441 s (4.740 µs/read; 12.66 M reads/minute).

=== Summary ===

Total reads processed:                  92,976
Reads with adapters:                    10,911 (11.7%)
Reads written (passing filters):        92,976 (100.0%)

Total basepairs processed:    27,985,776 bp
Quality-trimmed:                 124,324 bp (0.4%)
Total written (filtered):     27,819,473 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 10911 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 42.3%
  C: 12.9%
  G: 28.3%
  T: 16.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	5727	23244.0	0	5727
2	1822	5811.0	0	1822
3	2816	1452.8	0	2816
4	378	363.2	0	378
5	41	90.8	0	41
6	5	22.7	0	5
20	3	0.0	1	2 1
23	1	0.0	1	0 1
36	4	0.0	1	0 4
73	1	0.0	1	1
78	2	0.0	1	2
79	4	0.0	1	3 1
80	1	0.0	1	1
81	2	0.0	1	2
82	3	0.0	1	3
84	4	0.0	1	2 2
85	2	0.0	1	1 1
86	1	0.0	1	1
87	1	0.0	1	1
94	1	0.0	1	1
103	1	0.0	1	1
104	2	0.0	1	2
107	3	0.0	1	3
109	1	0.0	1	1
111	1	0.0	1	1
112	2	0.0	1	2
115	1	0.0	1	1
124	1	0.0	1	0 1
125	1	0.0	1	1
127	1	0.0	1	1
131	2	0.0	1	1 1
132	1	0.0	1	1
135	1	0.0	1	1
141	2	0.0	1	1 1
142	1	0.0	1	1
144	1	0.0	1	1
155	1	0.0	1	1
159	1	0.0	1	1
162	2	0.0	1	2
164	1	0.0	1	1
171	2	0.0	1	2
184	2	0.0	1	1 1
186	1	0.0	1	1
193	1	0.0	1	1
194	1	0.0	1	1
201	1	0.0	1	1
204	1	0.0	1	1
206	1	0.0	1	1
207	1	0.0	1	1
208	1	0.0	1	1
230	2	0.0	1	2
231	1	0.0	1	1
235	1	0.0	1	1
237	1	0.0	1	1
242	2	0.0	1	1 1
246	2	0.0	1	2
248	1	0.0	1	0 1
250	2	0.0	1	2
255	1	0.0	1	0 1
257	1	0.0	1	1
262	1	0.0	1	1
281	2	0.0	1	1 1
283	1	0.0	1	1
284	4	0.0	1	4
285	2	0.0	1	2
286	2	0.0	1	2
287	3	0.0	1	3
288	6	0.0	1	6
289	2	0.0	1	2
290	2	0.0	1	2
291	14	0.0	1	12 2

RUN STATISTICS FOR INPUT FILE: data/DR1029-SAH_1.fastq.gz
=============================================
92976 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1029-SAH_trimgalore/DR1029-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1029-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1029-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1029-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1029-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.496 s (5.338 µs/read; 11.24 M reads/minute).

=== Summary ===

Total reads processed:                  92,976
Reads with adapters:                    75,583 (81.3%)
Reads written (passing filters):        92,976 (100.0%)

Total basepairs processed:    27,985,776 bp
Quality-trimmed:                 892,455 bp (3.2%)
Total written (filtered):     26,997,243 bp (96.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 75583 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 4.1%
  C: 77.0%
  G: 16.5%
  T: 2.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	72813	23244.0	0	72813
2	1983	5811.0	0	1983
3	614	1452.8	0	614
4	35	363.2	0	35
5	11	90.8	0	11
6	7	22.7	0	7
10	1	0.1	1	0 1
40	1	0.0	1	1
49	1	0.0	1	1
50	1	0.0	1	1
52	1	0.0	1	1
54	1	0.0	1	1
56	1	0.0	1	1
63	1	0.0	1	1
66	1	0.0	1	1
77	1	0.0	1	0 1
80	1	0.0	1	1
81	1	0.0	1	1
82	5	0.0	1	5
83	5	0.0	1	5
84	4	0.0	1	4
85	3	0.0	1	3
86	1	0.0	1	1
88	2	0.0	1	2
89	3	0.0	1	2 1
90	3	0.0	1	1 2
92	1	0.0	1	1
93	2	0.0	1	1 1
94	1	0.0	1	1
95	1	0.0	1	1
99	1	0.0	1	0 1
100	1	0.0	1	0 1
101	2	0.0	1	2
102	1	0.0	1	1
103	3	0.0	1	3
104	1	0.0	1	1
108	1	0.0	1	0 1
113	2	0.0	1	1 1
115	1	0.0	1	1
117	1	0.0	1	1
119	2	0.0	1	2
124	1	0.0	1	1
125	1	0.0	1	1
126	1	0.0	1	1
127	2	0.0	1	1 1
128	2	0.0	1	2
130	1	0.0	1	1
132	3	0.0	1	3
152	2	0.0	1	2
156	1	0.0	1	1
157	2	0.0	1	2
160	1	0.0	1	1
161	1	0.0	1	1
169	1	0.0	1	1
173	1	0.0	1	1
175	1	0.0	1	1
176	1	0.0	1	1
178	1	0.0	1	1
180	1	0.0	1	1
181	1	0.0	1	1
186	1	0.0	1	1
188	1	0.0	1	1
190	2	0.0	1	2
191	1	0.0	1	1
192	1	0.0	1	1
194	2	0.0	1	2
195	1	0.0	1	1
196	1	0.0	1	1
202	1	0.0	1	1
203	1	0.0	1	1
204	1	0.0	1	1
205	1	0.0	1	1
207	1	0.0	1	1
212	1	0.0	1	1
213	1	0.0	1	0 1
214	1	0.0	1	1
216	1	0.0	1	1
219	1	0.0	1	0 1
226	1	0.0	1	1
232	1	0.0	1	0 1
246	1	0.0	1	1
254	1	0.0	1	1
267	1	0.0	1	1
274	1	0.0	1	1
287	1	0.0	1	1
288	3	0.0	1	2 1
290	5	0.0	1	5
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1029-SAH_2.fastq.gz
=============================================
92976 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1029-SAH_1_trimmed.fq.gz and DR1029-SAH_2_trimmed.fq.gz
file_1: DR1029-SAH_1_trimmed.fq.gz, file_2: DR1029-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1029-SAH_1_trimmed.fq.gz and DR1029-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1029-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1029-SAH_2_val_2.fq.gz

Total number of sequences analysed: 92976

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 5322 (5.72%)


  >>> Now running FastQC on the validated data DR1029-SAH_1_val_1.fq.gz<<<

Started analysis of DR1029-SAH_1_val_1.fq.gz
Approx 5% complete for DR1029-SAH_1_val_1.fq.gz
Approx 10% complete for DR1029-SAH_1_val_1.fq.gz
Approx 15% complete for DR1029-SAH_1_val_1.fq.gz
Approx 20% complete for DR1029-SAH_1_val_1.fq.gz
Approx 25% complete for DR1029-SAH_1_val_1.fq.gz
Approx 30% complete for DR1029-SAH_1_val_1.fq.gz
Approx 35% complete for DR1029-SAH_1_val_1.fq.gz
Approx 40% complete for DR1029-SAH_1_val_1.fq.gz
Approx 45% complete for DR1029-SAH_1_val_1.fq.gz
Approx 50% complete for DR1029-SAH_1_val_1.fq.gz
Approx 55% complete for DR1029-SAH_1_val_1.fq.gz
Approx 60% complete for DR1029-SAH_1_val_1.fq.gz
Approx 65% complete for DR1029-SAH_1_val_1.fq.gz
Approx 70% complete for DR1029-SAH_1_val_1.fq.gz
Approx 75% complete for DR1029-SAH_1_val_1.fq.gz
Approx 80% complete for DR1029-SAH_1_val_1.fq.gz
Approx 85% complete for DR1029-SAH_1_val_1.fq.gz
Approx 90% complete for DR1029-SAH_1_val_1.fq.gz
Approx 95% complete for DR1029-SAH_1_val_1.fq.gz
Analysis complete for DR1029-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1029-SAH_2_val_2.fq.gz<<<

Started analysis of DR1029-SAH_2_val_2.fq.gz
Approx 5% complete for DR1029-SAH_2_val_2.fq.gz
Approx 10% complete for DR1029-SAH_2_val_2.fq.gz
Approx 15% complete for DR1029-SAH_2_val_2.fq.gz
Approx 20% complete for DR1029-SAH_2_val_2.fq.gz
Approx 25% complete for DR1029-SAH_2_val_2.fq.gz
Approx 30% complete for DR1029-SAH_2_val_2.fq.gz
Approx 35% complete for DR1029-SAH_2_val_2.fq.gz
Approx 40% complete for DR1029-SAH_2_val_2.fq.gz
Approx 45% complete for DR1029-SAH_2_val_2.fq.gz
Approx 50% complete for DR1029-SAH_2_val_2.fq.gz
Approx 55% complete for DR1029-SAH_2_val_2.fq.gz
Approx 60% complete for DR1029-SAH_2_val_2.fq.gz
Approx 65% complete for DR1029-SAH_2_val_2.fq.gz
Approx 70% complete for DR1029-SAH_2_val_2.fq.gz
Approx 75% complete for DR1029-SAH_2_val_2.fq.gz
Approx 80% complete for DR1029-SAH_2_val_2.fq.gz
Approx 85% complete for DR1029-SAH_2_val_2.fq.gz
Approx 90% complete for DR1029-SAH_2_val_2.fq.gz
Approx 95% complete for DR1029-SAH_2_val_2.fq.gz
Analysis complete for DR1029-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1029-SAH_1_trimmed.fq.gz and DR1029-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1030-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1030-E_1.fastq.gz data/DR1030-E_2.fastq.gz -o results/02.trimgalore/DR1030-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1030-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1030-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1030-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	232	CTGTCTCTTATA	87443	0.27
smallRNA	2	TGGAATTCTCGG	87443	0.00
Illumina	0	AGATCGGAAGAGC	87443	0.00
Using Nextera adapter for trimming (count: 232). Second best hit was smallRNA (count: 2)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1030-E_trimgalore/DR1030-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1030-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1030-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1030-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1030-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.388 s (4.434 µs/read; 13.53 M reads/minute).

=== Summary ===

Total reads processed:                  87,443
Reads with adapters:                     2,516 (2.9%)
Reads written (passing filters):        87,443 (100.0%)

Total basepairs processed:    26,320,343 bp
Quality-trimmed:                  62,276 bp (0.2%)
Total written (filtered):     26,220,704 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 2516 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 39.1%
  C: 21.1%
  G: 15.0%
  T: 24.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	1341	21860.8	0	1341
2	422	5465.2	0	422
3	412	1366.3	0	412
4	63	341.6	0	63
5	4	85.4	0	4
6	5	21.3	0	5
7	5	5.3	0	5
8	1	1.3	0	1
25	1	0.0	1	1
26	4	0.0	1	3 1
27	1	0.0	1	1
30	3	0.0	1	3
32	5	0.0	1	5
33	5	0.0	1	3 2
34	3	0.0	1	3
38	1	0.0	1	0 1
41	1	0.0	1	1
42	10	0.0	1	10
43	54	0.0	1	53 1
44	3	0.0	1	1 2
45	1	0.0	1	0 1
50	1	0.0	1	1
55	1	0.0	1	0 1
61	1	0.0	1	1
67	1	0.0	1	1
68	1	0.0	1	1
73	1	0.0	1	1
74	1	0.0	1	0 1
77	1	0.0	1	1
78	7	0.0	1	7
79	6	0.0	1	6
80	2	0.0	1	2
81	4	0.0	1	3 1
82	4	0.0	1	4
83	2	0.0	1	2
84	1	0.0	1	1
85	2	0.0	1	0 2
86	2	0.0	1	2
90	3	0.0	1	3
91	1	0.0	1	0 1
93	1	0.0	1	0 1
94	3	0.0	1	3
95	3	0.0	1	3
98	1	0.0	1	1
100	1	0.0	1	0 1
101	1	0.0	1	1
102	1	0.0	1	1
103	1	0.0	1	1
104	1	0.0	1	1
105	1	0.0	1	1
106	3	0.0	1	3
109	1	0.0	1	1
110	1	0.0	1	1
113	1	0.0	1	1
114	2	0.0	1	2
115	1	0.0	1	1
118	1	0.0	1	1
123	3	0.0	1	3
125	1	0.0	1	1
129	1	0.0	1	1
131	1	0.0	1	1
143	2	0.0	1	1 1
145	1	0.0	1	1
146	1	0.0	1	1
148	1	0.0	1	1
151	1	0.0	1	1
152	1	0.0	1	1
153	3	0.0	1	2 1
154	2	0.0	1	2
160	1	0.0	1	1
162	2	0.0	1	2
163	1	0.0	1	0 1
165	1	0.0	1	0 1
168	1	0.0	1	0 1
170	2	0.0	1	2
173	1	0.0	1	1
185	1	0.0	1	0 1
187	1	0.0	1	1
189	2	0.0	1	2
193	1	0.0	1	1
196	1	0.0	1	1
197	2	0.0	1	2
201	1	0.0	1	1
204	1	0.0	1	1
205	3	0.0	1	2 1
208	1	0.0	1	1
212	1	0.0	1	1
214	2	0.0	1	1 1
217	1	0.0	1	1
218	1	0.0	1	1
224	1	0.0	1	1
226	1	0.0	1	1
236	1	0.0	1	1
241	1	0.0	1	1
243	1	0.0	1	0 1
250	1	0.0	1	1
252	1	0.0	1	1
259	1	0.0	1	1
260	1	0.0	1	1
262	1	0.0	1	0 1
263	2	0.0	1	0 2
264	2	0.0	1	2
267	1	0.0	1	1
268	1	0.0	1	1
271	1	0.0	1	1
274	2	0.0	1	2
275	1	0.0	1	1
276	1	0.0	1	1
277	1	0.0	1	1
278	1	0.0	1	1
279	2	0.0	1	2
280	2	0.0	1	2
281	1	0.0	1	1
282	2	0.0	1	2
283	4	0.0	1	4
285	2	0.0	1	2
286	5	0.0	1	5
287	5	0.0	1	3 2
288	7	0.0	1	7
289	1	0.0	1	1
290	3	0.0	1	3
291	2	0.0	1	1 1

RUN STATISTICS FOR INPUT FILE: data/DR1030-E_1.fastq.gz
=============================================
87443 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1030-E_trimgalore/DR1030-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1030-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1030-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1030-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1030-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.439 s (5.024 µs/read; 11.94 M reads/minute).

=== Summary ===

Total reads processed:                  87,443
Reads with adapters:                    71,701 (82.0%)
Reads written (passing filters):        87,443 (100.0%)

Total basepairs processed:    26,320,343 bp
Quality-trimmed:                 642,626 bp (2.4%)
Total written (filtered):     25,579,288 bp (97.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 71701 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 2.7%
  C: 82.5%
  G: 12.8%
  T: 1.9%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	69798	21860.8	0	69798
2	1148	5465.2	0	1148
3	439	1366.3	0	439
4	34	341.6	0	34
5	20	85.4	0	20
6	17	21.3	0	17
7	3	5.3	0	3
8	1	1.3	0	1
11	1	0.0	1	1
14	1	0.0	1	0 1
16	1	0.0	1	0 1
18	1	0.0	1	0 1
19	1	0.0	1	0 1
20	2	0.0	1	0 2
21	2	0.0	1	2
22	1	0.0	1	1
23	1	0.0	1	0 1
25	2	0.0	1	2
26	4	0.0	1	4
27	7	0.0	1	5 2
28	3	0.0	1	3
29	7	0.0	1	5 2
30	1	0.0	1	1
31	7	0.0	1	5 2
32	10	0.0	1	9 1
33	3	0.0	1	3
34	2	0.0	1	2
35	2	0.0	1	1 1
36	1	0.0	1	1
37	3	0.0	1	3
38	8	0.0	1	7 1
39	5	0.0	1	5
40	1	0.0	1	1
42	2	0.0	1	2
43	4	0.0	1	3 1
44	3	0.0	1	2 1
45	1	0.0	1	1
47	1	0.0	1	1
58	1	0.0	1	1
59	1	0.0	1	1
65	1	0.0	1	0 1
77	2	0.0	1	1 1
82	3	0.0	1	1 2
83	2	0.0	1	1 1
84	5	0.0	1	4 1
85	5	0.0	1	5
86	7	0.0	1	6 1
87	4	0.0	1	4
88	5	0.0	1	4 1
89	8	0.0	1	7 1
90	1	0.0	1	1
91	1	0.0	1	1
92	3	0.0	1	3
93	3	0.0	1	2 1
94	2	0.0	1	2
95	1	0.0	1	1
97	2	0.0	1	1 1
98	1	0.0	1	1
99	2	0.0	1	1 1
102	1	0.0	1	1
104	4	0.0	1	3 1
106	1	0.0	1	1
108	1	0.0	1	1
110	2	0.0	1	2
111	2	0.0	1	2
118	1	0.0	1	0 1
119	2	0.0	1	2
120	1	0.0	1	1
121	1	0.0	1	1
123	1	0.0	1	1
124	1	0.0	1	1
125	1	0.0	1	1
126	1	0.0	1	1
128	2	0.0	1	2
134	1	0.0	1	1
136	1	0.0	1	1
137	2	0.0	1	2
146	1	0.0	1	1
147	2	0.0	1	1 1
149	1	0.0	1	1
150	1	0.0	1	1
151	1	0.0	1	1
154	1	0.0	1	1
157	1	0.0	1	1
158	3	0.0	1	3
160	1	0.0	1	1
162	2	0.0	1	2
165	1	0.0	1	1
167	1	0.0	1	1
168	1	0.0	1	1
169	1	0.0	1	1
171	1	0.0	1	1
172	1	0.0	1	1
173	1	0.0	1	0 1
174	3	0.0	1	3
175	1	0.0	1	1
177	2	0.0	1	1 1
179	1	0.0	1	0 1
180	1	0.0	1	1
181	1	0.0	1	1
182	1	0.0	1	1
184	2	0.0	1	2
187	1	0.0	1	1
188	1	0.0	1	0 1
189	1	0.0	1	1
190	1	0.0	1	0 1
192	1	0.0	1	1
193	2	0.0	1	2
202	1	0.0	1	1
203	1	0.0	1	1
205	1	0.0	1	1
206	1	0.0	1	1
208	2	0.0	1	1 1
209	1	0.0	1	1
212	2	0.0	1	2
214	2	0.0	1	2
223	2	0.0	1	2
274	1	0.0	1	0 1
285	1	0.0	1	1
286	2	0.0	1	1 1
287	2	0.0	1	1 1
288	4	0.0	1	4
290	4	0.0	1	4


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1030-E_2.fastq.gz
=============================================
87443 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1030-E_1_trimmed.fq.gz and DR1030-E_2_trimmed.fq.gz
file_1: DR1030-E_1_trimmed.fq.gz, file_2: DR1030-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1030-E_1_trimmed.fq.gz and DR1030-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1030-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1030-E_2_val_2.fq.gz

Total number of sequences analysed: 87443

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4008 (4.58%)


  >>> Now running FastQC on the validated data DR1030-E_1_val_1.fq.gz<<<

Started analysis of DR1030-E_1_val_1.fq.gz
Approx 5% complete for DR1030-E_1_val_1.fq.gz
Approx 10% complete for DR1030-E_1_val_1.fq.gz
Approx 15% complete for DR1030-E_1_val_1.fq.gz
Approx 20% complete for DR1030-E_1_val_1.fq.gz
Approx 25% complete for DR1030-E_1_val_1.fq.gz
Approx 30% complete for DR1030-E_1_val_1.fq.gz
Approx 35% complete for DR1030-E_1_val_1.fq.gz
Approx 40% complete for DR1030-E_1_val_1.fq.gz
Approx 45% complete for DR1030-E_1_val_1.fq.gz
Approx 50% complete for DR1030-E_1_val_1.fq.gz
Approx 55% complete for DR1030-E_1_val_1.fq.gz
Approx 60% complete for DR1030-E_1_val_1.fq.gz
Approx 65% complete for DR1030-E_1_val_1.fq.gz
Approx 70% complete for DR1030-E_1_val_1.fq.gz
Approx 75% complete for DR1030-E_1_val_1.fq.gz
Approx 80% complete for DR1030-E_1_val_1.fq.gz
Approx 85% complete for DR1030-E_1_val_1.fq.gz
Approx 90% complete for DR1030-E_1_val_1.fq.gz
Approx 95% complete for DR1030-E_1_val_1.fq.gz
Analysis complete for DR1030-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1030-E_2_val_2.fq.gz<<<

Started analysis of DR1030-E_2_val_2.fq.gz
Approx 5% complete for DR1030-E_2_val_2.fq.gz
Approx 10% complete for DR1030-E_2_val_2.fq.gz
Approx 15% complete for DR1030-E_2_val_2.fq.gz
Approx 20% complete for DR1030-E_2_val_2.fq.gz
Approx 25% complete for DR1030-E_2_val_2.fq.gz
Approx 30% complete for DR1030-E_2_val_2.fq.gz
Approx 35% complete for DR1030-E_2_val_2.fq.gz
Approx 40% complete for DR1030-E_2_val_2.fq.gz
Approx 45% complete for DR1030-E_2_val_2.fq.gz
Approx 50% complete for DR1030-E_2_val_2.fq.gz
Approx 55% complete for DR1030-E_2_val_2.fq.gz
Approx 60% complete for DR1030-E_2_val_2.fq.gz
Approx 65% complete for DR1030-E_2_val_2.fq.gz
Approx 70% complete for DR1030-E_2_val_2.fq.gz
Approx 75% complete for DR1030-E_2_val_2.fq.gz
Approx 80% complete for DR1030-E_2_val_2.fq.gz
Approx 85% complete for DR1030-E_2_val_2.fq.gz
Approx 90% complete for DR1030-E_2_val_2.fq.gz
Approx 95% complete for DR1030-E_2_val_2.fq.gz
Analysis complete for DR1030-E_2_val_2.fq.gz
Deleting both intermediate output files DR1030-E_1_trimmed.fq.gz and DR1030-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1030-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1030-SAH_1.fastq.gz data/DR1030-SAH_2.fastq.gz -o results/02.trimgalore/DR1030-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1030-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1030-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1030-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	68	CTGTCTCTTATA	86182	0.08
Illumina	0	AGATCGGAAGAGC	86182	0.00
smallRNA	0	TGGAATTCTCGG	86182	0.00
Using Nextera adapter for trimming (count: 68). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1030-SAH_trimgalore/DR1030-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1030-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1030-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1030-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1030-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.414 s (4.802 µs/read; 12.49 M reads/minute).

=== Summary ===

Total reads processed:                  86,182
Reads with adapters:                     8,679 (10.1%)
Reads written (passing filters):        86,182 (100.0%)

Total basepairs processed:    25,940,782 bp
Quality-trimmed:                 107,746 bp (0.4%)
Total written (filtered):     25,802,521 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 8679 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 48.2%
  C: 12.5%
  G: 20.7%
  T: 18.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4231	21545.5	0	4231
2	1723	5386.4	0	1723
3	2178	1346.6	0	2178
4	409	336.6	0	409
5	53	84.2	0	53
6	6	21.0	0	6
36	1	0.0	1	0 1
79	3	0.0	1	3
80	1	0.0	1	1
82	1	0.0	1	1
83	1	0.0	1	1
84	1	0.0	1	1
85	1	0.0	1	1
87	2	0.0	1	1 1
90	2	0.0	1	1 1
91	1	0.0	1	0 1
93	1	0.0	1	1
94	1	0.0	1	1
97	1	0.0	1	1
103	1	0.0	1	0 1
106	1	0.0	1	1
110	1	0.0	1	1
114	1	0.0	1	1
115	1	0.0	1	1
117	1	0.0	1	1
121	1	0.0	1	1
122	1	0.0	1	1
127	1	0.0	1	1
132	1	0.0	1	1
133	1	0.0	1	1
138	1	0.0	1	1
151	1	0.0	1	1
152	1	0.0	1	0 1
153	1	0.0	1	0 1
155	1	0.0	1	1
165	1	0.0	1	1
167	1	0.0	1	1
168	1	0.0	1	1
172	1	0.0	1	1
174	1	0.0	1	1
176	1	0.0	1	1
185	1	0.0	1	1
191	1	0.0	1	1
195	1	0.0	1	1
200	1	0.0	1	1
204	1	0.0	1	1
205	1	0.0	1	1
207	1	0.0	1	1
211	1	0.0	1	1
214	3	0.0	1	1 2
221	2	0.0	1	2
222	1	0.0	1	1
224	1	0.0	1	1
232	1	0.0	1	1
233	1	0.0	1	1
234	1	0.0	1	1
236	1	0.0	1	1
239	1	0.0	1	0 1
248	1	0.0	1	1
251	1	0.0	1	1
259	1	0.0	1	0 1
264	1	0.0	1	1
265	1	0.0	1	1
269	1	0.0	1	1
274	2	0.0	1	2
286	1	0.0	1	1
287	1	0.0	1	1
288	2	0.0	1	2
289	1	0.0	1	1
290	1	0.0	1	1
291	6	0.0	1	6

RUN STATISTICS FOR INPUT FILE: data/DR1030-SAH_1.fastq.gz
=============================================
86182 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1030-SAH_trimgalore/DR1030-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1030-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1030-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1030-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1030-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.500 s (5.802 µs/read; 10.34 M reads/minute).

=== Summary ===

Total reads processed:                  86,182
Reads with adapters:                    70,789 (82.1%)
Reads written (passing filters):        86,182 (100.0%)

Total basepairs processed:    25,940,782 bp
Quality-trimmed:                 718,118 bp (2.8%)
Total written (filtered):     25,139,141 bp (96.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 70789 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.6%
  C: 79.8%
  G: 14.3%
  T: 2.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	68608	21545.5	0	68608
2	1509	5386.4	0	1509
3	530	1346.6	0	530
4	31	336.6	0	31
5	23	84.2	0	23
6	9	21.0	0	9
7	3	5.3	0	3
43	1	0.0	1	1
52	1	0.0	1	0 1
57	1	0.0	1	0 1
76	1	0.0	1	1
79	1	0.0	1	1
82	3	0.0	1	3
83	6	0.0	1	6
84	3	0.0	1	3
85	1	0.0	1	1
87	2	0.0	1	2
88	2	0.0	1	2
89	1	0.0	1	0 1
90	2	0.0	1	2
94	1	0.0	1	1
99	2	0.0	1	2
101	3	0.0	1	3
102	1	0.0	1	1
103	1	0.0	1	1
105	1	0.0	1	1
106	1	0.0	1	1
115	1	0.0	1	1
118	1	0.0	1	1
119	1	0.0	1	1
122	1	0.0	1	1
125	1	0.0	1	1
127	1	0.0	1	1
128	1	0.0	1	1
130	2	0.0	1	2
132	2	0.0	1	2
140	1	0.0	1	1
141	1	0.0	1	1
144	3	0.0	1	3
145	1	0.0	1	1
147	1	0.0	1	0 1
153	1	0.0	1	1
158	1	0.0	1	1
159	1	0.0	1	0 1
161	2	0.0	1	2
172	1	0.0	1	1
173	1	0.0	1	1
174	1	0.0	1	1
176	1	0.0	1	1
179	1	0.0	1	0 1
180	1	0.0	1	1
185	1	0.0	1	1
188	1	0.0	1	1
189	1	0.0	1	0 1
195	1	0.0	1	1
196	1	0.0	1	1
197	1	0.0	1	1
208	1	0.0	1	1
224	1	0.0	1	1
291	4	0.0	1	4

RUN STATISTICS FOR INPUT FILE: data/DR1030-SAH_2.fastq.gz
=============================================
86182 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1030-SAH_1_trimmed.fq.gz and DR1030-SAH_2_trimmed.fq.gz
file_1: DR1030-SAH_1_trimmed.fq.gz, file_2: DR1030-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1030-SAH_1_trimmed.fq.gz and DR1030-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1030-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1030-SAH_2_val_2.fq.gz

Total number of sequences analysed: 86182

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4092 (4.75%)


  >>> Now running FastQC on the validated data DR1030-SAH_1_val_1.fq.gz<<<

Started analysis of DR1030-SAH_1_val_1.fq.gz
Approx 5% complete for DR1030-SAH_1_val_1.fq.gz
Approx 10% complete for DR1030-SAH_1_val_1.fq.gz
Approx 15% complete for DR1030-SAH_1_val_1.fq.gz
Approx 20% complete for DR1030-SAH_1_val_1.fq.gz
Approx 25% complete for DR1030-SAH_1_val_1.fq.gz
Approx 30% complete for DR1030-SAH_1_val_1.fq.gz
Approx 35% complete for DR1030-SAH_1_val_1.fq.gz
Approx 40% complete for DR1030-SAH_1_val_1.fq.gz
Approx 45% complete for DR1030-SAH_1_val_1.fq.gz
Approx 50% complete for DR1030-SAH_1_val_1.fq.gz
Approx 55% complete for DR1030-SAH_1_val_1.fq.gz
Approx 60% complete for DR1030-SAH_1_val_1.fq.gz
Approx 65% complete for DR1030-SAH_1_val_1.fq.gz
Approx 70% complete for DR1030-SAH_1_val_1.fq.gz
Approx 75% complete for DR1030-SAH_1_val_1.fq.gz
Approx 80% complete for DR1030-SAH_1_val_1.fq.gz
Approx 85% complete for DR1030-SAH_1_val_1.fq.gz
Approx 90% complete for DR1030-SAH_1_val_1.fq.gz
Approx 95% complete for DR1030-SAH_1_val_1.fq.gz
Analysis complete for DR1030-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1030-SAH_2_val_2.fq.gz<<<

Started analysis of DR1030-SAH_2_val_2.fq.gz
Approx 5% complete for DR1030-SAH_2_val_2.fq.gz
Approx 10% complete for DR1030-SAH_2_val_2.fq.gz
Approx 15% complete for DR1030-SAH_2_val_2.fq.gz
Approx 20% complete for DR1030-SAH_2_val_2.fq.gz
Approx 25% complete for DR1030-SAH_2_val_2.fq.gz
Approx 30% complete for DR1030-SAH_2_val_2.fq.gz
Approx 35% complete for DR1030-SAH_2_val_2.fq.gz
Approx 40% complete for DR1030-SAH_2_val_2.fq.gz
Approx 45% complete for DR1030-SAH_2_val_2.fq.gz
Approx 50% complete for DR1030-SAH_2_val_2.fq.gz
Approx 55% complete for DR1030-SAH_2_val_2.fq.gz
Approx 60% complete for DR1030-SAH_2_val_2.fq.gz
Approx 65% complete for DR1030-SAH_2_val_2.fq.gz
Approx 70% complete for DR1030-SAH_2_val_2.fq.gz
Approx 75% complete for DR1030-SAH_2_val_2.fq.gz
Approx 80% complete for DR1030-SAH_2_val_2.fq.gz
Approx 85% complete for DR1030-SAH_2_val_2.fq.gz
Approx 90% complete for DR1030-SAH_2_val_2.fq.gz
Approx 95% complete for DR1030-SAH_2_val_2.fq.gz
Analysis complete for DR1030-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1030-SAH_1_trimmed.fq.gz and DR1030-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1034-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1034-SAH_1.fastq.gz data/DR1034-SAH_2.fastq.gz -o results/02.trimgalore/DR1034-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1034-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1034-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1034-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	50	CTGTCTCTTATA	86914	0.06
smallRNA	0	TGGAATTCTCGG	86914	0.00
Illumina	0	AGATCGGAAGAGC	86914	0.00
Using Nextera adapter for trimming (count: 50). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1034-SAH_trimgalore/DR1034-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1034-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1034-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1034-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1034-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.434 s (4.989 µs/read; 12.03 M reads/minute).

=== Summary ===

Total reads processed:                  86,914
Reads with adapters:                    11,172 (12.9%)
Reads written (passing filters):        86,914 (100.0%)

Total basepairs processed:    26,161,114 bp
Quality-trimmed:                 105,944 bp (0.4%)
Total written (filtered):     26,027,139 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 11172 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 47.0%
  C: 9.6%
  G: 28.5%
  T: 14.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	6068	21728.5	0	6068
2	2690	5432.1	0	2690
3	1921	1358.0	0	1921
4	387	339.5	0	387
5	38	84.9	0	38
6	10	21.2	0	10
12	1	0.0	1	0 1
13	1	0.0	1	0 1
29	2	0.0	1	2
36	1	0.0	1	0 1
79	3	0.0	1	2 1
83	4	0.0	1	4
86	2	0.0	1	2
87	1	0.0	1	1
90	1	0.0	1	0 1
91	1	0.0	1	1
95	1	0.0	1	0 1
100	1	0.0	1	0 1
102	1	0.0	1	1
103	1	0.0	1	1
105	1	0.0	1	1
108	1	0.0	1	1
109	1	0.0	1	1
118	1	0.0	1	1
122	1	0.0	1	1
131	1	0.0	1	1
133	1	0.0	1	1
134	1	0.0	1	1
138	1	0.0	1	1
147	1	0.0	1	1
150	2	0.0	1	2
158	1	0.0	1	1
166	1	0.0	1	1
172	1	0.0	1	1
195	1	0.0	1	1
196	1	0.0	1	1
203	1	0.0	1	1
206	1	0.0	1	0 1
210	2	0.0	1	2
217	1	0.0	1	1
219	1	0.0	1	1
222	1	0.0	1	1
224	1	0.0	1	1
247	1	0.0	1	1
250	1	0.0	1	1
263	1	0.0	1	1
284	2	0.0	1	2
286	1	0.0	1	1
287	1	0.0	1	1
289	2	0.0	1	2
290	1	0.0	1	1
291	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/DR1034-SAH_1.fastq.gz
=============================================
86914 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1034-SAH_trimgalore/DR1034-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1034-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1034-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1034-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1034-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.494 s (5.688 µs/read; 10.55 M reads/minute).

=== Summary ===

Total reads processed:                  86,914
Reads with adapters:                    70,780 (81.4%)
Reads written (passing filters):        86,914 (100.0%)

Total basepairs processed:    26,161,114 bp
Quality-trimmed:                 754,872 bp (2.9%)
Total written (filtered):     25,325,003 bp (96.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 70780 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.9%
  C: 79.0%
  G: 14.8%
  T: 2.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	68423	21728.5	0	68423
2	1666	5432.1	0	1666
3	556	1358.0	0	556
4	44	339.5	0	44
5	19	84.9	0	19
6	12	21.2	0	12
12	1	0.0	1	0 1
16	1	0.0	1	0 1
29	1	0.0	1	1
36	1	0.0	1	1
45	1	0.0	1	0 1
56	1	0.0	1	1
57	2	0.0	1	2
60	1	0.0	1	0 1
62	1	0.0	1	0 1
66	1	0.0	1	1
68	1	0.0	1	0 1
82	5	0.0	1	5
83	1	0.0	1	1
87	1	0.0	1	1
89	1	0.0	1	1
91	2	0.0	1	2
92	1	0.0	1	1
93	2	0.0	1	1 1
95	1	0.0	1	1
96	1	0.0	1	1
99	1	0.0	1	0 1
101	1	0.0	1	1
103	1	0.0	1	1
115	1	0.0	1	1
118	1	0.0	1	1
119	3	0.0	1	2 1
120	1	0.0	1	1
130	2	0.0	1	2
134	1	0.0	1	1
136	2	0.0	1	2
143	1	0.0	1	0 1
145	1	0.0	1	1
150	1	0.0	1	1
160	1	0.0	1	1
162	1	0.0	1	1
166	1	0.0	1	1
168	1	0.0	1	0 1
185	1	0.0	1	1
192	1	0.0	1	1
193	1	0.0	1	1
196	1	0.0	1	1
205	1	0.0	1	1
208	1	0.0	1	1
236	1	0.0	1	1
250	1	0.0	1	1
285	2	0.0	1	2
290	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1034-SAH_2.fastq.gz
=============================================
86914 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1034-SAH_1_trimmed.fq.gz and DR1034-SAH_2_trimmed.fq.gz
file_1: DR1034-SAH_1_trimmed.fq.gz, file_2: DR1034-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1034-SAH_1_trimmed.fq.gz and DR1034-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1034-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1034-SAH_2_val_2.fq.gz

Total number of sequences analysed: 86914

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4309 (4.96%)


  >>> Now running FastQC on the validated data DR1034-SAH_1_val_1.fq.gz<<<

Started analysis of DR1034-SAH_1_val_1.fq.gz
Approx 5% complete for DR1034-SAH_1_val_1.fq.gz
Approx 10% complete for DR1034-SAH_1_val_1.fq.gz
Approx 15% complete for DR1034-SAH_1_val_1.fq.gz
Approx 20% complete for DR1034-SAH_1_val_1.fq.gz
Approx 25% complete for DR1034-SAH_1_val_1.fq.gz
Approx 30% complete for DR1034-SAH_1_val_1.fq.gz
Approx 35% complete for DR1034-SAH_1_val_1.fq.gz
Approx 40% complete for DR1034-SAH_1_val_1.fq.gz
Approx 45% complete for DR1034-SAH_1_val_1.fq.gz
Approx 50% complete for DR1034-SAH_1_val_1.fq.gz
Approx 55% complete for DR1034-SAH_1_val_1.fq.gz
Approx 60% complete for DR1034-SAH_1_val_1.fq.gz
Approx 65% complete for DR1034-SAH_1_val_1.fq.gz
Approx 70% complete for DR1034-SAH_1_val_1.fq.gz
Approx 75% complete for DR1034-SAH_1_val_1.fq.gz
Approx 80% complete for DR1034-SAH_1_val_1.fq.gz
Approx 85% complete for DR1034-SAH_1_val_1.fq.gz
Approx 90% complete for DR1034-SAH_1_val_1.fq.gz
Approx 95% complete for DR1034-SAH_1_val_1.fq.gz
Analysis complete for DR1034-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1034-SAH_2_val_2.fq.gz<<<

Started analysis of DR1034-SAH_2_val_2.fq.gz
Approx 5% complete for DR1034-SAH_2_val_2.fq.gz
Approx 10% complete for DR1034-SAH_2_val_2.fq.gz
Approx 15% complete for DR1034-SAH_2_val_2.fq.gz
Approx 20% complete for DR1034-SAH_2_val_2.fq.gz
Approx 25% complete for DR1034-SAH_2_val_2.fq.gz
Approx 30% complete for DR1034-SAH_2_val_2.fq.gz
Approx 35% complete for DR1034-SAH_2_val_2.fq.gz
Approx 40% complete for DR1034-SAH_2_val_2.fq.gz
Approx 45% complete for DR1034-SAH_2_val_2.fq.gz
Approx 50% complete for DR1034-SAH_2_val_2.fq.gz
Approx 55% complete for DR1034-SAH_2_val_2.fq.gz
Approx 60% complete for DR1034-SAH_2_val_2.fq.gz
Approx 65% complete for DR1034-SAH_2_val_2.fq.gz
Approx 70% complete for DR1034-SAH_2_val_2.fq.gz
Approx 75% complete for DR1034-SAH_2_val_2.fq.gz
Approx 80% complete for DR1034-SAH_2_val_2.fq.gz
Approx 85% complete for DR1034-SAH_2_val_2.fq.gz
Approx 90% complete for DR1034-SAH_2_val_2.fq.gz
Approx 95% complete for DR1034-SAH_2_val_2.fq.gz
Analysis complete for DR1034-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1034-SAH_1_trimmed.fq.gz and DR1034-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1035-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1035-E_1.fastq.gz data/DR1035-E_2.fastq.gz -o results/02.trimgalore/DR1035-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1035-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1035-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1035-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	26	CTGTCTCTTATA	91016	0.03
smallRNA	0	TGGAATTCTCGG	91016	0.00
Illumina	0	AGATCGGAAGAGC	91016	0.00
Using Nextera adapter for trimming (count: 26). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1035-E_trimgalore/DR1035-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1035-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1035-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1035-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1035-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.424 s (4.657 µs/read; 12.88 M reads/minute).

=== Summary ===

Total reads processed:                  91,016
Reads with adapters:                     7,055 (7.8%)
Reads written (passing filters):        91,016 (100.0%)

Total basepairs processed:    27,395,816 bp
Quality-trimmed:                  87,681 bp (0.3%)
Total written (filtered):     27,292,342 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 7055 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 49.6%
  C: 10.5%
  G: 19.2%
  T: 20.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3489	22754.0	0	3489
2	968	5688.5	0	968
3	2118	1422.1	0	2118
4	437	355.5	0	437
5	13	88.9	0	13
6	3	22.2	0	3
12	1	0.0	1	1
13	1	0.0	1	1
14	2	0.0	1	2
17	2	0.0	1	2
26	1	0.0	1	1
30	1	0.0	1	1
36	1	0.0	1	0 1
39	1	0.0	1	1
43	5	0.0	1	5
78	1	0.0	1	1
79	2	0.0	1	2
80	1	0.0	1	1
85	1	0.0	1	1
86	1	0.0	1	1
129	1	0.0	1	1
153	1	0.0	1	1
200	1	0.0	1	1
205	1	0.0	1	1
285	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1035-E_1.fastq.gz
=============================================
91016 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1035-E_trimgalore/DR1035-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1035-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1035-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1035-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1035-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.471 s (5.180 µs/read; 11.58 M reads/minute).

=== Summary ===

Total reads processed:                  91,016
Reads with adapters:                    75,280 (82.7%)
Reads written (passing filters):        91,016 (100.0%)

Total basepairs processed:    27,395,816 bp
Quality-trimmed:                 722,699 bp (2.6%)
Total written (filtered):     26,593,175 bp (97.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 75280 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.4%
  C: 81.7%
  G: 12.9%
  T: 2.0%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	73177	22754.0	0	73177
2	1521	5688.5	0	1521
3	501	1422.1	0	501
4	30	355.5	0	30
5	15	88.9	0	15
6	7	22.2	0	7
7	1	5.6	0	1
8	1	1.4	0	1
9	1	0.3	0	1
10	1	0.1	1	0 1
12	1	0.0	1	0 1
13	1	0.0	1	1
16	1	0.0	1	0 1
29	1	0.0	1	1
38	2	0.0	1	2
39	1	0.0	1	1
40	1	0.0	1	1
42	1	0.0	1	1
46	1	0.0	1	1
50	1	0.0	1	0 1
59	1	0.0	1	0 1
66	1	0.0	1	0 1
67	1	0.0	1	1
70	1	0.0	1	1
80	1	0.0	1	1
81	1	0.0	1	1
86	1	0.0	1	1
92	1	0.0	1	1
95	1	0.0	1	1
103	1	0.0	1	1
151	1	0.0	1	0 1
170	1	0.0	1	0 1
177	1	0.0	1	1
289	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1035-E_2.fastq.gz
=============================================
91016 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1035-E_1_trimmed.fq.gz and DR1035-E_2_trimmed.fq.gz
file_1: DR1035-E_1_trimmed.fq.gz, file_2: DR1035-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1035-E_1_trimmed.fq.gz and DR1035-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1035-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1035-E_2_val_2.fq.gz

Total number of sequences analysed: 91016

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4416 (4.85%)


  >>> Now running FastQC on the validated data DR1035-E_1_val_1.fq.gz<<<

Started analysis of DR1035-E_1_val_1.fq.gz
Approx 5% complete for DR1035-E_1_val_1.fq.gz
Approx 10% complete for DR1035-E_1_val_1.fq.gz
Approx 15% complete for DR1035-E_1_val_1.fq.gz
Approx 20% complete for DR1035-E_1_val_1.fq.gz
Approx 25% complete for DR1035-E_1_val_1.fq.gz
Approx 30% complete for DR1035-E_1_val_1.fq.gz
Approx 35% complete for DR1035-E_1_val_1.fq.gz
Approx 40% complete for DR1035-E_1_val_1.fq.gz
Approx 45% complete for DR1035-E_1_val_1.fq.gz
Approx 50% complete for DR1035-E_1_val_1.fq.gz
Approx 55% complete for DR1035-E_1_val_1.fq.gz
Approx 60% complete for DR1035-E_1_val_1.fq.gz
Approx 65% complete for DR1035-E_1_val_1.fq.gz
Approx 70% complete for DR1035-E_1_val_1.fq.gz
Approx 75% complete for DR1035-E_1_val_1.fq.gz
Approx 80% complete for DR1035-E_1_val_1.fq.gz
Approx 85% complete for DR1035-E_1_val_1.fq.gz
Approx 90% complete for DR1035-E_1_val_1.fq.gz
Approx 95% complete for DR1035-E_1_val_1.fq.gz
Analysis complete for DR1035-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1035-E_2_val_2.fq.gz<<<

Started analysis of DR1035-E_2_val_2.fq.gz
Approx 5% complete for DR1035-E_2_val_2.fq.gz
Approx 10% complete for DR1035-E_2_val_2.fq.gz
Approx 15% complete for DR1035-E_2_val_2.fq.gz
Approx 20% complete for DR1035-E_2_val_2.fq.gz
Approx 25% complete for DR1035-E_2_val_2.fq.gz
Approx 30% complete for DR1035-E_2_val_2.fq.gz
Approx 35% complete for DR1035-E_2_val_2.fq.gz
Approx 40% complete for DR1035-E_2_val_2.fq.gz
Approx 45% complete for DR1035-E_2_val_2.fq.gz
Approx 50% complete for DR1035-E_2_val_2.fq.gz
Approx 55% complete for DR1035-E_2_val_2.fq.gz
Approx 60% complete for DR1035-E_2_val_2.fq.gz
Approx 65% complete for DR1035-E_2_val_2.fq.gz
Approx 70% complete for DR1035-E_2_val_2.fq.gz
Approx 75% complete for DR1035-E_2_val_2.fq.gz
Approx 80% complete for DR1035-E_2_val_2.fq.gz
Approx 85% complete for DR1035-E_2_val_2.fq.gz
Approx 90% complete for DR1035-E_2_val_2.fq.gz
Approx 95% complete for DR1035-E_2_val_2.fq.gz
Analysis complete for DR1035-E_2_val_2.fq.gz
Deleting both intermediate output files DR1035-E_1_trimmed.fq.gz and DR1035-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1035-H sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1035-H_1.fastq.gz data/DR1035-H_2.fastq.gz -o results/02.trimgalore/DR1035-H_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1035-H_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1035-H_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1035-H_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	10	CTGTCTCTTATA	107472	0.01
Illumina	0	AGATCGGAAGAGC	107472	0.00
smallRNA	0	TGGAATTCTCGG	107472	0.00
Using Nextera adapter for trimming (count: 10). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1035-H_trimgalore/DR1035-H_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1035-H_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1035-H_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1035-H_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1035-H_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.463 s (4.308 µs/read; 13.93 M reads/minute).

=== Summary ===

Total reads processed:                 107,472
Reads with adapters:                    10,359 (9.6%)
Reads written (passing filters):       107,472 (100.0%)

Total basepairs processed:    32,349,072 bp
Quality-trimmed:                 106,939 bp (0.3%)
Total written (filtered):     32,219,117 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 10359 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 55.8%
  C: 7.7%
  G: 21.5%
  T: 14.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4277	26868.0	0	4277
2	1354	6717.0	0	1354
3	3852	1679.2	0	3852
4	842	419.8	0	842
5	14	105.0	0	14
6	2	26.2	0	2
10	1	0.1	1	0 1
14	2	0.0	1	1 1
25	3	0.0	1	3
35	2	0.0	1	0 2
36	3	0.0	1	1 2
42	1	0.0	1	0 1
73	1	0.0	1	0 1
78	1	0.0	1	1
79	1	0.0	1	1
89	1	0.0	1	1
100	1	0.0	1	1
273	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1035-H_1.fastq.gz
=============================================
107472 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1035-H_trimgalore/DR1035-H_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1035-H_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1035-H_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1035-H_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1035-H_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.578 s (5.375 µs/read; 11.16 M reads/minute).

=== Summary ===

Total reads processed:                 107,472
Reads with adapters:                    88,030 (81.9%)
Reads written (passing filters):       107,472 (100.0%)

Total basepairs processed:    32,349,072 bp
Quality-trimmed:                 931,959 bp (2.9%)
Total written (filtered):     31,324,784 bp (96.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 88030 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.7%
  C: 81.0%
  G: 13.1%
  T: 2.2%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	85323	26868.0	0	85323
2	1959	6717.0	0	1959
3	670	1679.2	0	670
4	35	419.8	0	35
5	23	105.0	0	23
6	5	26.2	0	5
7	1	6.6	0	1
8	1	1.6	0	1
9	1	0.4	0	0 1
12	1	0.0	1	1
13	1	0.0	1	1
18	1	0.0	1	1
24	2	0.0	1	1 1
32	1	0.0	1	1
38	1	0.0	1	1
59	1	0.0	1	1
65	1	0.0	1	1
81	1	0.0	1	1
146	1	0.0	1	1
257	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1035-H_2.fastq.gz
=============================================
107472 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1035-H_1_trimmed.fq.gz and DR1035-H_2_trimmed.fq.gz
file_1: DR1035-H_1_trimmed.fq.gz, file_2: DR1035-H_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1035-H_1_trimmed.fq.gz and DR1035-H_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1035-H_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1035-H_2_val_2.fq.gz

Total number of sequences analysed: 107472

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 5551 (5.17%)


  >>> Now running FastQC on the validated data DR1035-H_1_val_1.fq.gz<<<

Started analysis of DR1035-H_1_val_1.fq.gz
Approx 5% complete for DR1035-H_1_val_1.fq.gz
Approx 10% complete for DR1035-H_1_val_1.fq.gz
Approx 15% complete for DR1035-H_1_val_1.fq.gz
Approx 20% complete for DR1035-H_1_val_1.fq.gz
Approx 25% complete for DR1035-H_1_val_1.fq.gz
Approx 30% complete for DR1035-H_1_val_1.fq.gz
Approx 35% complete for DR1035-H_1_val_1.fq.gz
Approx 40% complete for DR1035-H_1_val_1.fq.gz
Approx 45% complete for DR1035-H_1_val_1.fq.gz
Approx 50% complete for DR1035-H_1_val_1.fq.gz
Approx 55% complete for DR1035-H_1_val_1.fq.gz
Approx 60% complete for DR1035-H_1_val_1.fq.gz
Approx 65% complete for DR1035-H_1_val_1.fq.gz
Approx 70% complete for DR1035-H_1_val_1.fq.gz
Approx 75% complete for DR1035-H_1_val_1.fq.gz
Approx 80% complete for DR1035-H_1_val_1.fq.gz
Approx 85% complete for DR1035-H_1_val_1.fq.gz
Approx 90% complete for DR1035-H_1_val_1.fq.gz
Approx 95% complete for DR1035-H_1_val_1.fq.gz
Analysis complete for DR1035-H_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1035-H_2_val_2.fq.gz<<<

Started analysis of DR1035-H_2_val_2.fq.gz
Approx 5% complete for DR1035-H_2_val_2.fq.gz
Approx 10% complete for DR1035-H_2_val_2.fq.gz
Approx 15% complete for DR1035-H_2_val_2.fq.gz
Approx 20% complete for DR1035-H_2_val_2.fq.gz
Approx 25% complete for DR1035-H_2_val_2.fq.gz
Approx 30% complete for DR1035-H_2_val_2.fq.gz
Approx 35% complete for DR1035-H_2_val_2.fq.gz
Approx 40% complete for DR1035-H_2_val_2.fq.gz
Approx 45% complete for DR1035-H_2_val_2.fq.gz
Approx 50% complete for DR1035-H_2_val_2.fq.gz
Approx 55% complete for DR1035-H_2_val_2.fq.gz
Approx 60% complete for DR1035-H_2_val_2.fq.gz
Approx 65% complete for DR1035-H_2_val_2.fq.gz
Approx 70% complete for DR1035-H_2_val_2.fq.gz
Approx 75% complete for DR1035-H_2_val_2.fq.gz
Approx 80% complete for DR1035-H_2_val_2.fq.gz
Approx 85% complete for DR1035-H_2_val_2.fq.gz
Approx 90% complete for DR1035-H_2_val_2.fq.gz
Approx 95% complete for DR1035-H_2_val_2.fq.gz
Analysis complete for DR1035-H_2_val_2.fq.gz
Deleting both intermediate output files DR1035-H_1_trimmed.fq.gz and DR1035-H_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1035-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1035-SAH_1.fastq.gz data/DR1035-SAH_2.fastq.gz -o results/02.trimgalore/DR1035-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1035-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1035-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1035-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	61	CTGTCTCTTATA	96954	0.06
Illumina	0	AGATCGGAAGAGC	96954	0.00
smallRNA	0	TGGAATTCTCGG	96954	0.00
Using Nextera adapter for trimming (count: 61). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1035-SAH_trimgalore/DR1035-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1035-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1035-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1035-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1035-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.463 s (4.780 µs/read; 12.55 M reads/minute).

=== Summary ===

Total reads processed:                  96,954
Reads with adapters:                     9,713 (10.0%)
Reads written (passing filters):        96,954 (100.0%)

Total basepairs processed:    29,183,154 bp
Quality-trimmed:                 120,614 bp (0.4%)
Total written (filtered):     29,032,515 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 9713 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 45.4%
  C: 11.2%
  G: 22.8%
  T: 20.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4871	24238.5	0	4871
2	1534	6059.6	0	1534
3	2712	1514.9	0	2712
4	485	378.7	0	485
5	37	94.7	0	37
6	2	23.7	0	2
7	1	5.9	0	1
8	1	1.5	0	1
29	1	0.0	1	1
36	1	0.0	1	0 1
78	1	0.0	1	1
79	2	0.0	1	2
82	3	0.0	1	3
83	2	0.0	1	2
84	4	0.0	1	4
86	2	0.0	1	2
87	1	0.0	1	1
88	1	0.0	1	0 1
89	2	0.0	1	2
90	2	0.0	1	2
93	1	0.0	1	1
102	1	0.0	1	1
108	1	0.0	1	1
109	1	0.0	1	1
114	1	0.0	1	1
116	1	0.0	1	1
119	1	0.0	1	0 1
129	1	0.0	1	1
131	1	0.0	1	1
136	1	0.0	1	1
146	1	0.0	1	1
155	1	0.0	1	1
158	1	0.0	1	1
163	1	0.0	1	1
169	1	0.0	1	1
171	1	0.0	1	1
176	1	0.0	1	1
179	1	0.0	1	1
185	1	0.0	1	1
193	1	0.0	1	1
194	1	0.0	1	0 1
197	1	0.0	1	1
205	1	0.0	1	1
212	1	0.0	1	1
217	1	0.0	1	1
218	2	0.0	1	2
225	1	0.0	1	1
240	1	0.0	1	1
251	1	0.0	1	1
252	1	0.0	1	1
257	1	0.0	1	1
263	1	0.0	1	1
265	1	0.0	1	0 1
266	1	0.0	1	1
274	1	0.0	1	0 1
278	2	0.0	1	1 1
282	1	0.0	1	1
283	1	0.0	1	1
287	1	0.0	1	1
288	1	0.0	1	1
289	2	0.0	1	2
291	4	0.0	1	2 2

RUN STATISTICS FOR INPUT FILE: data/DR1035-SAH_1.fastq.gz
=============================================
96954 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1035-SAH_trimgalore/DR1035-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1035-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1035-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1035-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1035-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.516 s (5.324 µs/read; 11.27 M reads/minute).

=== Summary ===

Total reads processed:                  96,954
Reads with adapters:                    80,953 (83.5%)
Reads written (passing filters):        96,954 (100.0%)

Total basepairs processed:    29,183,154 bp
Quality-trimmed:                 688,989 bp (2.4%)
Total written (filtered):     28,400,036 bp (97.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 80953 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.2%
  C: 81.6%
  G: 13.3%
  T: 1.9%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	78793	24238.5	0	78793
2	1499	6059.6	0	1499
3	526	1514.9	0	526
4	30	378.7	0	30
5	17	94.7	0	17
6	7	23.7	0	7
7	2	5.9	0	2
11	1	0.0	1	0 1
28	1	0.0	1	1
49	1	0.0	1	1
55	1	0.0	1	1
60	1	0.0	1	1
79	1	0.0	1	1
80	2	0.0	1	2
81	2	0.0	1	2
82	6	0.0	1	6
83	6	0.0	1	6
85	1	0.0	1	0 1
86	1	0.0	1	1
87	1	0.0	1	1
88	1	0.0	1	1
92	1	0.0	1	1
93	1	0.0	1	1
96	3	0.0	1	1 2
100	1	0.0	1	1
101	1	0.0	1	1
102	1	0.0	1	1
105	1	0.0	1	1
106	2	0.0	1	2
107	1	0.0	1	1
112	2	0.0	1	1 1
115	1	0.0	1	1
118	1	0.0	1	0 1
121	1	0.0	1	1
123	1	0.0	1	1
127	1	0.0	1	1
131	1	0.0	1	1
134	1	0.0	1	1
135	1	0.0	1	1
137	1	0.0	1	1
141	1	0.0	1	1
142	1	0.0	1	1
156	1	0.0	1	1
159	1	0.0	1	1
160	1	0.0	1	1
162	1	0.0	1	0 1
174	1	0.0	1	1
179	1	0.0	1	1
180	1	0.0	1	1
181	1	0.0	1	0 1
184	2	0.0	1	0 2
186	1	0.0	1	1
187	1	0.0	1	1
188	1	0.0	1	1
189	1	0.0	1	1
190	1	0.0	1	1
195	1	0.0	1	1
199	1	0.0	1	1
203	1	0.0	1	1
206	1	0.0	1	1
207	1	0.0	1	0 1
208	1	0.0	1	0 1
211	1	0.0	1	0 1
213	1	0.0	1	1
253	1	0.0	1	1
287	1	0.0	1	1
288	1	0.0	1	1
289	1	0.0	1	1
293	1	0.0	1	0 1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1035-SAH_2.fastq.gz
=============================================
96954 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1035-SAH_1_trimmed.fq.gz and DR1035-SAH_2_trimmed.fq.gz
file_1: DR1035-SAH_1_trimmed.fq.gz, file_2: DR1035-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1035-SAH_1_trimmed.fq.gz and DR1035-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1035-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1035-SAH_2_val_2.fq.gz

Total number of sequences analysed: 96954

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 3831 (3.95%)


  >>> Now running FastQC on the validated data DR1035-SAH_1_val_1.fq.gz<<<

Started analysis of DR1035-SAH_1_val_1.fq.gz
Approx 5% complete for DR1035-SAH_1_val_1.fq.gz
Approx 10% complete for DR1035-SAH_1_val_1.fq.gz
Approx 15% complete for DR1035-SAH_1_val_1.fq.gz
Approx 20% complete for DR1035-SAH_1_val_1.fq.gz
Approx 25% complete for DR1035-SAH_1_val_1.fq.gz
Approx 30% complete for DR1035-SAH_1_val_1.fq.gz
Approx 35% complete for DR1035-SAH_1_val_1.fq.gz
Approx 40% complete for DR1035-SAH_1_val_1.fq.gz
Approx 45% complete for DR1035-SAH_1_val_1.fq.gz
Approx 50% complete for DR1035-SAH_1_val_1.fq.gz
Approx 55% complete for DR1035-SAH_1_val_1.fq.gz
Approx 60% complete for DR1035-SAH_1_val_1.fq.gz
Approx 65% complete for DR1035-SAH_1_val_1.fq.gz
Approx 70% complete for DR1035-SAH_1_val_1.fq.gz
Approx 75% complete for DR1035-SAH_1_val_1.fq.gz
Approx 80% complete for DR1035-SAH_1_val_1.fq.gz
Approx 85% complete for DR1035-SAH_1_val_1.fq.gz
Approx 90% complete for DR1035-SAH_1_val_1.fq.gz
Approx 95% complete for DR1035-SAH_1_val_1.fq.gz
Analysis complete for DR1035-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1035-SAH_2_val_2.fq.gz<<<

Started analysis of DR1035-SAH_2_val_2.fq.gz
Approx 5% complete for DR1035-SAH_2_val_2.fq.gz
Approx 10% complete for DR1035-SAH_2_val_2.fq.gz
Approx 15% complete for DR1035-SAH_2_val_2.fq.gz
Approx 20% complete for DR1035-SAH_2_val_2.fq.gz
Approx 25% complete for DR1035-SAH_2_val_2.fq.gz
Approx 30% complete for DR1035-SAH_2_val_2.fq.gz
Approx 35% complete for DR1035-SAH_2_val_2.fq.gz
Approx 40% complete for DR1035-SAH_2_val_2.fq.gz
Approx 45% complete for DR1035-SAH_2_val_2.fq.gz
Approx 50% complete for DR1035-SAH_2_val_2.fq.gz
Approx 55% complete for DR1035-SAH_2_val_2.fq.gz
Approx 60% complete for DR1035-SAH_2_val_2.fq.gz
Approx 65% complete for DR1035-SAH_2_val_2.fq.gz
Approx 70% complete for DR1035-SAH_2_val_2.fq.gz
Approx 75% complete for DR1035-SAH_2_val_2.fq.gz
Approx 80% complete for DR1035-SAH_2_val_2.fq.gz
Approx 85% complete for DR1035-SAH_2_val_2.fq.gz
Approx 90% complete for DR1035-SAH_2_val_2.fq.gz
Approx 95% complete for DR1035-SAH_2_val_2.fq.gz
Analysis complete for DR1035-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1035-SAH_1_trimmed.fq.gz and DR1035-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1036-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1036-SAH_1.fastq.gz data/DR1036-SAH_2.fastq.gz -o results/02.trimgalore/DR1036-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1036-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1036-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1036-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	62	CTGTCTCTTATA	80958	0.08
Illumina	0	AGATCGGAAGAGC	80958	0.00
smallRNA	0	TGGAATTCTCGG	80958	0.00
Using Nextera adapter for trimming (count: 62). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1036-SAH_trimgalore/DR1036-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1036-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1036-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1036-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1036-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.410 s (5.069 µs/read; 11.84 M reads/minute).

=== Summary ===

Total reads processed:                  80,958
Reads with adapters:                     8,812 (10.9%)
Reads written (passing filters):        80,958 (100.0%)

Total basepairs processed:    24,368,358 bp
Quality-trimmed:                 154,188 bp (0.6%)
Total written (filtered):     24,186,216 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 8812 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 41.3%
  C: 13.0%
  G: 23.9%
  T: 21.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4683	20239.5	0	4683
2	1480	5059.9	0	1480
3	2256	1265.0	0	2256
4	268	316.2	0	268
5	41	79.1	0	41
6	4	19.8	0	4
7	1	4.9	0	1
10	1	0.1	1	0 1
23	1	0.0	1	0 1
27	1	0.0	1	1
36	3	0.0	1	0 3
68	1	0.0	1	0 1
69	1	0.0	1	1
76	1	0.0	1	1
78	2	0.0	1	2
79	3	0.0	1	1 2
80	3	0.0	1	3
81	1	0.0	1	1
85	1	0.0	1	0 1
86	1	0.0	1	1
87	2	0.0	1	2
89	2	0.0	1	2
90	1	0.0	1	1
95	2	0.0	1	2
98	3	0.0	1	0 3
100	1	0.0	1	1
103	1	0.0	1	1
109	1	0.0	1	1
110	1	0.0	1	1
111	1	0.0	1	1
115	1	0.0	1	1
116	1	0.0	1	1
129	1	0.0	1	0 1
130	1	0.0	1	0 1
135	1	0.0	1	1
137	1	0.0	1	1
138	1	0.0	1	1
139	1	0.0	1	1
147	1	0.0	1	1
152	1	0.0	1	1
158	1	0.0	1	1
167	1	0.0	1	0 1
170	1	0.0	1	1
172	1	0.0	1	0 1
177	1	0.0	1	1
180	1	0.0	1	1
189	1	0.0	1	1
190	1	0.0	1	1
196	1	0.0	1	1
201	1	0.0	1	1
206	1	0.0	1	1
219	2	0.0	1	2
231	1	0.0	1	1
232	1	0.0	1	0 1
234	1	0.0	1	1
250	1	0.0	1	1
256	1	0.0	1	1
260	1	0.0	1	1
265	1	0.0	1	1
267	1	0.0	1	1
275	1	0.0	1	1
282	1	0.0	1	1
286	1	0.0	1	1
287	2	0.0	1	2
288	2	0.0	1	2
289	2	0.0	1	2
290	2	0.0	1	2
291	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/DR1036-SAH_1.fastq.gz
=============================================
80958 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1036-SAH_trimgalore/DR1036-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1036-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1036-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1036-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1036-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.472 s (5.830 µs/read; 10.29 M reads/minute).

=== Summary ===

Total reads processed:                  80,958
Reads with adapters:                    65,590 (81.0%)
Reads written (passing filters):        80,958 (100.0%)

Total basepairs processed:    24,368,358 bp
Quality-trimmed:                 800,060 bp (3.3%)
Total written (filtered):     23,490,294 bp (96.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 65590 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 4.0%
  C: 78.2%
  G: 15.1%
  T: 2.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	63220	20239.5	0	63220
2	1698	5059.9	0	1698
3	524	1265.0	0	524
4	36	316.2	0	36
5	18	79.1	0	18
6	17	19.8	0	17
7	1	4.9	0	1
9	1	0.3	0	0 1
10	1	0.1	1	0 1
11	1	0.0	1	0 1
27	1	0.0	1	1
28	1	0.0	1	0 1
47	1	0.0	1	1
51	1	0.0	1	1
55	1	0.0	1	0 1
59	1	0.0	1	1
79	1	0.0	1	1
81	1	0.0	1	0 1
82	2	0.0	1	2
83	5	0.0	1	5
84	3	0.0	1	3
85	2	0.0	1	2
86	2	0.0	1	2
87	1	0.0	1	1
88	2	0.0	1	2
90	2	0.0	1	2
91	2	0.0	1	2
92	2	0.0	1	2
93	1	0.0	1	1
96	1	0.0	1	1
98	1	0.0	1	1
102	1	0.0	1	1
107	1	0.0	1	1
109	1	0.0	1	1
110	1	0.0	1	1
114	1	0.0	1	1
115	1	0.0	1	1
117	2	0.0	1	2
119	2	0.0	1	2
122	1	0.0	1	1
135	1	0.0	1	1
139	1	0.0	1	1
141	1	0.0	1	1
149	1	0.0	1	1
155	1	0.0	1	1
156	1	0.0	1	1
160	2	0.0	1	1 1
163	1	0.0	1	1
171	1	0.0	1	1
173	1	0.0	1	0 1
175	1	0.0	1	1
180	2	0.0	1	2
181	1	0.0	1	1
183	1	0.0	1	1
185	1	0.0	1	1
193	1	0.0	1	0 1
196	1	0.0	1	1
200	1	0.0	1	1
206	1	0.0	1	1
235	1	0.0	1	1
237	1	0.0	1	1
287	1	0.0	1	1
288	2	0.0	1	2
290	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/DR1036-SAH_2.fastq.gz
=============================================
80958 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1036-SAH_1_trimmed.fq.gz and DR1036-SAH_2_trimmed.fq.gz
file_1: DR1036-SAH_1_trimmed.fq.gz, file_2: DR1036-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1036-SAH_1_trimmed.fq.gz and DR1036-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1036-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1036-SAH_2_val_2.fq.gz

Total number of sequences analysed: 80958

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4871 (6.02%)


  >>> Now running FastQC on the validated data DR1036-SAH_1_val_1.fq.gz<<<

Started analysis of DR1036-SAH_1_val_1.fq.gz
Approx 5% complete for DR1036-SAH_1_val_1.fq.gz
Approx 10% complete for DR1036-SAH_1_val_1.fq.gz
Approx 15% complete for DR1036-SAH_1_val_1.fq.gz
Approx 20% complete for DR1036-SAH_1_val_1.fq.gz
Approx 25% complete for DR1036-SAH_1_val_1.fq.gz
Approx 30% complete for DR1036-SAH_1_val_1.fq.gz
Approx 35% complete for DR1036-SAH_1_val_1.fq.gz
Approx 40% complete for DR1036-SAH_1_val_1.fq.gz
Approx 45% complete for DR1036-SAH_1_val_1.fq.gz
Approx 50% complete for DR1036-SAH_1_val_1.fq.gz
Approx 55% complete for DR1036-SAH_1_val_1.fq.gz
Approx 60% complete for DR1036-SAH_1_val_1.fq.gz
Approx 65% complete for DR1036-SAH_1_val_1.fq.gz
Approx 70% complete for DR1036-SAH_1_val_1.fq.gz
Approx 75% complete for DR1036-SAH_1_val_1.fq.gz
Approx 80% complete for DR1036-SAH_1_val_1.fq.gz
Approx 85% complete for DR1036-SAH_1_val_1.fq.gz
Approx 90% complete for DR1036-SAH_1_val_1.fq.gz
Approx 95% complete for DR1036-SAH_1_val_1.fq.gz
Analysis complete for DR1036-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1036-SAH_2_val_2.fq.gz<<<

Started analysis of DR1036-SAH_2_val_2.fq.gz
Approx 5% complete for DR1036-SAH_2_val_2.fq.gz
Approx 10% complete for DR1036-SAH_2_val_2.fq.gz
Approx 15% complete for DR1036-SAH_2_val_2.fq.gz
Approx 20% complete for DR1036-SAH_2_val_2.fq.gz
Approx 25% complete for DR1036-SAH_2_val_2.fq.gz
Approx 30% complete for DR1036-SAH_2_val_2.fq.gz
Approx 35% complete for DR1036-SAH_2_val_2.fq.gz
Approx 40% complete for DR1036-SAH_2_val_2.fq.gz
Approx 45% complete for DR1036-SAH_2_val_2.fq.gz
Approx 50% complete for DR1036-SAH_2_val_2.fq.gz
Approx 55% complete for DR1036-SAH_2_val_2.fq.gz
Approx 60% complete for DR1036-SAH_2_val_2.fq.gz
Approx 65% complete for DR1036-SAH_2_val_2.fq.gz
Approx 70% complete for DR1036-SAH_2_val_2.fq.gz
Approx 75% complete for DR1036-SAH_2_val_2.fq.gz
Approx 80% complete for DR1036-SAH_2_val_2.fq.gz
Approx 85% complete for DR1036-SAH_2_val_2.fq.gz
Approx 90% complete for DR1036-SAH_2_val_2.fq.gz
Approx 95% complete for DR1036-SAH_2_val_2.fq.gz
Analysis complete for DR1036-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1036-SAH_1_trimmed.fq.gz and DR1036-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1038-A-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1038-A-SAH_1.fastq.gz data/DR1038-A-SAH_2.fastq.gz -o results/02.trimgalore/DR1038-A-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1038-A-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1038-A-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1038-A-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	69	CTGTCTCTTATA	89993	0.08
Illumina	0	AGATCGGAAGAGC	89993	0.00
smallRNA	0	TGGAATTCTCGG	89993	0.00
Using Nextera adapter for trimming (count: 69). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1038-A-SAH_trimgalore/DR1038-A-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1038-A-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1038-A-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1038-A-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1038-A-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.442 s (4.906 µs/read; 12.23 M reads/minute).

=== Summary ===

Total reads processed:                  89,993
Reads with adapters:                     9,345 (10.4%)
Reads written (passing filters):        89,993 (100.0%)

Total basepairs processed:    27,087,893 bp
Quality-trimmed:                 122,183 bp (0.5%)
Total written (filtered):     26,937,148 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 9345 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 34.1%
  C: 14.0%
  G: 29.6%
  T: 22.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	5337	22498.2	0	5337
2	1527	5624.6	0	1527
3	2009	1406.1	0	2009
4	345	351.5	0	345
5	41	87.9	0	41
6	6	22.0	0	6
8	1	1.4	0	1
9	1	0.3	0	1
12	1	0.0	1	1
21	1	0.0	1	0 1
36	1	0.0	1	0 1
54	1	0.0	1	1
58	1	0.0	1	0 1
64	1	0.0	1	1
70	1	0.0	1	1
78	3	0.0	1	3
79	3	0.0	1	3
80	1	0.0	1	1
81	1	0.0	1	1
83	1	0.0	1	1
84	1	0.0	1	1
86	2	0.0	1	2
87	1	0.0	1	1
88	1	0.0	1	1
89	3	0.0	1	3
90	1	0.0	1	1
93	1	0.0	1	1
95	4	0.0	1	4
98	1	0.0	1	0 1
100	1	0.0	1	1
105	1	0.0	1	1
106	1	0.0	1	1
109	1	0.0	1	1
112	1	0.0	1	1
115	1	0.0	1	1
130	1	0.0	1	1
133	1	0.0	1	1
144	1	0.0	1	1
156	1	0.0	1	1
157	1	0.0	1	1
182	1	0.0	1	1
183	1	0.0	1	1
184	1	0.0	1	1
185	1	0.0	1	1
190	1	0.0	1	1
192	1	0.0	1	0 1
193	2	0.0	1	2
194	1	0.0	1	1
200	1	0.0	1	1
201	1	0.0	1	1
208	2	0.0	1	0 2
210	1	0.0	1	1
218	1	0.0	1	1
229	1	0.0	1	1
242	1	0.0	1	1
245	1	0.0	1	1
251	1	0.0	1	1
261	1	0.0	1	1
262	1	0.0	1	1
271	1	0.0	1	1
286	2	0.0	1	2
287	1	0.0	1	0 1
288	1	0.0	1	1
289	3	0.0	1	3
290	3	0.0	1	3
291	4	0.0	1	3 1

RUN STATISTICS FOR INPUT FILE: data/DR1038-A-SAH_1.fastq.gz
=============================================
89993 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1038-A-SAH_trimgalore/DR1038-A-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1038-A-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1038-A-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1038-A-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1038-A-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.487 s (5.407 µs/read; 11.10 M reads/minute).

=== Summary ===

Total reads processed:                  89,993
Reads with adapters:                    74,359 (82.6%)
Reads written (passing filters):        89,993 (100.0%)

Total basepairs processed:    27,087,893 bp
Quality-trimmed:                 700,677 bp (2.6%)
Total written (filtered):     26,299,700 bp (97.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 74359 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.5%
  C: 80.3%
  G: 14.3%
  T: 1.9%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	72076	22498.2	0	72076
2	1588	5624.6	0	1588
3	555	1406.1	0	555
4	31	351.5	0	31
5	26	87.9	0	26
6	5	22.0	0	5
8	1	1.4	0	1
25	1	0.0	1	0 1
33	1	0.0	1	1
34	1	0.0	1	0 1
40	1	0.0	1	0 1
45	1	0.0	1	0 1
50	2	0.0	1	1 1
51	1	0.0	1	0 1
58	1	0.0	1	1
66	1	0.0	1	1
74	1	0.0	1	0 1
82	2	0.0	1	2
83	2	0.0	1	2
84	4	0.0	1	4
85	1	0.0	1	1
86	4	0.0	1	4
87	2	0.0	1	2
88	1	0.0	1	1
92	1	0.0	1	1
95	1	0.0	1	1
99	1	0.0	1	1
100	1	0.0	1	1
101	1	0.0	1	1
102	1	0.0	1	1
106	1	0.0	1	1
111	1	0.0	1	1
112	1	0.0	1	1
114	1	0.0	1	1
118	1	0.0	1	1
124	1	0.0	1	1
125	1	0.0	1	1
126	1	0.0	1	1
128	1	0.0	1	1
130	1	0.0	1	1
136	1	0.0	1	0 1
139	1	0.0	1	1
148	1	0.0	1	0 1
150	1	0.0	1	1
151	1	0.0	1	1
152	1	0.0	1	1
153	1	0.0	1	1
154	1	0.0	1	1
160	1	0.0	1	1
162	2	0.0	1	2
171	1	0.0	1	1
175	1	0.0	1	0 1
177	1	0.0	1	1
179	2	0.0	1	2
182	2	0.0	1	2
184	2	0.0	1	2
188	1	0.0	1	1
190	1	0.0	1	1
191	1	0.0	1	1
198	1	0.0	1	1
210	1	0.0	1	1
211	2	0.0	1	2
225	1	0.0	1	1
288	3	0.0	1	3
290	1	0.0	1	1
291	1	0.0	1	1
292	1	0.0	1	0 1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1038-A-SAH_2.fastq.gz
=============================================
89993 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1038-A-SAH_1_trimmed.fq.gz and DR1038-A-SAH_2_trimmed.fq.gz
file_1: DR1038-A-SAH_1_trimmed.fq.gz, file_2: DR1038-A-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1038-A-SAH_1_trimmed.fq.gz and DR1038-A-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1038-A-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1038-A-SAH_2_val_2.fq.gz

Total number of sequences analysed: 89993

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 3942 (4.38%)


  >>> Now running FastQC on the validated data DR1038-A-SAH_1_val_1.fq.gz<<<

Started analysis of DR1038-A-SAH_1_val_1.fq.gz
Approx 5% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 10% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 15% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 20% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 25% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 30% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 35% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 40% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 45% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 50% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 55% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 60% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 65% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 70% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 75% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 80% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 85% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 90% complete for DR1038-A-SAH_1_val_1.fq.gz
Approx 95% complete for DR1038-A-SAH_1_val_1.fq.gz
Analysis complete for DR1038-A-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1038-A-SAH_2_val_2.fq.gz<<<

Started analysis of DR1038-A-SAH_2_val_2.fq.gz
Approx 5% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 10% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 15% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 20% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 25% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 30% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 35% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 40% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 45% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 50% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 55% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 60% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 65% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 70% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 75% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 80% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 85% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 90% complete for DR1038-A-SAH_2_val_2.fq.gz
Approx 95% complete for DR1038-A-SAH_2_val_2.fq.gz
Analysis complete for DR1038-A-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1038-A-SAH_1_trimmed.fq.gz and DR1038-A-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1038-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1038-SAH_1.fastq.gz data/DR1038-SAH_2.fastq.gz -o results/02.trimgalore/DR1038-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1038-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1038-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1038-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	50	CTGTCTCTTATA	86871	0.06
Illumina	0	AGATCGGAAGAGC	86871	0.00
smallRNA	0	TGGAATTCTCGG	86871	0.00
Using Nextera adapter for trimming (count: 50). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1038-SAH_trimgalore/DR1038-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1038-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1038-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1038-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1038-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.429 s (4.936 µs/read; 12.16 M reads/minute).

=== Summary ===

Total reads processed:                  86,871
Reads with adapters:                     8,081 (9.3%)
Reads written (passing filters):        86,871 (100.0%)

Total basepairs processed:    26,148,171 bp
Quality-trimmed:                  98,781 bp (0.4%)
Total written (filtered):     26,024,388 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 8081 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 49.1%
  C: 10.0%
  G: 22.0%
  T: 18.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3937	21717.8	0	3937
2	1656	5429.4	0	1656
3	2100	1357.4	0	2100
4	270	339.3	0	270
5	51	84.8	0	51
6	5	21.2	0	5
70	1	0.0	1	1
72	1	0.0	1	1
73	1	0.0	1	1
77	1	0.0	1	0 1
79	1	0.0	1	0 1
80	5	0.0	1	5
82	1	0.0	1	1
83	2	0.0	1	1 1
86	1	0.0	1	1
87	1	0.0	1	0 1
88	1	0.0	1	1
89	1	0.0	1	0 1
90	1	0.0	1	1
92	1	0.0	1	0 1
93	1	0.0	1	1
100	1	0.0	1	1
103	1	0.0	1	0 1
113	1	0.0	1	0 1
116	1	0.0	1	0 1
123	1	0.0	1	1
124	1	0.0	1	1
131	1	0.0	1	1
132	1	0.0	1	1
145	1	0.0	1	1
151	1	0.0	1	1
154	1	0.0	1	1
158	1	0.0	1	1
170	2	0.0	1	2
171	1	0.0	1	1
172	1	0.0	1	1
175	1	0.0	1	1
177	1	0.0	1	1
181	1	0.0	1	1
184	2	0.0	1	1 1
194	1	0.0	1	1
198	1	0.0	1	1
206	1	0.0	1	1
214	1	0.0	1	1
215	1	0.0	1	1
228	1	0.0	1	1
229	1	0.0	1	1
234	1	0.0	1	1
236	1	0.0	1	1
242	1	0.0	1	1
256	1	0.0	1	1
260	1	0.0	1	1
286	1	0.0	1	0 1
287	3	0.0	1	3
288	1	0.0	1	1
290	1	0.0	1	0 1
291	3	0.0	1	3

RUN STATISTICS FOR INPUT FILE: data/DR1038-SAH_1.fastq.gz
=============================================
86871 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1038-SAH_trimgalore/DR1038-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1038-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1038-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1038-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1038-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.516 s (5.939 µs/read; 10.10 M reads/minute).

=== Summary ===

Total reads processed:                  86,871
Reads with adapters:                    70,672 (81.4%)
Reads written (passing filters):        86,871 (100.0%)

Total basepairs processed:    26,148,171 bp
Quality-trimmed:                 762,077 bp (2.9%)
Total written (filtered):     25,305,247 bp (96.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 70672 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.8%
  C: 79.5%
  G: 14.3%
  T: 2.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	68362	21717.8	0	68362
2	1678	5429.4	0	1678
3	508	1357.4	0	508
4	43	339.3	0	43
5	17	84.8	0	17
6	1	21.2	0	1
27	1	0.0	1	1
38	2	0.0	1	2
43	1	0.0	1	0 1
80	1	0.0	1	1
81	1	0.0	1	1
82	3	0.0	1	3
83	2	0.0	1	1 1
84	2	0.0	1	2
85	2	0.0	1	2
87	3	0.0	1	3
88	1	0.0	1	1
89	4	0.0	1	4
90	3	0.0	1	3
92	1	0.0	1	0 1
94	1	0.0	1	0 1
95	1	0.0	1	1
96	2	0.0	1	2
97	1	0.0	1	1
106	1	0.0	1	1
110	1	0.0	1	1
111	1	0.0	1	1
114	1	0.0	1	1
115	2	0.0	1	2
125	2	0.0	1	2
127	1	0.0	1	1
129	1	0.0	1	1
133	1	0.0	1	1
138	1	0.0	1	1
140	2	0.0	1	2
144	1	0.0	1	1
148	1	0.0	1	1
152	2	0.0	1	2
154	1	0.0	1	0 1
158	1	0.0	1	1
159	1	0.0	1	1
164	1	0.0	1	0 1
170	1	0.0	1	1
172	1	0.0	1	1
174	1	0.0	1	1
182	1	0.0	1	1
183	1	0.0	1	1
191	1	0.0	1	1
215	1	0.0	1	1
226	1	0.0	1	0 1
268	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1038-SAH_2.fastq.gz
=============================================
86871 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1038-SAH_1_trimmed.fq.gz and DR1038-SAH_2_trimmed.fq.gz
file_1: DR1038-SAH_1_trimmed.fq.gz, file_2: DR1038-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1038-SAH_1_trimmed.fq.gz and DR1038-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1038-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1038-SAH_2_val_2.fq.gz

Total number of sequences analysed: 86871

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4392 (5.06%)


  >>> Now running FastQC on the validated data DR1038-SAH_1_val_1.fq.gz<<<

Started analysis of DR1038-SAH_1_val_1.fq.gz
Approx 5% complete for DR1038-SAH_1_val_1.fq.gz
Approx 10% complete for DR1038-SAH_1_val_1.fq.gz
Approx 15% complete for DR1038-SAH_1_val_1.fq.gz
Approx 20% complete for DR1038-SAH_1_val_1.fq.gz
Approx 25% complete for DR1038-SAH_1_val_1.fq.gz
Approx 30% complete for DR1038-SAH_1_val_1.fq.gz
Approx 35% complete for DR1038-SAH_1_val_1.fq.gz
Approx 40% complete for DR1038-SAH_1_val_1.fq.gz
Approx 45% complete for DR1038-SAH_1_val_1.fq.gz
Approx 50% complete for DR1038-SAH_1_val_1.fq.gz
Approx 55% complete for DR1038-SAH_1_val_1.fq.gz
Approx 60% complete for DR1038-SAH_1_val_1.fq.gz
Approx 65% complete for DR1038-SAH_1_val_1.fq.gz
Approx 70% complete for DR1038-SAH_1_val_1.fq.gz
Approx 75% complete for DR1038-SAH_1_val_1.fq.gz
Approx 80% complete for DR1038-SAH_1_val_1.fq.gz
Approx 85% complete for DR1038-SAH_1_val_1.fq.gz
Approx 90% complete for DR1038-SAH_1_val_1.fq.gz
Approx 95% complete for DR1038-SAH_1_val_1.fq.gz
Analysis complete for DR1038-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1038-SAH_2_val_2.fq.gz<<<

Started analysis of DR1038-SAH_2_val_2.fq.gz
Approx 5% complete for DR1038-SAH_2_val_2.fq.gz
Approx 10% complete for DR1038-SAH_2_val_2.fq.gz
Approx 15% complete for DR1038-SAH_2_val_2.fq.gz
Approx 20% complete for DR1038-SAH_2_val_2.fq.gz
Approx 25% complete for DR1038-SAH_2_val_2.fq.gz
Approx 30% complete for DR1038-SAH_2_val_2.fq.gz
Approx 35% complete for DR1038-SAH_2_val_2.fq.gz
Approx 40% complete for DR1038-SAH_2_val_2.fq.gz
Approx 45% complete for DR1038-SAH_2_val_2.fq.gz
Approx 50% complete for DR1038-SAH_2_val_2.fq.gz
Approx 55% complete for DR1038-SAH_2_val_2.fq.gz
Approx 60% complete for DR1038-SAH_2_val_2.fq.gz
Approx 65% complete for DR1038-SAH_2_val_2.fq.gz
Approx 70% complete for DR1038-SAH_2_val_2.fq.gz
Approx 75% complete for DR1038-SAH_2_val_2.fq.gz
Approx 80% complete for DR1038-SAH_2_val_2.fq.gz
Approx 85% complete for DR1038-SAH_2_val_2.fq.gz
Approx 90% complete for DR1038-SAH_2_val_2.fq.gz
Approx 95% complete for DR1038-SAH_2_val_2.fq.gz
Analysis complete for DR1038-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1038-SAH_1_trimmed.fq.gz and DR1038-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1039-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1039-SAH_1.fastq.gz data/DR1039-SAH_2.fastq.gz -o results/02.trimgalore/DR1039-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1039-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1039-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1039-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	59	CTGTCTCTTATA	82309	0.07
Illumina	0	AGATCGGAAGAGC	82309	0.00
smallRNA	0	TGGAATTCTCGG	82309	0.00
Using Nextera adapter for trimming (count: 59). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1039-SAH_trimgalore/DR1039-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1039-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1039-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1039-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1039-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.400 s (4.859 µs/read; 12.35 M reads/minute).

=== Summary ===

Total reads processed:                  82,309
Reads with adapters:                     9,072 (11.0%)
Reads written (passing filters):        82,309 (100.0%)

Total basepairs processed:    24,775,009 bp
Quality-trimmed:                 107,028 bp (0.4%)
Total written (filtered):     24,638,634 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 9072 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 52.2%
  C: 10.7%
  G: 19.9%
  T: 17.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4249	20577.2	0	4249
2	1689	5144.3	0	1689
3	2649	1286.1	0	2649
4	362	321.5	0	362
5	52	80.4	0	52
6	2	20.1	0	2
29	1	0.0	1	1
36	1	0.0	1	0 1
62	1	0.0	1	1
78	1	0.0	1	1
79	2	0.0	1	2
80	2	0.0	1	1 1
81	1	0.0	1	1
83	1	0.0	1	1
86	1	0.0	1	1
87	1	0.0	1	1
89	1	0.0	1	1
90	1	0.0	1	1
91	1	0.0	1	1
94	1	0.0	1	1
95	1	0.0	1	0 1
100	1	0.0	1	1
105	1	0.0	1	1
106	1	0.0	1	1
109	1	0.0	1	1
114	1	0.0	1	1
115	1	0.0	1	1
124	1	0.0	1	1
128	1	0.0	1	1
136	1	0.0	1	1
139	1	0.0	1	1
142	3	0.0	1	3
148	1	0.0	1	1
155	1	0.0	1	1
166	1	0.0	1	1
168	2	0.0	1	2
175	1	0.0	1	1
177	2	0.0	1	1 1
178	1	0.0	1	1
184	1	0.0	1	0 1
189	1	0.0	1	1
190	1	0.0	1	1
198	1	0.0	1	1
199	1	0.0	1	1
207	1	0.0	1	1
209	1	0.0	1	0 1
213	1	0.0	1	1
228	1	0.0	1	1
232	1	0.0	1	0 1
252	1	0.0	1	0 1
254	1	0.0	1	1
262	1	0.0	1	1
263	2	0.0	1	2
272	1	0.0	1	1
275	1	0.0	1	1
279	3	0.0	1	2 1
284	1	0.0	1	1
288	2	0.0	1	2
289	2	0.0	1	1 1
291	5	0.0	1	5

RUN STATISTICS FOR INPUT FILE: data/DR1039-SAH_1.fastq.gz
=============================================
82309 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1039-SAH_trimgalore/DR1039-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1039-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1039-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1039-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1039-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.479 s (5.822 µs/read; 10.30 M reads/minute).

=== Summary ===

Total reads processed:                  82,309
Reads with adapters:                    67,078 (81.5%)
Reads written (passing filters):        82,309 (100.0%)

Total basepairs processed:    24,775,009 bp
Quality-trimmed:                 766,356 bp (3.1%)
Total written (filtered):     23,930,866 bp (96.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 67078 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 4.1%
  C: 78.4%
  G: 15.0%
  T: 2.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	64810	20577.2	0	64810
2	1635	5144.3	0	1635
3	500	1286.1	0	500
4	39	321.5	0	39
5	15	80.4	0	15
6	10	20.1	0	10
9	1	0.3	0	0 1
16	1	0.0	1	0 1
29	1	0.0	1	1
31	1	0.0	1	0 1
41	1	0.0	1	1
43	1	0.0	1	1
58	1	0.0	1	1
76	1	0.0	1	0 1
77	1	0.0	1	0 1
81	2	0.0	1	2
82	3	0.0	1	3
83	1	0.0	1	1
84	2	0.0	1	1 1
85	2	0.0	1	2
86	4	0.0	1	4
87	4	0.0	1	4
88	2	0.0	1	2
89	1	0.0	1	1
90	2	0.0	1	2
91	2	0.0	1	2
92	1	0.0	1	1
93	1	0.0	1	1
94	1	0.0	1	1
97	1	0.0	1	1
100	1	0.0	1	1
106	1	0.0	1	1
107	1	0.0	1	1
109	2	0.0	1	2
113	2	0.0	1	2
116	1	0.0	1	1
121	1	0.0	1	1
129	1	0.0	1	0 1
131	1	0.0	1	1
135	1	0.0	1	1
136	2	0.0	1	2
138	1	0.0	1	1
150	1	0.0	1	1
152	1	0.0	1	1
163	2	0.0	1	2
164	1	0.0	1	1
172	1	0.0	1	1
175	1	0.0	1	1
184	1	0.0	1	1
189	1	0.0	1	1
196	1	0.0	1	1
205	1	0.0	1	1
209	1	0.0	1	1
237	1	0.0	1	1
274	1	0.0	1	0 1
290	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/DR1039-SAH_2.fastq.gz
=============================================
82309 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1039-SAH_1_trimmed.fq.gz and DR1039-SAH_2_trimmed.fq.gz
file_1: DR1039-SAH_1_trimmed.fq.gz, file_2: DR1039-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1039-SAH_1_trimmed.fq.gz and DR1039-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1039-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1039-SAH_2_val_2.fq.gz

Total number of sequences analysed: 82309

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4595 (5.58%)


  >>> Now running FastQC on the validated data DR1039-SAH_1_val_1.fq.gz<<<

Started analysis of DR1039-SAH_1_val_1.fq.gz
Approx 5% complete for DR1039-SAH_1_val_1.fq.gz
Approx 10% complete for DR1039-SAH_1_val_1.fq.gz
Approx 15% complete for DR1039-SAH_1_val_1.fq.gz
Approx 20% complete for DR1039-SAH_1_val_1.fq.gz
Approx 25% complete for DR1039-SAH_1_val_1.fq.gz
Approx 30% complete for DR1039-SAH_1_val_1.fq.gz
Approx 35% complete for DR1039-SAH_1_val_1.fq.gz
Approx 40% complete for DR1039-SAH_1_val_1.fq.gz
Approx 45% complete for DR1039-SAH_1_val_1.fq.gz
Approx 50% complete for DR1039-SAH_1_val_1.fq.gz
Approx 55% complete for DR1039-SAH_1_val_1.fq.gz
Approx 60% complete for DR1039-SAH_1_val_1.fq.gz
Approx 65% complete for DR1039-SAH_1_val_1.fq.gz
Approx 70% complete for DR1039-SAH_1_val_1.fq.gz
Approx 75% complete for DR1039-SAH_1_val_1.fq.gz
Approx 80% complete for DR1039-SAH_1_val_1.fq.gz
Approx 85% complete for DR1039-SAH_1_val_1.fq.gz
Approx 90% complete for DR1039-SAH_1_val_1.fq.gz
Approx 95% complete for DR1039-SAH_1_val_1.fq.gz
Analysis complete for DR1039-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1039-SAH_2_val_2.fq.gz<<<

Started analysis of DR1039-SAH_2_val_2.fq.gz
Approx 5% complete for DR1039-SAH_2_val_2.fq.gz
Approx 10% complete for DR1039-SAH_2_val_2.fq.gz
Approx 15% complete for DR1039-SAH_2_val_2.fq.gz
Approx 20% complete for DR1039-SAH_2_val_2.fq.gz
Approx 25% complete for DR1039-SAH_2_val_2.fq.gz
Approx 30% complete for DR1039-SAH_2_val_2.fq.gz
Approx 35% complete for DR1039-SAH_2_val_2.fq.gz
Approx 40% complete for DR1039-SAH_2_val_2.fq.gz
Approx 45% complete for DR1039-SAH_2_val_2.fq.gz
Approx 50% complete for DR1039-SAH_2_val_2.fq.gz
Approx 55% complete for DR1039-SAH_2_val_2.fq.gz
Approx 60% complete for DR1039-SAH_2_val_2.fq.gz
Approx 65% complete for DR1039-SAH_2_val_2.fq.gz
Approx 70% complete for DR1039-SAH_2_val_2.fq.gz
Approx 75% complete for DR1039-SAH_2_val_2.fq.gz
Approx 80% complete for DR1039-SAH_2_val_2.fq.gz
Approx 85% complete for DR1039-SAH_2_val_2.fq.gz
Approx 90% complete for DR1039-SAH_2_val_2.fq.gz
Approx 95% complete for DR1039-SAH_2_val_2.fq.gz
Analysis complete for DR1039-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1039-SAH_1_trimmed.fq.gz and DR1039-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1040-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1040-SAH_1.fastq.gz data/DR1040-SAH_2.fastq.gz -o results/02.trimgalore/DR1040-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1040-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1040-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1040-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	40	CTGTCTCTTATA	85494	0.05
smallRNA	4	TGGAATTCTCGG	85494	0.00
Illumina	0	AGATCGGAAGAGC	85494	0.00
Using Nextera adapter for trimming (count: 40). Second best hit was smallRNA (count: 4)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1040-SAH_trimgalore/DR1040-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1040-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1040-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1040-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1040-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.389 s (4.549 µs/read; 13.19 M reads/minute).

=== Summary ===

Total reads processed:                  85,494
Reads with adapters:                     6,445 (7.5%)
Reads written (passing filters):        85,494 (100.0%)

Total basepairs processed:    25,733,694 bp
Quality-trimmed:                  71,418 bp (0.3%)
Total written (filtered):     25,640,088 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 6445 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 63.0%
  C: 6.1%
  G: 23.6%
  T: 7.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	2331	21373.5	0	2331
2	1084	5343.4	0	1084
3	2475	1335.8	0	2475
4	487	334.0	0	487
5	9	83.5	0	9
6	7	20.9	0	7
7	1	5.2	0	1
11	1	0.0	1	1
21	1	0.0	1	1
26	1	0.0	1	1
27	2	0.0	1	2
63	1	0.0	1	1
78	2	0.0	1	2
81	1	0.0	1	1
82	2	0.0	1	1 1
83	2	0.0	1	1 1
91	1	0.0	1	1
92	1	0.0	1	1
93	1	0.0	1	1
95	1	0.0	1	0 1
98	2	0.0	1	2
102	1	0.0	1	1
103	1	0.0	1	1
112	1	0.0	1	1
113	1	0.0	1	1
122	2	0.0	1	2
132	1	0.0	1	1
144	1	0.0	1	1
148	1	0.0	1	1
159	1	0.0	1	0 1
185	2	0.0	1	1 1
187	1	0.0	1	1
212	1	0.0	1	1
215	1	0.0	1	0 1
219	1	0.0	1	0 1
253	1	0.0	1	1
256	1	0.0	1	1
263	1	0.0	1	1
265	1	0.0	1	0 1
269	1	0.0	1	0 1
273	1	0.0	1	0 1
283	2	0.0	1	2
285	1	0.0	1	1
287	2	0.0	1	2
289	3	0.0	1	2 1
291	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/DR1040-SAH_1.fastq.gz
=============================================
85494 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1040-SAH_trimgalore/DR1040-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1040-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1040-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1040-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1040-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.505 s (5.913 µs/read; 10.15 M reads/minute).

=== Summary ===

Total reads processed:                  85,494
Reads with adapters:                    71,378 (83.5%)
Reads written (passing filters):        85,494 (100.0%)

Total basepairs processed:    25,733,694 bp
Quality-trimmed:                 606,443 bp (2.4%)
Total written (filtered):     25,047,268 bp (97.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 71378 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.5%
  C: 82.4%
  G: 12.1%
  T: 2.0%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	69430	21373.5	0	69430
2	1369	5343.4	0	1369
3	478	1335.8	0	478
4	34	334.0	0	34
5	16	83.5	0	16
6	6	20.9	0	6
23	1	0.0	1	0 1
29	1	0.0	1	0 1
32	1	0.0	1	1
76	1	0.0	1	0 1
81	1	0.0	1	1
82	5	0.0	1	3 2
83	2	0.0	1	2
84	1	0.0	1	1
85	1	0.0	1	1
87	1	0.0	1	1
89	2	0.0	1	2
92	2	0.0	1	2
96	2	0.0	1	2
99	3	0.0	1	3
101	1	0.0	1	1
108	1	0.0	1	1
109	1	0.0	1	1
128	1	0.0	1	1
129	1	0.0	1	1
149	1	0.0	1	0 1
169	1	0.0	1	1
179	1	0.0	1	1
197	2	0.0	1	2
198	1	0.0	1	0 1
202	1	0.0	1	1
207	1	0.0	1	1
208	1	0.0	1	1
235	1	0.0	1	1
251	1	0.0	1	0 1
280	1	0.0	1	1
288	2	0.0	1	2
291	2	0.0	1	1 1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1040-SAH_2.fastq.gz
=============================================
85494 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1040-SAH_1_trimmed.fq.gz and DR1040-SAH_2_trimmed.fq.gz
file_1: DR1040-SAH_1_trimmed.fq.gz, file_2: DR1040-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1040-SAH_1_trimmed.fq.gz and DR1040-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1040-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1040-SAH_2_val_2.fq.gz

Total number of sequences analysed: 85494

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 3382 (3.96%)


  >>> Now running FastQC on the validated data DR1040-SAH_1_val_1.fq.gz<<<

Started analysis of DR1040-SAH_1_val_1.fq.gz
Approx 5% complete for DR1040-SAH_1_val_1.fq.gz
Approx 10% complete for DR1040-SAH_1_val_1.fq.gz
Approx 15% complete for DR1040-SAH_1_val_1.fq.gz
Approx 20% complete for DR1040-SAH_1_val_1.fq.gz
Approx 25% complete for DR1040-SAH_1_val_1.fq.gz
Approx 30% complete for DR1040-SAH_1_val_1.fq.gz
Approx 35% complete for DR1040-SAH_1_val_1.fq.gz
Approx 40% complete for DR1040-SAH_1_val_1.fq.gz
Approx 45% complete for DR1040-SAH_1_val_1.fq.gz
Approx 50% complete for DR1040-SAH_1_val_1.fq.gz
Approx 55% complete for DR1040-SAH_1_val_1.fq.gz
Approx 60% complete for DR1040-SAH_1_val_1.fq.gz
Approx 65% complete for DR1040-SAH_1_val_1.fq.gz
Approx 70% complete for DR1040-SAH_1_val_1.fq.gz
Approx 75% complete for DR1040-SAH_1_val_1.fq.gz
Approx 80% complete for DR1040-SAH_1_val_1.fq.gz
Approx 85% complete for DR1040-SAH_1_val_1.fq.gz
Approx 90% complete for DR1040-SAH_1_val_1.fq.gz
Approx 95% complete for DR1040-SAH_1_val_1.fq.gz
Analysis complete for DR1040-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1040-SAH_2_val_2.fq.gz<<<

Started analysis of DR1040-SAH_2_val_2.fq.gz
Approx 5% complete for DR1040-SAH_2_val_2.fq.gz
Approx 10% complete for DR1040-SAH_2_val_2.fq.gz
Approx 15% complete for DR1040-SAH_2_val_2.fq.gz
Approx 20% complete for DR1040-SAH_2_val_2.fq.gz
Approx 25% complete for DR1040-SAH_2_val_2.fq.gz
Approx 30% complete for DR1040-SAH_2_val_2.fq.gz
Approx 35% complete for DR1040-SAH_2_val_2.fq.gz
Approx 40% complete for DR1040-SAH_2_val_2.fq.gz
Approx 45% complete for DR1040-SAH_2_val_2.fq.gz
Approx 50% complete for DR1040-SAH_2_val_2.fq.gz
Approx 55% complete for DR1040-SAH_2_val_2.fq.gz
Approx 60% complete for DR1040-SAH_2_val_2.fq.gz
Approx 65% complete for DR1040-SAH_2_val_2.fq.gz
Approx 70% complete for DR1040-SAH_2_val_2.fq.gz
Approx 75% complete for DR1040-SAH_2_val_2.fq.gz
Approx 80% complete for DR1040-SAH_2_val_2.fq.gz
Approx 85% complete for DR1040-SAH_2_val_2.fq.gz
Approx 90% complete for DR1040-SAH_2_val_2.fq.gz
Approx 95% complete for DR1040-SAH_2_val_2.fq.gz
Analysis complete for DR1040-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1040-SAH_1_trimmed.fq.gz and DR1040-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1041-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1041-E_1.fastq.gz data/DR1041-E_2.fastq.gz -o results/02.trimgalore/DR1041-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1041-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1041-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1041-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	13	CTGTCTCTTATA	77442	0.02
smallRNA	0	TGGAATTCTCGG	77442	0.00
Illumina	0	AGATCGGAAGAGC	77442	0.00
Using Nextera adapter for trimming (count: 13). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1041-E_trimgalore/DR1041-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1041-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1041-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1041-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1041-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.361 s (4.668 µs/read; 12.85 M reads/minute).

=== Summary ===

Total reads processed:                  77,442
Reads with adapters:                     1,206 (1.6%)
Reads written (passing filters):        77,442 (100.0%)

Total basepairs processed:    23,310,042 bp
Quality-trimmed:                  47,411 bp (0.2%)
Total written (filtered):     23,258,376 bp (99.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1206 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 45.4%
  C: 15.7%
  G: 30.0%
  T: 9.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	614	19360.5	0	614
2	222	4840.1	0	222
3	292	1210.0	0	292
4	43	302.5	0	43
5	9	75.6	0	9
6	12	18.9	0	12
42	2	0.0	1	2
79	1	0.0	1	1
83	1	0.0	1	1
92	1	0.0	1	1
98	1	0.0	1	1
112	1	0.0	1	1
137	1	0.0	1	1
183	1	0.0	1	1
195	1	0.0	1	0 1
204	1	0.0	1	1
221	1	0.0	1	1
253	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1041-E_1.fastq.gz
=============================================
77442 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1041-E_trimgalore/DR1041-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1041-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1041-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1041-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1041-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.413 s (5.327 µs/read; 11.26 M reads/minute).

=== Summary ===

Total reads processed:                  77,442
Reads with adapters:                    63,383 (81.8%)
Reads written (passing filters):        77,442 (100.0%)

Total basepairs processed:    23,310,042 bp
Quality-trimmed:                 602,397 bp (2.6%)
Total written (filtered):     22,640,248 bp (97.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 63383 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.4%
  C: 81.9%
  G: 12.3%
  T: 2.4%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	61638	19360.5	0	61638
2	1263	4840.1	0	1263
3	416	1210.0	0	416
4	23	302.5	0	23
5	18	75.6	0	18
6	3	18.9	0	3
7	2	4.7	0	2
8	1	1.2	0	1
15	1	0.0	1	0 1
31	1	0.0	1	0 1
38	1	0.0	1	1
52	1	0.0	1	0 1
57	1	0.0	1	0 1
82	1	0.0	1	1
85	1	0.0	1	1
86	2	0.0	1	2
88	1	0.0	1	1
93	1	0.0	1	1
100	2	0.0	1	1 1
102	1	0.0	1	1
106	1	0.0	1	1
129	1	0.0	1	1
153	1	0.0	1	1
170	1	0.0	1	0 1
190	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1041-E_2.fastq.gz
=============================================
77442 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1041-E_1_trimmed.fq.gz and DR1041-E_2_trimmed.fq.gz
file_1: DR1041-E_1_trimmed.fq.gz, file_2: DR1041-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1041-E_1_trimmed.fq.gz and DR1041-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1041-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1041-E_2_val_2.fq.gz

Total number of sequences analysed: 77442

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 3497 (4.52%)


  >>> Now running FastQC on the validated data DR1041-E_1_val_1.fq.gz<<<

Started analysis of DR1041-E_1_val_1.fq.gz
Approx 5% complete for DR1041-E_1_val_1.fq.gz
Approx 10% complete for DR1041-E_1_val_1.fq.gz
Approx 15% complete for DR1041-E_1_val_1.fq.gz
Approx 20% complete for DR1041-E_1_val_1.fq.gz
Approx 25% complete for DR1041-E_1_val_1.fq.gz
Approx 30% complete for DR1041-E_1_val_1.fq.gz
Approx 35% complete for DR1041-E_1_val_1.fq.gz
Approx 40% complete for DR1041-E_1_val_1.fq.gz
Approx 45% complete for DR1041-E_1_val_1.fq.gz
Approx 50% complete for DR1041-E_1_val_1.fq.gz
Approx 55% complete for DR1041-E_1_val_1.fq.gz
Approx 60% complete for DR1041-E_1_val_1.fq.gz
Approx 65% complete for DR1041-E_1_val_1.fq.gz
Approx 70% complete for DR1041-E_1_val_1.fq.gz
Approx 75% complete for DR1041-E_1_val_1.fq.gz
Approx 80% complete for DR1041-E_1_val_1.fq.gz
Approx 85% complete for DR1041-E_1_val_1.fq.gz
Approx 90% complete for DR1041-E_1_val_1.fq.gz
Approx 95% complete for DR1041-E_1_val_1.fq.gz
Analysis complete for DR1041-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1041-E_2_val_2.fq.gz<<<

Started analysis of DR1041-E_2_val_2.fq.gz
Approx 5% complete for DR1041-E_2_val_2.fq.gz
Approx 10% complete for DR1041-E_2_val_2.fq.gz
Approx 15% complete for DR1041-E_2_val_2.fq.gz
Approx 20% complete for DR1041-E_2_val_2.fq.gz
Approx 25% complete for DR1041-E_2_val_2.fq.gz
Approx 30% complete for DR1041-E_2_val_2.fq.gz
Approx 35% complete for DR1041-E_2_val_2.fq.gz
Approx 40% complete for DR1041-E_2_val_2.fq.gz
Approx 45% complete for DR1041-E_2_val_2.fq.gz
Approx 50% complete for DR1041-E_2_val_2.fq.gz
Approx 55% complete for DR1041-E_2_val_2.fq.gz
Approx 60% complete for DR1041-E_2_val_2.fq.gz
Approx 65% complete for DR1041-E_2_val_2.fq.gz
Approx 70% complete for DR1041-E_2_val_2.fq.gz
Approx 75% complete for DR1041-E_2_val_2.fq.gz
Approx 80% complete for DR1041-E_2_val_2.fq.gz
Approx 85% complete for DR1041-E_2_val_2.fq.gz
Approx 90% complete for DR1041-E_2_val_2.fq.gz
Approx 95% complete for DR1041-E_2_val_2.fq.gz
Analysis complete for DR1041-E_2_val_2.fq.gz
Deleting both intermediate output files DR1041-E_1_trimmed.fq.gz and DR1041-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1041-H sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1041-H_1.fastq.gz data/DR1041-H_2.fastq.gz -o results/02.trimgalore/DR1041-H_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1041-H_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1041-H_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1041-H_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	12	CTGTCTCTTATA	99380	0.01
Illumina	0	AGATCGGAAGAGC	99380	0.00
smallRNA	0	TGGAATTCTCGG	99380	0.00
Using Nextera adapter for trimming (count: 12). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1041-H_trimgalore/DR1041-H_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1041-H_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1041-H_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1041-H_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1041-H_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.421 s (4.235 µs/read; 14.17 M reads/minute).

=== Summary ===

Total reads processed:                  99,380
Reads with adapters:                     4,743 (4.8%)
Reads written (passing filters):        99,380 (100.0%)

Total basepairs processed:    29,913,380 bp
Quality-trimmed:                  71,428 bp (0.2%)
Total written (filtered):     29,831,594 bp (99.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 4743 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 41.9%
  C: 9.9%
  G: 30.6%
  T: 17.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	2186	24845.0	0	2186
2	1385	6211.2	0	1385
3	1031	1552.8	0	1031
4	111	388.2	0	111
5	10	97.1	0	10
6	8	24.3	0	8
21	1	0.0	1	1
40	1	0.0	1	1
79	2	0.0	1	2
83	2	0.0	1	2
89	1	0.0	1	1
165	1	0.0	1	1
261	1	0.0	1	1
287	1	0.0	1	1
289	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1041-H_1.fastq.gz
=============================================
99380 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1041-H_trimgalore/DR1041-H_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1041-H_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1041-H_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1041-H_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1041-H_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.512 s (5.155 µs/read; 11.64 M reads/minute).

=== Summary ===

Total reads processed:                  99,380
Reads with adapters:                    82,770 (83.3%)
Reads written (passing filters):        99,380 (100.0%)

Total basepairs processed:    29,913,380 bp
Quality-trimmed:                 665,859 bp (2.2%)
Total written (filtered):     29,160,644 bp (97.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 82770 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.2%
  C: 83.3%
  G: 11.5%
  T: 2.0%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	80718	24845.0	0	80718
2	1468	6211.2	0	1468
3	516	1552.8	0	516
4	33	388.2	0	33
5	12	97.1	0	12
6	6	24.3	0	6
7	3	6.1	0	3
9	1	0.4	0	0 1
38	1	0.0	1	1
46	1	0.0	1	0 1
60	1	0.0	1	1
65	1	0.0	1	1
86	1	0.0	1	1
95	1	0.0	1	1
118	1	0.0	1	0 1
128	1	0.0	1	1
133	2	0.0	1	2
143	1	0.0	1	0 1
172	1	0.0	1	0 1
200	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1041-H_2.fastq.gz
=============================================
99380 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1041-H_1_trimmed.fq.gz and DR1041-H_2_trimmed.fq.gz
file_1: DR1041-H_1_trimmed.fq.gz, file_2: DR1041-H_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1041-H_1_trimmed.fq.gz and DR1041-H_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1041-H_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1041-H_2_val_2.fq.gz

Total number of sequences analysed: 99380

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 3530 (3.55%)


  >>> Now running FastQC on the validated data DR1041-H_1_val_1.fq.gz<<<

Started analysis of DR1041-H_1_val_1.fq.gz
Approx 5% complete for DR1041-H_1_val_1.fq.gz
Approx 10% complete for DR1041-H_1_val_1.fq.gz
Approx 15% complete for DR1041-H_1_val_1.fq.gz
Approx 20% complete for DR1041-H_1_val_1.fq.gz
Approx 25% complete for DR1041-H_1_val_1.fq.gz
Approx 30% complete for DR1041-H_1_val_1.fq.gz
Approx 35% complete for DR1041-H_1_val_1.fq.gz
Approx 40% complete for DR1041-H_1_val_1.fq.gz
Approx 45% complete for DR1041-H_1_val_1.fq.gz
Approx 50% complete for DR1041-H_1_val_1.fq.gz
Approx 55% complete for DR1041-H_1_val_1.fq.gz
Approx 60% complete for DR1041-H_1_val_1.fq.gz
Approx 65% complete for DR1041-H_1_val_1.fq.gz
Approx 70% complete for DR1041-H_1_val_1.fq.gz
Approx 75% complete for DR1041-H_1_val_1.fq.gz
Approx 80% complete for DR1041-H_1_val_1.fq.gz
Approx 85% complete for DR1041-H_1_val_1.fq.gz
Approx 90% complete for DR1041-H_1_val_1.fq.gz
Approx 95% complete for DR1041-H_1_val_1.fq.gz
Analysis complete for DR1041-H_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1041-H_2_val_2.fq.gz<<<

Started analysis of DR1041-H_2_val_2.fq.gz
Approx 5% complete for DR1041-H_2_val_2.fq.gz
Approx 10% complete for DR1041-H_2_val_2.fq.gz
Approx 15% complete for DR1041-H_2_val_2.fq.gz
Approx 20% complete for DR1041-H_2_val_2.fq.gz
Approx 25% complete for DR1041-H_2_val_2.fq.gz
Approx 30% complete for DR1041-H_2_val_2.fq.gz
Approx 35% complete for DR1041-H_2_val_2.fq.gz
Approx 40% complete for DR1041-H_2_val_2.fq.gz
Approx 45% complete for DR1041-H_2_val_2.fq.gz
Approx 50% complete for DR1041-H_2_val_2.fq.gz
Approx 55% complete for DR1041-H_2_val_2.fq.gz
Approx 60% complete for DR1041-H_2_val_2.fq.gz
Approx 65% complete for DR1041-H_2_val_2.fq.gz
Approx 70% complete for DR1041-H_2_val_2.fq.gz
Approx 75% complete for DR1041-H_2_val_2.fq.gz
Approx 80% complete for DR1041-H_2_val_2.fq.gz
Approx 85% complete for DR1041-H_2_val_2.fq.gz
Approx 90% complete for DR1041-H_2_val_2.fq.gz
Approx 95% complete for DR1041-H_2_val_2.fq.gz
Analysis complete for DR1041-H_2_val_2.fq.gz
Deleting both intermediate output files DR1041-H_1_trimmed.fq.gz and DR1041-H_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1041-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1041-SAH_1.fastq.gz data/DR1041-SAH_2.fastq.gz -o results/02.trimgalore/DR1041-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1041-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1041-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1041-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	68	CTGTCTCTTATA	75882	0.09
Illumina	0	AGATCGGAAGAGC	75882	0.00
smallRNA	0	TGGAATTCTCGG	75882	0.00
Using Nextera adapter for trimming (count: 68). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1041-SAH_trimgalore/DR1041-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1041-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1041-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1041-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1041-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.368 s (4.854 µs/read; 12.36 M reads/minute).

=== Summary ===

Total reads processed:                  75,882
Reads with adapters:                     4,516 (6.0%)
Reads written (passing filters):        75,882 (100.0%)

Total basepairs processed:    22,840,482 bp
Quality-trimmed:                  75,822 bp (0.3%)
Total written (filtered):     22,743,645 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 4516 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 36.4%
  C: 11.1%
  G: 33.5%
  T: 18.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	2132	18970.5	0	2132
2	1247	4742.6	0	1247
3	972	1185.7	0	972
4	79	296.4	0	79
5	7	74.1	0	7
6	4	18.5	0	4
13	1	0.0	1	1
29	1	0.0	1	1
67	1	0.0	1	0 1
77	1	0.0	1	1
78	1	0.0	1	1
79	2	0.0	1	2
80	3	0.0	1	3
81	1	0.0	1	1
82	2	0.0	1	2
83	3	0.0	1	2 1
84	1	0.0	1	1
85	1	0.0	1	1
86	1	0.0	1	1
90	1	0.0	1	1
92	1	0.0	1	1
93	1	0.0	1	1
114	1	0.0	1	1
115	1	0.0	1	1
116	1	0.0	1	1
121	1	0.0	1	1
123	1	0.0	1	1
128	1	0.0	1	1
129	1	0.0	1	0 1
132	1	0.0	1	1
135	1	0.0	1	1
136	1	0.0	1	1
138	1	0.0	1	1
141	1	0.0	1	0 1
150	1	0.0	1	1
161	1	0.0	1	1
167	1	0.0	1	1
168	1	0.0	1	1
175	1	0.0	1	1
183	1	0.0	1	1
192	1	0.0	1	1
202	1	0.0	1	1
205	2	0.0	1	1 1
206	1	0.0	1	1
210	3	0.0	1	3
214	1	0.0	1	1
224	1	0.0	1	1
227	1	0.0	1	0 1
228	1	0.0	1	1
231	1	0.0	1	1
238	1	0.0	1	1
244	1	0.0	1	1
252	1	0.0	1	1
253	1	0.0	1	1
263	1	0.0	1	1
272	1	0.0	1	0 1
278	1	0.0	1	1
282	2	0.0	1	2
283	1	0.0	1	1
285	2	0.0	1	2
287	1	0.0	1	1
288	2	0.0	1	2
290	2	0.0	1	2
291	4	0.0	1	4
292	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1041-SAH_1.fastq.gz
=============================================
75882 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1041-SAH_trimgalore/DR1041-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1041-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1041-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1041-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1041-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.421 s (5.542 µs/read; 10.83 M reads/minute).

=== Summary ===

Total reads processed:                  75,882
Reads with adapters:                    63,213 (83.3%)
Reads written (passing filters):        75,882 (100.0%)

Total basepairs processed:    22,840,482 bp
Quality-trimmed:                 611,848 bp (2.7%)
Total written (filtered):     22,152,573 bp (97.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 63213 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.6%
  C: 81.9%
  G: 12.2%
  T: 2.3%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	61252	18970.5	0	61252
2	1381	4742.6	0	1381
3	447	1185.7	0	447
4	38	296.4	0	38
5	15	74.1	0	15
6	3	18.5	0	3
7	3	4.6	0	3
12	1	0.0	1	1
14	1	0.0	1	0 1
39	1	0.0	1	1
44	1	0.0	1	1
46	1	0.0	1	1
59	1	0.0	1	1
61	2	0.0	1	2
82	1	0.0	1	1
83	2	0.0	1	2
84	4	0.0	1	4
86	2	0.0	1	2
87	1	0.0	1	1
88	2	0.0	1	2
89	3	0.0	1	2 1
92	1	0.0	1	1
96	2	0.0	1	2
98	1	0.0	1	1
100	2	0.0	1	2
101	1	0.0	1	1
102	2	0.0	1	2
104	1	0.0	1	1
105	1	0.0	1	1
106	1	0.0	1	1
107	1	0.0	1	1
124	1	0.0	1	1
126	1	0.0	1	1
135	1	0.0	1	1
136	1	0.0	1	1
137	1	0.0	1	1
138	1	0.0	1	1
147	1	0.0	1	1
152	1	0.0	1	1
156	1	0.0	1	1
168	1	0.0	1	1
169	1	0.0	1	1
172	1	0.0	1	1
173	1	0.0	1	1
174	2	0.0	1	2
175	1	0.0	1	1
180	1	0.0	1	1
181	1	0.0	1	1
184	1	0.0	1	0 1
185	2	0.0	1	2
190	1	0.0	1	1
193	1	0.0	1	0 1
195	1	0.0	1	1
196	1	0.0	1	1
197	1	0.0	1	1
198	1	0.0	1	1
205	2	0.0	1	2
239	1	0.0	1	0 1
287	1	0.0	1	1
289	1	0.0	1	1
290	2	0.0	1	2
291	4	0.0	1	4


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1041-SAH_2.fastq.gz
=============================================
75882 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1041-SAH_1_trimmed.fq.gz and DR1041-SAH_2_trimmed.fq.gz
file_1: DR1041-SAH_1_trimmed.fq.gz, file_2: DR1041-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1041-SAH_1_trimmed.fq.gz and DR1041-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1041-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1041-SAH_2_val_2.fq.gz

Total number of sequences analysed: 75882

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 3526 (4.65%)


  >>> Now running FastQC on the validated data DR1041-SAH_1_val_1.fq.gz<<<

Started analysis of DR1041-SAH_1_val_1.fq.gz
Approx 5% complete for DR1041-SAH_1_val_1.fq.gz
Approx 10% complete for DR1041-SAH_1_val_1.fq.gz
Approx 15% complete for DR1041-SAH_1_val_1.fq.gz
Approx 20% complete for DR1041-SAH_1_val_1.fq.gz
Approx 25% complete for DR1041-SAH_1_val_1.fq.gz
Approx 30% complete for DR1041-SAH_1_val_1.fq.gz
Approx 35% complete for DR1041-SAH_1_val_1.fq.gz
Approx 40% complete for DR1041-SAH_1_val_1.fq.gz
Approx 45% complete for DR1041-SAH_1_val_1.fq.gz
Approx 50% complete for DR1041-SAH_1_val_1.fq.gz
Approx 55% complete for DR1041-SAH_1_val_1.fq.gz
Approx 60% complete for DR1041-SAH_1_val_1.fq.gz
Approx 65% complete for DR1041-SAH_1_val_1.fq.gz
Approx 70% complete for DR1041-SAH_1_val_1.fq.gz
Approx 75% complete for DR1041-SAH_1_val_1.fq.gz
Approx 80% complete for DR1041-SAH_1_val_1.fq.gz
Approx 85% complete for DR1041-SAH_1_val_1.fq.gz
Approx 90% complete for DR1041-SAH_1_val_1.fq.gz
Approx 95% complete for DR1041-SAH_1_val_1.fq.gz
Analysis complete for DR1041-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1041-SAH_2_val_2.fq.gz<<<

Started analysis of DR1041-SAH_2_val_2.fq.gz
Approx 5% complete for DR1041-SAH_2_val_2.fq.gz
Approx 10% complete for DR1041-SAH_2_val_2.fq.gz
Approx 15% complete for DR1041-SAH_2_val_2.fq.gz
Approx 20% complete for DR1041-SAH_2_val_2.fq.gz
Approx 25% complete for DR1041-SAH_2_val_2.fq.gz
Approx 30% complete for DR1041-SAH_2_val_2.fq.gz
Approx 35% complete for DR1041-SAH_2_val_2.fq.gz
Approx 40% complete for DR1041-SAH_2_val_2.fq.gz
Approx 45% complete for DR1041-SAH_2_val_2.fq.gz
Approx 50% complete for DR1041-SAH_2_val_2.fq.gz
Approx 55% complete for DR1041-SAH_2_val_2.fq.gz
Approx 60% complete for DR1041-SAH_2_val_2.fq.gz
Approx 65% complete for DR1041-SAH_2_val_2.fq.gz
Approx 70% complete for DR1041-SAH_2_val_2.fq.gz
Approx 75% complete for DR1041-SAH_2_val_2.fq.gz
Approx 80% complete for DR1041-SAH_2_val_2.fq.gz
Approx 85% complete for DR1041-SAH_2_val_2.fq.gz
Approx 90% complete for DR1041-SAH_2_val_2.fq.gz
Approx 95% complete for DR1041-SAH_2_val_2.fq.gz
Analysis complete for DR1041-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1041-SAH_1_trimmed.fq.gz and DR1041-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1042-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1042-E_1.fastq.gz data/DR1042-E_2.fastq.gz -o results/02.trimgalore/DR1042-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1042-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1042-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1042-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	164	CTGTCTCTTATA	92174	0.18
Illumina	0	AGATCGGAAGAGC	92174	0.00
smallRNA	0	TGGAATTCTCGG	92174	0.00
Using Nextera adapter for trimming (count: 164). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1042-E_trimgalore/DR1042-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1042-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1042-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1042-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1042-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.382 s (4.144 µs/read; 14.48 M reads/minute).

=== Summary ===

Total reads processed:                  92,174
Reads with adapters:                     3,604 (3.9%)
Reads written (passing filters):        92,174 (100.0%)

Total basepairs processed:    27,744,374 bp
Quality-trimmed:                  77,121 bp (0.3%)
Total written (filtered):     27,633,381 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 3604 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 51.5%
  C: 12.1%
  G: 30.3%
  T: 6.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	1856	23043.5	0	1856
2	641	5760.9	0	641
3	749	1440.2	0	749
4	164	360.1	0	164
5	4	90.0	0	4
6	2	22.5	0	2
8	1	1.4	0	1
12	3	0.0	1	3
13	3	0.0	1	2 1
14	6	0.0	1	3 3
15	2	0.0	1	2
25	1	0.0	1	1
27	2	0.0	1	2
34	1	0.0	1	1
35	1	0.0	1	1
36	1	0.0	1	1
41	1	0.0	1	1
42	4	0.0	1	4
43	3	0.0	1	2 1
60	1	0.0	1	1
75	1	0.0	1	1
78	2	0.0	1	2
79	8	0.0	1	7 1
80	6	0.0	1	5 1
81	4	0.0	1	4
82	5	0.0	1	3 2
83	4	0.0	1	2 2
86	2	0.0	1	2
87	2	0.0	1	2
89	3	0.0	1	2 1
90	6	0.0	1	6
92	2	0.0	1	1 1
93	2	0.0	1	2
95	1	0.0	1	0 1
96	1	0.0	1	1
98	2	0.0	1	1 1
99	1	0.0	1	1
100	1	0.0	1	1
103	1	0.0	1	1
105	1	0.0	1	1
106	1	0.0	1	1
107	1	0.0	1	1
112	1	0.0	1	1
113	2	0.0	1	2
114	1	0.0	1	1
119	1	0.0	1	1
120	1	0.0	1	0 1
123	1	0.0	1	1
126	4	0.0	1	4
130	2	0.0	1	2
132	1	0.0	1	1
139	1	0.0	1	1
143	2	0.0	1	2
144	2	0.0	1	2
145	2	0.0	1	2
147	2	0.0	1	2
149	1	0.0	1	1
152	1	0.0	1	1
158	1	0.0	1	1
165	2	0.0	1	2
167	1	0.0	1	1
168	1	0.0	1	1
169	1	0.0	1	0 1
173	2	0.0	1	2
183	2	0.0	1	2
185	1	0.0	1	1
186	1	0.0	1	1
189	1	0.0	1	1
192	1	0.0	1	1
194	2	0.0	1	2
198	1	0.0	1	1
202	1	0.0	1	1
205	1	0.0	1	1
208	1	0.0	1	1
209	1	0.0	1	1
221	1	0.0	1	1
222	1	0.0	1	1
223	1	0.0	1	1
225	1	0.0	1	1
227	1	0.0	1	1
228	1	0.0	1	1
235	1	0.0	1	1
236	1	0.0	1	1
240	1	0.0	1	1
252	1	0.0	1	1
256	1	0.0	1	1
257	1	0.0	1	1
258	2	0.0	1	2
259	1	0.0	1	1
265	1	0.0	1	1
269	1	0.0	1	0 1
270	1	0.0	1	1
272	2	0.0	1	1 1
273	2	0.0	1	1 1
274	1	0.0	1	1
275	2	0.0	1	1 1
276	1	0.0	1	1
278	2	0.0	1	2
280	1	0.0	1	1
284	2	0.0	1	2
285	1	0.0	1	1
286	5	0.0	1	5
287	3	0.0	1	3
288	8	0.0	1	7 1
289	1	0.0	1	1
290	3	0.0	1	2 1
291	3	0.0	1	3

RUN STATISTICS FOR INPUT FILE: data/DR1042-E_1.fastq.gz
=============================================
92174 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1042-E_trimgalore/DR1042-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1042-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1042-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1042-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1042-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.481 s (5.215 µs/read; 11.51 M reads/minute).

=== Summary ===

Total reads processed:                  92,174
Reads with adapters:                    76,613 (83.1%)
Reads written (passing filters):        92,174 (100.0%)

Total basepairs processed:    27,744,374 bp
Quality-trimmed:                 653,042 bp (2.4%)
Total written (filtered):     26,990,525 bp (97.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 76613 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 2.9%
  C: 83.6%
  G: 11.6%
  T: 1.9%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	74745	23043.5	0	74745
2	1244	5760.9	0	1244
3	405	1440.2	0	405
4	18	360.1	0	18
5	16	90.0	0	16
6	5	22.5	0	5
7	2	5.6	0	2
10	1	0.1	1	1
11	4	0.0	1	1 3
12	2	0.0	1	1 1
13	3	0.0	1	2 1
15	2	0.0	1	0 2
16	1	0.0	1	0 1
18	1	0.0	1	1
19	1	0.0	1	1
26	1	0.0	1	0 1
27	2	0.0	1	2
29	1	0.0	1	1
32	1	0.0	1	1
33	2	0.0	1	1 1
34	1	0.0	1	0 1
38	1	0.0	1	1
39	2	0.0	1	2
40	1	0.0	1	1
41	1	0.0	1	1
42	1	0.0	1	1
49	1	0.0	1	1
51	1	0.0	1	1
59	1	0.0	1	1
63	1	0.0	1	1
66	1	0.0	1	1
75	1	0.0	1	1
78	1	0.0	1	1
79	1	0.0	1	1
80	2	0.0	1	2
81	3	0.0	1	2 1
82	12	0.0	1	10 2
83	8	0.0	1	8
84	1	0.0	1	0 1
85	3	0.0	1	2 1
86	2	0.0	1	1 1
87	3	0.0	1	3
88	1	0.0	1	1
90	1	0.0	1	1
91	2	0.0	1	0 2
92	1	0.0	1	0 1
93	1	0.0	1	1
94	1	0.0	1	1
95	2	0.0	1	2
96	2	0.0	1	2
97	2	0.0	1	2
98	1	0.0	1	1
99	1	0.0	1	1
101	1	0.0	1	1
105	1	0.0	1	1
109	2	0.0	1	2
110	1	0.0	1	1
112	2	0.0	1	2
113	1	0.0	1	1
114	1	0.0	1	1
115	1	0.0	1	1
116	3	0.0	1	2 1
117	2	0.0	1	2
118	1	0.0	1	1
122	1	0.0	1	1
127	1	0.0	1	1
128	1	0.0	1	1
129	2	0.0	1	2
132	1	0.0	1	1
133	2	0.0	1	2
135	1	0.0	1	1
136	1	0.0	1	1
137	1	0.0	1	1
138	1	0.0	1	1
142	1	0.0	1	1
143	1	0.0	1	1
145	1	0.0	1	1
147	1	0.0	1	1
148	1	0.0	1	1
155	1	0.0	1	1
160	1	0.0	1	1
163	1	0.0	1	1
165	2	0.0	1	2
166	1	0.0	1	1
173	2	0.0	1	2
175	3	0.0	1	3
180	1	0.0	1	1
184	1	0.0	1	1
185	1	0.0	1	1
187	2	0.0	1	2
189	2	0.0	1	2
190	1	0.0	1	1
191	1	0.0	1	0 1
192	3	0.0	1	3
194	1	0.0	1	1
196	1	0.0	1	0 1
197	2	0.0	1	1 1
199	1	0.0	1	1
201	2	0.0	1	2
204	2	0.0	1	2
205	1	0.0	1	1
208	3	0.0	1	3
210	1	0.0	1	1
212	1	0.0	1	1
215	1	0.0	1	1
219	2	0.0	1	2
224	1	0.0	1	1
227	1	0.0	1	1
228	1	0.0	1	1
234	1	0.0	1	0 1
236	1	0.0	1	1
254	1	0.0	1	1
257	1	0.0	1	1
279	1	0.0	1	1
287	3	0.0	1	3
288	3	0.0	1	1 2
289	1	0.0	1	1
290	2	0.0	1	2
291	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1042-E_2.fastq.gz
=============================================
92174 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1042-E_1_trimmed.fq.gz and DR1042-E_2_trimmed.fq.gz
file_1: DR1042-E_1_trimmed.fq.gz, file_2: DR1042-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1042-E_1_trimmed.fq.gz and DR1042-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1042-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1042-E_2_val_2.fq.gz

Total number of sequences analysed: 92174

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 3881 (4.21%)


  >>> Now running FastQC on the validated data DR1042-E_1_val_1.fq.gz<<<

Started analysis of DR1042-E_1_val_1.fq.gz
Approx 5% complete for DR1042-E_1_val_1.fq.gz
Approx 10% complete for DR1042-E_1_val_1.fq.gz
Approx 15% complete for DR1042-E_1_val_1.fq.gz
Approx 20% complete for DR1042-E_1_val_1.fq.gz
Approx 25% complete for DR1042-E_1_val_1.fq.gz
Approx 30% complete for DR1042-E_1_val_1.fq.gz
Approx 35% complete for DR1042-E_1_val_1.fq.gz
Approx 40% complete for DR1042-E_1_val_1.fq.gz
Approx 45% complete for DR1042-E_1_val_1.fq.gz
Approx 50% complete for DR1042-E_1_val_1.fq.gz
Approx 55% complete for DR1042-E_1_val_1.fq.gz
Approx 60% complete for DR1042-E_1_val_1.fq.gz
Approx 65% complete for DR1042-E_1_val_1.fq.gz
Approx 70% complete for DR1042-E_1_val_1.fq.gz
Approx 75% complete for DR1042-E_1_val_1.fq.gz
Approx 80% complete for DR1042-E_1_val_1.fq.gz
Approx 85% complete for DR1042-E_1_val_1.fq.gz
Approx 90% complete for DR1042-E_1_val_1.fq.gz
Approx 95% complete for DR1042-E_1_val_1.fq.gz
Analysis complete for DR1042-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1042-E_2_val_2.fq.gz<<<

Started analysis of DR1042-E_2_val_2.fq.gz
Approx 5% complete for DR1042-E_2_val_2.fq.gz
Approx 10% complete for DR1042-E_2_val_2.fq.gz
Approx 15% complete for DR1042-E_2_val_2.fq.gz
Approx 20% complete for DR1042-E_2_val_2.fq.gz
Approx 25% complete for DR1042-E_2_val_2.fq.gz
Approx 30% complete for DR1042-E_2_val_2.fq.gz
Approx 35% complete for DR1042-E_2_val_2.fq.gz
Approx 40% complete for DR1042-E_2_val_2.fq.gz
Approx 45% complete for DR1042-E_2_val_2.fq.gz
Approx 50% complete for DR1042-E_2_val_2.fq.gz
Approx 55% complete for DR1042-E_2_val_2.fq.gz
Approx 60% complete for DR1042-E_2_val_2.fq.gz
Approx 65% complete for DR1042-E_2_val_2.fq.gz
Approx 70% complete for DR1042-E_2_val_2.fq.gz
Approx 75% complete for DR1042-E_2_val_2.fq.gz
Approx 80% complete for DR1042-E_2_val_2.fq.gz
Approx 85% complete for DR1042-E_2_val_2.fq.gz
Approx 90% complete for DR1042-E_2_val_2.fq.gz
Approx 95% complete for DR1042-E_2_val_2.fq.gz
Analysis complete for DR1042-E_2_val_2.fq.gz
Deleting both intermediate output files DR1042-E_1_trimmed.fq.gz and DR1042-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1042-H sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1042-H_1.fastq.gz data/DR1042-H_2.fastq.gz -o results/02.trimgalore/DR1042-H_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1042-H_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1042-H_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1042-H_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	53	CTGTCTCTTATA	129498	0.04
smallRNA	1	TGGAATTCTCGG	129498	0.00
Illumina	0	AGATCGGAAGAGC	129498	0.00
Using Nextera adapter for trimming (count: 53). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1042-H_trimgalore/DR1042-H_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1042-H_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1042-H_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1042-H_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1042-H_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.539 s (4.163 µs/read; 14.41 M reads/minute).

=== Summary ===

Total reads processed:                 129,498
Reads with adapters:                     7,529 (5.8%)
Reads written (passing filters):       129,498 (100.0%)

Total basepairs processed:    38,978,898 bp
Quality-trimmed:                 122,051 bp (0.3%)
Total written (filtered):     38,834,303 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 7529 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 53.8%
  C: 12.6%
  G: 17.6%
  T: 16.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3935	32374.5	0	3935
2	1783	8093.6	0	1783
3	1629	2023.4	0	1629
4	89	505.9	0	89
5	12	126.5	0	12
6	14	31.6	0	14
7	3	7.9	0	3
8	1	2.0	0	1
26	1	0.0	1	1
32	1	0.0	1	0 1
36	3	0.0	1	1 2
43	1	0.0	1	1
73	3	0.0	1	2 1
78	5	0.0	1	4 1
80	2	0.0	1	2
81	1	0.0	1	1
84	1	0.0	1	1
86	1	0.0	1	0 1
87	1	0.0	1	1
91	1	0.0	1	0 1
92	1	0.0	1	1
93	1	0.0	1	1
99	1	0.0	1	1
101	1	0.0	1	1
107	1	0.0	1	1
108	1	0.0	1	1
119	1	0.0	1	1
126	1	0.0	1	1
127	1	0.0	1	1
131	1	0.0	1	1
132	1	0.0	1	1
145	1	0.0	1	1
152	1	0.0	1	1
155	1	0.0	1	1
161	2	0.0	1	2
165	1	0.0	1	1
170	1	0.0	1	1
172	1	0.0	1	1
178	1	0.0	1	1
179	1	0.0	1	1
180	1	0.0	1	1
181	1	0.0	1	1
185	1	0.0	1	1
190	1	0.0	1	1
192	1	0.0	1	1
225	1	0.0	1	0 1
251	1	0.0	1	1
258	1	0.0	1	1
261	1	0.0	1	1
270	1	0.0	1	1
284	1	0.0	1	1
285	1	0.0	1	1
286	4	0.0	1	2 2
287	2	0.0	1	2
288	2	0.0	1	2
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1042-H_1.fastq.gz
=============================================
129498 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1042-H_trimgalore/DR1042-H_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1042-H_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1042-H_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1042-H_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1042-H_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.588 s (4.540 µs/read; 13.22 M reads/minute).

=== Summary ===

Total reads processed:                 129,498
Reads with adapters:                   109,174 (84.3%)
Reads written (passing filters):       129,498 (100.0%)

Total basepairs processed:    38,978,898 bp
Quality-trimmed:                 862,523 bp (2.2%)
Total written (filtered):     37,995,862 bp (97.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 109174 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.2%
  C: 82.9%
  G: 12.0%
  T: 1.9%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	106419	32374.5	0	106419
2	1935	8093.6	0	1935
3	678	2023.4	0	678
4	42	505.9	0	42
5	17	126.5	0	17
6	16	31.6	0	16
7	3	7.9	0	3
9	1	0.5	0	0 1
10	2	0.1	1	0 2
25	1	0.0	1	1
32	1	0.0	1	1
36	1	0.0	1	0 1
37	1	0.0	1	1
38	1	0.0	1	1
40	1	0.0	1	1
47	1	0.0	1	1
59	2	0.0	1	2
77	1	0.0	1	0 1
81	1	0.0	1	1
82	5	0.0	1	4 1
83	4	0.0	1	4
84	3	0.0	1	3
85	1	0.0	1	1
86	1	0.0	1	0 1
87	1	0.0	1	1
88	1	0.0	1	1
90	1	0.0	1	1
92	1	0.0	1	1
93	1	0.0	1	1
96	1	0.0	1	1
97	1	0.0	1	1
98	1	0.0	1	1
100	1	0.0	1	1
104	1	0.0	1	1
109	1	0.0	1	1
117	1	0.0	1	1
120	1	0.0	1	1
121	1	0.0	1	1
123	1	0.0	1	1
126	1	0.0	1	1
146	1	0.0	1	1
156	1	0.0	1	1
161	1	0.0	1	0 1
189	1	0.0	1	1
193	2	0.0	1	2
198	1	0.0	1	1
200	1	0.0	1	1
204	1	0.0	1	1
210	1	0.0	1	0 1
216	1	0.0	1	1
220	1	0.0	1	1
223	2	0.0	1	2
264	1	0.0	1	1
286	1	0.0	1	1
287	2	0.0	1	1 1
288	1	0.0	1	1
290	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1042-H_2.fastq.gz
=============================================
129498 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1042-H_1_trimmed.fq.gz and DR1042-H_2_trimmed.fq.gz
file_1: DR1042-H_1_trimmed.fq.gz, file_2: DR1042-H_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1042-H_1_trimmed.fq.gz and DR1042-H_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1042-H_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1042-H_2_val_2.fq.gz

Total number of sequences analysed: 129498

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4978 (3.84%)


  >>> Now running FastQC on the validated data DR1042-H_1_val_1.fq.gz<<<

Started analysis of DR1042-H_1_val_1.fq.gz
Approx 5% complete for DR1042-H_1_val_1.fq.gz
Approx 10% complete for DR1042-H_1_val_1.fq.gz
Approx 15% complete for DR1042-H_1_val_1.fq.gz
Approx 20% complete for DR1042-H_1_val_1.fq.gz
Approx 25% complete for DR1042-H_1_val_1.fq.gz
Approx 30% complete for DR1042-H_1_val_1.fq.gz
Approx 35% complete for DR1042-H_1_val_1.fq.gz
Approx 40% complete for DR1042-H_1_val_1.fq.gz
Approx 45% complete for DR1042-H_1_val_1.fq.gz
Approx 50% complete for DR1042-H_1_val_1.fq.gz
Approx 55% complete for DR1042-H_1_val_1.fq.gz
Approx 60% complete for DR1042-H_1_val_1.fq.gz
Approx 65% complete for DR1042-H_1_val_1.fq.gz
Approx 70% complete for DR1042-H_1_val_1.fq.gz
Approx 75% complete for DR1042-H_1_val_1.fq.gz
Approx 80% complete for DR1042-H_1_val_1.fq.gz
Approx 85% complete for DR1042-H_1_val_1.fq.gz
Approx 90% complete for DR1042-H_1_val_1.fq.gz
Approx 95% complete for DR1042-H_1_val_1.fq.gz
Analysis complete for DR1042-H_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1042-H_2_val_2.fq.gz<<<

Started analysis of DR1042-H_2_val_2.fq.gz
Approx 5% complete for DR1042-H_2_val_2.fq.gz
Approx 10% complete for DR1042-H_2_val_2.fq.gz
Approx 15% complete for DR1042-H_2_val_2.fq.gz
Approx 20% complete for DR1042-H_2_val_2.fq.gz
Approx 25% complete for DR1042-H_2_val_2.fq.gz
Approx 30% complete for DR1042-H_2_val_2.fq.gz
Approx 35% complete for DR1042-H_2_val_2.fq.gz
Approx 40% complete for DR1042-H_2_val_2.fq.gz
Approx 45% complete for DR1042-H_2_val_2.fq.gz
Approx 50% complete for DR1042-H_2_val_2.fq.gz
Approx 55% complete for DR1042-H_2_val_2.fq.gz
Approx 60% complete for DR1042-H_2_val_2.fq.gz
Approx 65% complete for DR1042-H_2_val_2.fq.gz
Approx 70% complete for DR1042-H_2_val_2.fq.gz
Approx 75% complete for DR1042-H_2_val_2.fq.gz
Approx 80% complete for DR1042-H_2_val_2.fq.gz
Approx 85% complete for DR1042-H_2_val_2.fq.gz
Approx 90% complete for DR1042-H_2_val_2.fq.gz
Approx 95% complete for DR1042-H_2_val_2.fq.gz
Analysis complete for DR1042-H_2_val_2.fq.gz
Deleting both intermediate output files DR1042-H_1_trimmed.fq.gz and DR1042-H_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1042-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1042-SAH_1.fastq.gz data/DR1042-SAH_2.fastq.gz -o results/02.trimgalore/DR1042-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1042-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1042-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1042-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	95	CTGTCTCTTATA	109622	0.09
smallRNA	2	TGGAATTCTCGG	109622	0.00
Illumina	0	AGATCGGAAGAGC	109622	0.00
Using Nextera adapter for trimming (count: 95). Second best hit was smallRNA (count: 2)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1042-SAH_trimgalore/DR1042-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1042-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1042-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1042-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1042-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.491 s (4.482 µs/read; 13.39 M reads/minute).

=== Summary ===

Total reads processed:                 109,622
Reads with adapters:                     7,018 (6.4%)
Reads written (passing filters):       109,622 (100.0%)

Total basepairs processed:    32,996,222 bp
Quality-trimmed:                 113,460 bp (0.3%)
Total written (filtered):     32,851,924 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 7018 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 42.7%
  C: 10.4%
  G: 29.0%
  T: 17.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3738	27405.5	0	3738
2	1517	6851.4	0	1517
3	1443	1712.8	0	1443
4	194	428.2	0	194
5	11	107.1	0	11
6	2	26.8	0	2
7	1	6.7	0	1
12	1	0.0	1	1
14	1	0.0	1	1
15	1	0.0	1	1
73	2	0.0	1	2
78	4	0.0	1	4
79	1	0.0	1	0 1
80	5	0.0	1	5
81	1	0.0	1	1
82	4	0.0	1	4
83	1	0.0	1	1
84	1	0.0	1	1
85	1	0.0	1	1
87	2	0.0	1	2
89	1	0.0	1	1
91	2	0.0	1	2
92	1	0.0	1	1
94	1	0.0	1	1
95	3	0.0	1	3
99	1	0.0	1	1
100	1	0.0	1	1
103	2	0.0	1	0 2
106	1	0.0	1	1
107	1	0.0	1	1
108	1	0.0	1	1
112	1	0.0	1	1
114	1	0.0	1	1
116	1	0.0	1	1
119	1	0.0	1	0 1
120	2	0.0	1	2
122	1	0.0	1	1
126	1	0.0	1	1
134	1	0.0	1	1
135	1	0.0	1	1
141	1	0.0	1	0 1
146	2	0.0	1	2
152	1	0.0	1	0 1
158	1	0.0	1	1
164	1	0.0	1	1
165	1	0.0	1	1
168	1	0.0	1	1
170	1	0.0	1	1
172	1	0.0	1	1
173	3	0.0	1	3
176	1	0.0	1	0 1
185	3	0.0	1	1 2
187	1	0.0	1	1
193	1	0.0	1	1
197	1	0.0	1	1
203	1	0.0	1	1
208	1	0.0	1	1
214	1	0.0	1	1
217	1	0.0	1	1
222	1	0.0	1	0 1
228	5	0.0	1	3 2
231	2	0.0	1	2
234	1	0.0	1	1
238	1	0.0	1	1
245	1	0.0	1	1
254	1	0.0	1	0 1
257	1	0.0	1	1
262	1	0.0	1	0 1
269	1	0.0	1	1
271	1	0.0	1	1
273	1	0.0	1	1
274	1	0.0	1	0 1
278	1	0.0	1	1
280	1	0.0	1	1
282	1	0.0	1	1
283	1	0.0	1	1
284	2	0.0	1	2
285	1	0.0	1	1
286	1	0.0	1	1
287	2	0.0	1	2
288	2	0.0	1	1 1
289	1	0.0	1	1
290	2	0.0	1	2
291	5	0.0	1	4 1

RUN STATISTICS FOR INPUT FILE: data/DR1042-SAH_1.fastq.gz
=============================================
109622 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1042-SAH_trimgalore/DR1042-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1042-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1042-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1042-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1042-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.563 s (5.132 µs/read; 11.69 M reads/minute).

=== Summary ===

Total reads processed:                 109,622
Reads with adapters:                    91,999 (83.9%)
Reads written (passing filters):       109,622 (100.0%)

Total basepairs processed:    32,996,222 bp
Quality-trimmed:                 809,819 bp (2.5%)
Total written (filtered):     32,076,270 bp (97.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 91999 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.3%
  C: 82.2%
  G: 12.4%
  T: 2.1%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	89376	27405.5	0	89376
2	1831	6851.4	0	1831
3	596	1712.8	0	596
4	49	428.2	0	49
5	19	107.1	0	19
6	12	26.8	0	12
7	1	6.7	0	1
12	1	0.0	1	0 1
13	1	0.0	1	1
17	1	0.0	1	0 1
34	1	0.0	1	1
35	1	0.0	1	0 1
36	1	0.0	1	1
40	1	0.0	1	0 1
46	1	0.0	1	0 1
47	1	0.0	1	1
49	1	0.0	1	1
59	1	0.0	1	1
82	3	0.0	1	3
83	3	0.0	1	3
84	5	0.0	1	5
85	4	0.0	1	4
86	3	0.0	1	3
87	5	0.0	1	5
88	3	0.0	1	3
89	3	0.0	1	2 1
90	3	0.0	1	3
91	3	0.0	1	3
92	1	0.0	1	1
93	2	0.0	1	1 1
94	1	0.0	1	1
95	1	0.0	1	1
96	2	0.0	1	2
97	1	0.0	1	1
98	1	0.0	1	1
101	1	0.0	1	1
103	1	0.0	1	1
105	1	0.0	1	1
106	1	0.0	1	1
107	1	0.0	1	1
108	3	0.0	1	3
111	1	0.0	1	1
113	1	0.0	1	0 1
115	1	0.0	1	1
117	1	0.0	1	1
119	1	0.0	1	1
122	1	0.0	1	1
124	1	0.0	1	1
125	1	0.0	1	1
126	1	0.0	1	1
130	1	0.0	1	0 1
135	1	0.0	1	1
145	1	0.0	1	1
148	2	0.0	1	2
153	1	0.0	1	1
158	1	0.0	1	1
163	1	0.0	1	1
166	1	0.0	1	1
168	1	0.0	1	1
178	1	0.0	1	1
180	1	0.0	1	1
182	1	0.0	1	1
183	2	0.0	1	2
185	1	0.0	1	0 1
186	1	0.0	1	1
187	1	0.0	1	1
188	2	0.0	1	2
191	1	0.0	1	1
192	1	0.0	1	1
196	1	0.0	1	1
197	1	0.0	1	1
204	2	0.0	1	2
205	2	0.0	1	1 1
212	1	0.0	1	1
215	2	0.0	1	2
219	1	0.0	1	1
220	1	0.0	1	1
245	1	0.0	1	0 1
246	1	0.0	1	1
247	1	0.0	1	1
259	1	0.0	1	1
278	1	0.0	1	0 1
289	1	0.0	1	1
290	2	0.0	1	2
291	2	0.0	1	2


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1042-SAH_2.fastq.gz
=============================================
109622 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1042-SAH_1_trimmed.fq.gz and DR1042-SAH_2_trimmed.fq.gz
file_1: DR1042-SAH_1_trimmed.fq.gz, file_2: DR1042-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1042-SAH_1_trimmed.fq.gz and DR1042-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1042-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1042-SAH_2_val_2.fq.gz

Total number of sequences analysed: 109622

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4708 (4.29%)


  >>> Now running FastQC on the validated data DR1042-SAH_1_val_1.fq.gz<<<

Started analysis of DR1042-SAH_1_val_1.fq.gz
Approx 5% complete for DR1042-SAH_1_val_1.fq.gz
Approx 10% complete for DR1042-SAH_1_val_1.fq.gz
Approx 15% complete for DR1042-SAH_1_val_1.fq.gz
Approx 20% complete for DR1042-SAH_1_val_1.fq.gz
Approx 25% complete for DR1042-SAH_1_val_1.fq.gz
Approx 30% complete for DR1042-SAH_1_val_1.fq.gz
Approx 35% complete for DR1042-SAH_1_val_1.fq.gz
Approx 40% complete for DR1042-SAH_1_val_1.fq.gz
Approx 45% complete for DR1042-SAH_1_val_1.fq.gz
Approx 50% complete for DR1042-SAH_1_val_1.fq.gz
Approx 55% complete for DR1042-SAH_1_val_1.fq.gz
Approx 60% complete for DR1042-SAH_1_val_1.fq.gz
Approx 65% complete for DR1042-SAH_1_val_1.fq.gz
Approx 70% complete for DR1042-SAH_1_val_1.fq.gz
Approx 75% complete for DR1042-SAH_1_val_1.fq.gz
Approx 80% complete for DR1042-SAH_1_val_1.fq.gz
Approx 85% complete for DR1042-SAH_1_val_1.fq.gz
Approx 90% complete for DR1042-SAH_1_val_1.fq.gz
Approx 95% complete for DR1042-SAH_1_val_1.fq.gz
Analysis complete for DR1042-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1042-SAH_2_val_2.fq.gz<<<

Started analysis of DR1042-SAH_2_val_2.fq.gz
Approx 5% complete for DR1042-SAH_2_val_2.fq.gz
Approx 10% complete for DR1042-SAH_2_val_2.fq.gz
Approx 15% complete for DR1042-SAH_2_val_2.fq.gz
Approx 20% complete for DR1042-SAH_2_val_2.fq.gz
Approx 25% complete for DR1042-SAH_2_val_2.fq.gz
Approx 30% complete for DR1042-SAH_2_val_2.fq.gz
Approx 35% complete for DR1042-SAH_2_val_2.fq.gz
Approx 40% complete for DR1042-SAH_2_val_2.fq.gz
Approx 45% complete for DR1042-SAH_2_val_2.fq.gz
Approx 50% complete for DR1042-SAH_2_val_2.fq.gz
Approx 55% complete for DR1042-SAH_2_val_2.fq.gz
Approx 60% complete for DR1042-SAH_2_val_2.fq.gz
Approx 65% complete for DR1042-SAH_2_val_2.fq.gz
Approx 70% complete for DR1042-SAH_2_val_2.fq.gz
Approx 75% complete for DR1042-SAH_2_val_2.fq.gz
Approx 80% complete for DR1042-SAH_2_val_2.fq.gz
Approx 85% complete for DR1042-SAH_2_val_2.fq.gz
Approx 90% complete for DR1042-SAH_2_val_2.fq.gz
Approx 95% complete for DR1042-SAH_2_val_2.fq.gz
Analysis complete for DR1042-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1042-SAH_1_trimmed.fq.gz and DR1042-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1043-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1043-E_1.fastq.gz data/DR1043-E_2.fastq.gz -o results/02.trimgalore/DR1043-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1043-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1043-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1043-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	49	CTGTCTCTTATA	91630	0.05
smallRNA	0	TGGAATTCTCGG	91630	0.00
Illumina	0	AGATCGGAAGAGC	91630	0.00
Using Nextera adapter for trimming (count: 49). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1043-E_trimgalore/DR1043-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1043-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1043-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1043-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1043-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.395 s (4.308 µs/read; 13.93 M reads/minute).

=== Summary ===

Total reads processed:                  91,630
Reads with adapters:                     5,570 (6.1%)
Reads written (passing filters):        91,630 (100.0%)

Total basepairs processed:    27,580,630 bp
Quality-trimmed:                  73,530 bp (0.3%)
Total written (filtered):     27,490,603 bp (99.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 5570 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 68.3%
  C: 7.5%
  G: 17.5%
  T: 6.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	1785	22907.5	0	1785
2	1072	5726.9	0	1072
3	2507	1431.7	0	2507
4	131	357.9	0	131
5	11	89.5	0	11
6	4	22.4	0	4
7	1	5.6	0	1
9	1	0.3	0	1
13	1	0.0	1	1
14	1	0.0	1	1
21	1	0.0	1	1
23	1	0.0	1	1
27	1	0.0	1	1
29	1	0.0	1	1
30	1	0.0	1	1
35	5	0.0	1	4 1
41	2	0.0	1	1 1
42	7	0.0	1	5 2
43	8	0.0	1	8
44	2	0.0	1	2
45	1	0.0	1	1
47	1	0.0	1	1
78	2	0.0	1	1 1
79	6	0.0	1	6
81	1	0.0	1	1
82	1	0.0	1	1
86	1	0.0	1	1
89	1	0.0	1	1
100	1	0.0	1	1
101	1	0.0	1	1
106	1	0.0	1	1
115	1	0.0	1	1
117	1	0.0	1	0 1
126	1	0.0	1	1
155	1	0.0	1	1
159	1	0.0	1	1
179	1	0.0	1	0 1
254	1	0.0	1	1
260	1	0.0	1	1
277	1	0.0	1	0 1
279	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: data/DR1043-E_1.fastq.gz
=============================================
91630 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1043-E_trimgalore/DR1043-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1043-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1043-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1043-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1043-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.481 s (5.246 µs/read; 11.44 M reads/minute).

=== Summary ===

Total reads processed:                  91,630
Reads with adapters:                    75,554 (82.5%)
Reads written (passing filters):        91,630 (100.0%)

Total basepairs processed:    27,580,630 bp
Quality-trimmed:                 741,264 bp (2.7%)
Total written (filtered):     26,758,045 bp (97.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 75554 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.7%
  C: 81.9%
  G: 12.1%
  T: 2.3%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	73454	22907.5	0	73454
2	1538	5726.9	0	1538
3	464	1431.7	0	464
4	24	357.9	0	24
5	15	89.5	0	15
6	3	22.4	0	3
7	2	5.6	0	2
10	2	0.1	1	0 2
11	1	0.0	1	0 1
13	1	0.0	1	0 1
15	1	0.0	1	1
20	1	0.0	1	0 1
22	2	0.0	1	2
26	1	0.0	1	1
27	1	0.0	1	0 1
29	2	0.0	1	1 1
32	1	0.0	1	1
33	1	0.0	1	1
34	1	0.0	1	1
35	1	0.0	1	1
36	1	0.0	1	0 1
37	2	0.0	1	2
38	1	0.0	1	0 1
39	2	0.0	1	2
40	5	0.0	1	3 2
41	1	0.0	1	1
42	2	0.0	1	0 2
43	1	0.0	1	1
44	1	0.0	1	1
57	1	0.0	1	0 1
63	4	0.0	1	4
65	1	0.0	1	1
80	2	0.0	1	2
82	3	0.0	1	3
83	2	0.0	1	2
84	1	0.0	1	1
88	1	0.0	1	1
94	1	0.0	1	0 1
107	1	0.0	1	0 1
130	1	0.0	1	1
159	1	0.0	1	1
160	1	0.0	1	1
165	1	0.0	1	1
257	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1043-E_2.fastq.gz
=============================================
91630 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1043-E_1_trimmed.fq.gz and DR1043-E_2_trimmed.fq.gz
file_1: DR1043-E_1_trimmed.fq.gz, file_2: DR1043-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1043-E_1_trimmed.fq.gz and DR1043-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1043-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1043-E_2_val_2.fq.gz

Total number of sequences analysed: 91630

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4366 (4.76%)


  >>> Now running FastQC on the validated data DR1043-E_1_val_1.fq.gz<<<

Started analysis of DR1043-E_1_val_1.fq.gz
Approx 5% complete for DR1043-E_1_val_1.fq.gz
Approx 10% complete for DR1043-E_1_val_1.fq.gz
Approx 15% complete for DR1043-E_1_val_1.fq.gz
Approx 20% complete for DR1043-E_1_val_1.fq.gz
Approx 25% complete for DR1043-E_1_val_1.fq.gz
Approx 30% complete for DR1043-E_1_val_1.fq.gz
Approx 35% complete for DR1043-E_1_val_1.fq.gz
Approx 40% complete for DR1043-E_1_val_1.fq.gz
Approx 45% complete for DR1043-E_1_val_1.fq.gz
Approx 50% complete for DR1043-E_1_val_1.fq.gz
Approx 55% complete for DR1043-E_1_val_1.fq.gz
Approx 60% complete for DR1043-E_1_val_1.fq.gz
Approx 65% complete for DR1043-E_1_val_1.fq.gz
Approx 70% complete for DR1043-E_1_val_1.fq.gz
Approx 75% complete for DR1043-E_1_val_1.fq.gz
Approx 80% complete for DR1043-E_1_val_1.fq.gz
Approx 85% complete for DR1043-E_1_val_1.fq.gz
Approx 90% complete for DR1043-E_1_val_1.fq.gz
Approx 95% complete for DR1043-E_1_val_1.fq.gz
Analysis complete for DR1043-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1043-E_2_val_2.fq.gz<<<

Started analysis of DR1043-E_2_val_2.fq.gz
Approx 5% complete for DR1043-E_2_val_2.fq.gz
Approx 10% complete for DR1043-E_2_val_2.fq.gz
Approx 15% complete for DR1043-E_2_val_2.fq.gz
Approx 20% complete for DR1043-E_2_val_2.fq.gz
Approx 25% complete for DR1043-E_2_val_2.fq.gz
Approx 30% complete for DR1043-E_2_val_2.fq.gz
Approx 35% complete for DR1043-E_2_val_2.fq.gz
Approx 40% complete for DR1043-E_2_val_2.fq.gz
Approx 45% complete for DR1043-E_2_val_2.fq.gz
Approx 50% complete for DR1043-E_2_val_2.fq.gz
Approx 55% complete for DR1043-E_2_val_2.fq.gz
Approx 60% complete for DR1043-E_2_val_2.fq.gz
Approx 65% complete for DR1043-E_2_val_2.fq.gz
Approx 70% complete for DR1043-E_2_val_2.fq.gz
Approx 75% complete for DR1043-E_2_val_2.fq.gz
Approx 80% complete for DR1043-E_2_val_2.fq.gz
Approx 85% complete for DR1043-E_2_val_2.fq.gz
Approx 90% complete for DR1043-E_2_val_2.fq.gz
Approx 95% complete for DR1043-E_2_val_2.fq.gz
Analysis complete for DR1043-E_2_val_2.fq.gz
Deleting both intermediate output files DR1043-E_1_trimmed.fq.gz and DR1043-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1043-H sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1043-H_1.fastq.gz data/DR1043-H_2.fastq.gz -o results/02.trimgalore/DR1043-H_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1043-H_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1043-H_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1043-H_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	2	CTGTCTCTTATA	94626	0.00
smallRNA	0	TGGAATTCTCGG	94626	0.00
Illumina	0	AGATCGGAAGAGC	94626	0.00
Using Nextera adapter for trimming (count: 2). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1043-H_trimgalore/DR1043-H_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1043-H_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1043-H_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1043-H_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1043-H_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.444 s (4.688 µs/read; 12.80 M reads/minute).

=== Summary ===

Total reads processed:                  94,626
Reads with adapters:                     5,304 (5.6%)
Reads written (passing filters):        94,626 (100.0%)

Total basepairs processed:    28,482,426 bp
Quality-trimmed:                  84,940 bp (0.3%)
Total written (filtered):     28,386,563 bp (99.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 5304 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 50.5%
  C: 8.1%
  G: 30.8%
  T: 10.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	2585	23656.5	0	2585
2	1080	5914.1	0	1080
3	886	1478.5	0	886
4	722	369.6	0	722
5	27	92.4	0	27
24	1	0.0	1	0 1
97	1	0.0	1	1
114	1	0.0	1	1
262	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: data/DR1043-H_1.fastq.gz
=============================================
94626 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1043-H_trimgalore/DR1043-H_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1043-H_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1043-H_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1043-H_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1043-H_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.484 s (5.120 µs/read; 11.72 M reads/minute).

=== Summary ===

Total reads processed:                  94,626
Reads with adapters:                    79,086 (83.6%)
Reads written (passing filters):        94,626 (100.0%)

Total basepairs processed:    28,482,426 bp
Quality-trimmed:                 701,222 bp (2.5%)
Total written (filtered):     27,698,639 bp (97.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 79086 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.3%
  C: 83.0%
  G: 11.6%
  T: 2.1%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	77071	23656.5	0	77071
2	1454	5914.1	0	1454
3	478	1478.5	0	478
4	51	369.6	0	51
5	14	92.4	0	14
6	10	23.1	0	10
7	1	5.8	0	1
35	2	0.0	1	1 1
81	1	0.0	1	0 1
93	1	0.0	1	1
156	1	0.0	1	1
200	1	0.0	1	0 1
211	1	0.0	1	0 1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1043-H_2.fastq.gz
=============================================
94626 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1043-H_1_trimmed.fq.gz and DR1043-H_2_trimmed.fq.gz
file_1: DR1043-H_1_trimmed.fq.gz, file_2: DR1043-H_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1043-H_1_trimmed.fq.gz and DR1043-H_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1043-H_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1043-H_2_val_2.fq.gz

Total number of sequences analysed: 94626

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4054 (4.28%)


  >>> Now running FastQC on the validated data DR1043-H_1_val_1.fq.gz<<<

Started analysis of DR1043-H_1_val_1.fq.gz
Approx 5% complete for DR1043-H_1_val_1.fq.gz
Approx 10% complete for DR1043-H_1_val_1.fq.gz
Approx 15% complete for DR1043-H_1_val_1.fq.gz
Approx 20% complete for DR1043-H_1_val_1.fq.gz
Approx 25% complete for DR1043-H_1_val_1.fq.gz
Approx 30% complete for DR1043-H_1_val_1.fq.gz
Approx 35% complete for DR1043-H_1_val_1.fq.gz
Approx 40% complete for DR1043-H_1_val_1.fq.gz
Approx 45% complete for DR1043-H_1_val_1.fq.gz
Approx 50% complete for DR1043-H_1_val_1.fq.gz
Approx 55% complete for DR1043-H_1_val_1.fq.gz
Approx 60% complete for DR1043-H_1_val_1.fq.gz
Approx 65% complete for DR1043-H_1_val_1.fq.gz
Approx 70% complete for DR1043-H_1_val_1.fq.gz
Approx 75% complete for DR1043-H_1_val_1.fq.gz
Approx 80% complete for DR1043-H_1_val_1.fq.gz
Approx 85% complete for DR1043-H_1_val_1.fq.gz
Approx 90% complete for DR1043-H_1_val_1.fq.gz
Approx 95% complete for DR1043-H_1_val_1.fq.gz
Analysis complete for DR1043-H_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1043-H_2_val_2.fq.gz<<<

Started analysis of DR1043-H_2_val_2.fq.gz
Approx 5% complete for DR1043-H_2_val_2.fq.gz
Approx 10% complete for DR1043-H_2_val_2.fq.gz
Approx 15% complete for DR1043-H_2_val_2.fq.gz
Approx 20% complete for DR1043-H_2_val_2.fq.gz
Approx 25% complete for DR1043-H_2_val_2.fq.gz
Approx 30% complete for DR1043-H_2_val_2.fq.gz
Approx 35% complete for DR1043-H_2_val_2.fq.gz
Approx 40% complete for DR1043-H_2_val_2.fq.gz
Approx 45% complete for DR1043-H_2_val_2.fq.gz
Approx 50% complete for DR1043-H_2_val_2.fq.gz
Approx 55% complete for DR1043-H_2_val_2.fq.gz
Approx 60% complete for DR1043-H_2_val_2.fq.gz
Approx 65% complete for DR1043-H_2_val_2.fq.gz
Approx 70% complete for DR1043-H_2_val_2.fq.gz
Approx 75% complete for DR1043-H_2_val_2.fq.gz
Approx 80% complete for DR1043-H_2_val_2.fq.gz
Approx 85% complete for DR1043-H_2_val_2.fq.gz
Approx 90% complete for DR1043-H_2_val_2.fq.gz
Approx 95% complete for DR1043-H_2_val_2.fq.gz
Analysis complete for DR1043-H_2_val_2.fq.gz
Deleting both intermediate output files DR1043-H_1_trimmed.fq.gz and DR1043-H_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1043-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1043-SAH_1.fastq.gz data/DR1043-SAH_2.fastq.gz -o results/02.trimgalore/DR1043-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1043-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1043-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1043-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	57	CTGTCTCTTATA	83480	0.07
smallRNA	1	TGGAATTCTCGG	83480	0.00
Illumina	0	AGATCGGAAGAGC	83480	0.00
Using Nextera adapter for trimming (count: 57). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1043-SAH_trimgalore/DR1043-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1043-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1043-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1043-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1043-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.389 s (4.655 µs/read; 12.89 M reads/minute).

=== Summary ===

Total reads processed:                  83,480
Reads with adapters:                     5,759 (6.9%)
Reads written (passing filters):        83,480 (100.0%)

Total basepairs processed:    25,127,480 bp
Quality-trimmed:                  78,223 bp (0.3%)
Total written (filtered):     25,025,532 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 5759 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 41.0%
  C: 11.0%
  G: 33.8%
  T: 14.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	2877	20870.0	0	2877
2	1176	5217.5	0	1176
3	1254	1304.4	0	1254
4	360	326.1	0	360
5	12	81.5	0	12
6	7	20.4	0	7
7	2	5.1	0	2
26	1	0.0	1	1
31	1	0.0	1	1
57	1	0.0	1	0 1
73	1	0.0	1	1
78	2	0.0	1	1 1
83	1	0.0	1	1
84	3	0.0	1	3
85	1	0.0	1	1
86	2	0.0	1	1 1
91	1	0.0	1	1
92	1	0.0	1	1
95	1	0.0	1	1
98	1	0.0	1	1
109	1	0.0	1	0 1
112	1	0.0	1	1
119	1	0.0	1	1
120	1	0.0	1	1
127	1	0.0	1	0 1
131	1	0.0	1	1
136	1	0.0	1	1
144	1	0.0	1	1
147	1	0.0	1	1
148	1	0.0	1	1
159	1	0.0	1	1
162	1	0.0	1	0 1
167	1	0.0	1	1
173	1	0.0	1	1
178	1	0.0	1	1
186	2	0.0	1	1 1
191	1	0.0	1	1
193	1	0.0	1	1
195	1	0.0	1	1
197	2	0.0	1	2
198	1	0.0	1	1
215	2	0.0	1	0 2
216	1	0.0	1	0 1
217	1	0.0	1	1
227	2	0.0	1	1 1
229	1	0.0	1	1
242	1	0.0	1	1
245	1	0.0	1	1
251	1	0.0	1	1
252	1	0.0	1	1
263	2	0.0	1	2
267	1	0.0	1	1
268	1	0.0	1	1
276	1	0.0	1	0 1
282	1	0.0	1	1
283	2	0.0	1	2
284	1	0.0	1	1
286	1	0.0	1	1
288	1	0.0	1	1
289	2	0.0	1	2
290	2	0.0	1	1 1
291	5	0.0	1	4 1

RUN STATISTICS FOR INPUT FILE: data/DR1043-SAH_1.fastq.gz
=============================================
83480 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1043-SAH_trimgalore/DR1043-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1043-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1043-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1043-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1043-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.511 s (6.124 µs/read; 9.80 M reads/minute).

=== Summary ===

Total reads processed:                  83,480
Reads with adapters:                    69,440 (83.2%)
Reads written (passing filters):        83,480 (100.0%)

Total basepairs processed:    25,127,480 bp
Quality-trimmed:                 690,710 bp (2.7%)
Total written (filtered):     24,355,123 bp (96.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 69440 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.7%
  C: 81.3%
  G: 12.8%
  T: 2.2%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	67355	20870.0	0	67355
2	1524	5217.5	0	1524
3	431	1304.4	0	431
4	42	326.1	0	42
5	11	81.5	0	11
6	5	20.4	0	5
7	1	5.1	0	1
17	1	0.0	1	0 1
25	1	0.0	1	0 1
31	1	0.0	1	1
45	2	0.0	1	2
77	3	0.0	1	0 3
82	1	0.0	1	1
83	1	0.0	1	1
84	2	0.0	1	2
86	2	0.0	1	2
87	4	0.0	1	4
88	2	0.0	1	2
89	1	0.0	1	1
90	2	0.0	1	2
91	1	0.0	1	1
94	1	0.0	1	1
95	1	0.0	1	1
101	1	0.0	1	1
104	2	0.0	1	2
105	1	0.0	1	1
110	1	0.0	1	1
113	1	0.0	1	1
118	1	0.0	1	1
120	1	0.0	1	1
123	1	0.0	1	0 1
124	1	0.0	1	1
125	1	0.0	1	1
144	1	0.0	1	1
145	2	0.0	1	2
146	2	0.0	1	2
151	1	0.0	1	1
153	1	0.0	1	1
155	2	0.0	1	2
160	2	0.0	1	2
165	2	0.0	1	2
171	2	0.0	1	2
179	2	0.0	1	2
184	2	0.0	1	2
195	1	0.0	1	1
200	1	0.0	1	1
201	2	0.0	1	2
208	1	0.0	1	1
210	1	0.0	1	1
212	1	0.0	1	1
213	2	0.0	1	1 1
217	1	0.0	1	1
230	1	0.0	1	1
245	1	0.0	1	1
288	1	0.0	1	1
290	1	0.0	1	0 1
291	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1043-SAH_2.fastq.gz
=============================================
83480 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1043-SAH_1_trimmed.fq.gz and DR1043-SAH_2_trimmed.fq.gz
file_1: DR1043-SAH_1_trimmed.fq.gz, file_2: DR1043-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1043-SAH_1_trimmed.fq.gz and DR1043-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1043-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1043-SAH_2_val_2.fq.gz

Total number of sequences analysed: 83480

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4053 (4.86%)


  >>> Now running FastQC on the validated data DR1043-SAH_1_val_1.fq.gz<<<

Started analysis of DR1043-SAH_1_val_1.fq.gz
Approx 5% complete for DR1043-SAH_1_val_1.fq.gz
Approx 10% complete for DR1043-SAH_1_val_1.fq.gz
Approx 15% complete for DR1043-SAH_1_val_1.fq.gz
Approx 20% complete for DR1043-SAH_1_val_1.fq.gz
Approx 25% complete for DR1043-SAH_1_val_1.fq.gz
Approx 30% complete for DR1043-SAH_1_val_1.fq.gz
Approx 35% complete for DR1043-SAH_1_val_1.fq.gz
Approx 40% complete for DR1043-SAH_1_val_1.fq.gz
Approx 45% complete for DR1043-SAH_1_val_1.fq.gz
Approx 50% complete for DR1043-SAH_1_val_1.fq.gz
Approx 55% complete for DR1043-SAH_1_val_1.fq.gz
Approx 60% complete for DR1043-SAH_1_val_1.fq.gz
Approx 65% complete for DR1043-SAH_1_val_1.fq.gz
Approx 70% complete for DR1043-SAH_1_val_1.fq.gz
Approx 75% complete for DR1043-SAH_1_val_1.fq.gz
Approx 80% complete for DR1043-SAH_1_val_1.fq.gz
Approx 85% complete for DR1043-SAH_1_val_1.fq.gz
Approx 90% complete for DR1043-SAH_1_val_1.fq.gz
Approx 95% complete for DR1043-SAH_1_val_1.fq.gz
Analysis complete for DR1043-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1043-SAH_2_val_2.fq.gz<<<

Started analysis of DR1043-SAH_2_val_2.fq.gz
Approx 5% complete for DR1043-SAH_2_val_2.fq.gz
Approx 10% complete for DR1043-SAH_2_val_2.fq.gz
Approx 15% complete for DR1043-SAH_2_val_2.fq.gz
Approx 20% complete for DR1043-SAH_2_val_2.fq.gz
Approx 25% complete for DR1043-SAH_2_val_2.fq.gz
Approx 30% complete for DR1043-SAH_2_val_2.fq.gz
Approx 35% complete for DR1043-SAH_2_val_2.fq.gz
Approx 40% complete for DR1043-SAH_2_val_2.fq.gz
Approx 45% complete for DR1043-SAH_2_val_2.fq.gz
Approx 50% complete for DR1043-SAH_2_val_2.fq.gz
Approx 55% complete for DR1043-SAH_2_val_2.fq.gz
Approx 60% complete for DR1043-SAH_2_val_2.fq.gz
Approx 65% complete for DR1043-SAH_2_val_2.fq.gz
Approx 70% complete for DR1043-SAH_2_val_2.fq.gz
Approx 75% complete for DR1043-SAH_2_val_2.fq.gz
Approx 80% complete for DR1043-SAH_2_val_2.fq.gz
Approx 85% complete for DR1043-SAH_2_val_2.fq.gz
Approx 90% complete for DR1043-SAH_2_val_2.fq.gz
Approx 95% complete for DR1043-SAH_2_val_2.fq.gz
Analysis complete for DR1043-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1043-SAH_1_trimmed.fq.gz and DR1043-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1044-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1044-E_1.fastq.gz data/DR1044-E_2.fastq.gz -o results/02.trimgalore/DR1044-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1044-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1044-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1044-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	132	CTGTCTCTTATA	92096	0.14
smallRNA	0	TGGAATTCTCGG	92096	0.00
Illumina	0	AGATCGGAAGAGC	92096	0.00
Using Nextera adapter for trimming (count: 132). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1044-E_trimgalore/DR1044-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1044-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1044-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1044-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1044-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.366 s (3.976 µs/read; 15.09 M reads/minute).

=== Summary ===

Total reads processed:                  92,096
Reads with adapters:                     1,958 (2.1%)
Reads written (passing filters):        92,096 (100.0%)

Total basepairs processed:    27,720,896 bp
Quality-trimmed:                  68,985 bp (0.2%)
Total written (filtered):     27,623,581 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1958 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 58.3%
  C: 15.8%
  G: 18.2%
  T: 7.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	821	23024.0	0	821
2	323	5756.0	0	323
3	574	1439.0	0	574
4	76	359.8	0	76
5	1	89.9	0	1
6	1	22.5	0	1
7	1	5.6	0	1
8	1	1.4	0	1
9	1	0.4	0	1
27	1	0.0	1	1
28	1	0.0	1	1
32	1	0.0	1	0 1
36	1	0.0	1	0 1
41	1	0.0	1	1
43	1	0.0	1	1
45	1	0.0	1	1
46	1	0.0	1	1
65	1	0.0	1	1
78	8	0.0	1	7 1
79	9	0.0	1	9
80	2	0.0	1	2
81	2	0.0	1	2
82	3	0.0	1	3
83	5	0.0	1	4 1
85	4	0.0	1	4
86	2	0.0	1	1 1
87	3	0.0	1	3
88	3	0.0	1	2 1
89	4	0.0	1	4
90	3	0.0	1	2 1
91	1	0.0	1	1
92	4	0.0	1	4
93	1	0.0	1	0 1
94	2	0.0	1	2
96	1	0.0	1	0 1
97	3	0.0	1	3
99	1	0.0	1	1
100	1	0.0	1	1
101	2	0.0	1	2
102	1	0.0	1	1
103	1	0.0	1	1
105	1	0.0	1	1
108	1	0.0	1	1
109	2	0.0	1	2
110	2	0.0	1	2
112	1	0.0	1	0 1
124	1	0.0	1	1
131	1	0.0	1	0 1
134	3	0.0	1	2 1
135	1	0.0	1	0 1
137	1	0.0	1	1
144	1	0.0	1	1
146	1	0.0	1	1
147	1	0.0	1	1
148	1	0.0	1	1
151	2	0.0	1	2
174	2	0.0	1	1 1
178	1	0.0	1	1
180	1	0.0	1	1
184	2	0.0	1	1 1
187	3	0.0	1	2 1
198	1	0.0	1	1
202	1	0.0	1	1
207	1	0.0	1	1
208	1	0.0	1	1
210	1	0.0	1	1
215	1	0.0	1	1
216	1	0.0	1	1
220	1	0.0	1	1
225	1	0.0	1	1
230	1	0.0	1	1
239	1	0.0	1	1
242	2	0.0	1	0 2
244	1	0.0	1	0 1
248	1	0.0	1	1
250	2	0.0	1	2
256	1	0.0	1	1
257	1	0.0	1	1
261	1	0.0	1	1
263	2	0.0	1	1 1
270	1	0.0	1	1
271	3	0.0	1	3
272	1	0.0	1	1
278	2	0.0	1	1 1
279	2	0.0	1	1 1
280	1	0.0	1	1
283	2	0.0	1	2
285	2	0.0	1	1 1
286	4	0.0	1	4
287	3	0.0	1	3
288	4	0.0	1	3 1
289	2	0.0	1	2
290	1	0.0	1	1
291	5	0.0	1	2 3

RUN STATISTICS FOR INPUT FILE: data/DR1044-E_1.fastq.gz
=============================================
92096 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1044-E_trimgalore/DR1044-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1044-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1044-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1044-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1044-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.454 s (4.926 µs/read; 12.18 M reads/minute).

=== Summary ===

Total reads processed:                  92,096
Reads with adapters:                    76,133 (82.7%)
Reads written (passing filters):        92,096 (100.0%)

Total basepairs processed:    27,720,896 bp
Quality-trimmed:                 670,161 bp (2.4%)
Total written (filtered):     26,954,073 bp (97.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 76133 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.0%
  C: 82.6%
  G: 12.3%
  T: 2.1%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	74177	23024.0	0	74177
2	1311	5756.0	0	1311
3	424	1439.0	0	424
4	22	359.8	0	22
5	31	89.9	0	31
6	3	22.5	0	3
7	3	5.6	0	3
9	1	0.4	0	0 1
10	1	0.1	1	0 1
17	1	0.0	1	0 1
23	1	0.0	1	0 1
28	3	0.0	1	1 2
29	1	0.0	1	0 1
31	1	0.0	1	0 1
35	1	0.0	1	1
38	1	0.0	1	1
39	1	0.0	1	0 1
41	2	0.0	1	2
42	1	0.0	1	0 1
46	1	0.0	1	1
48	2	0.0	1	2
49	1	0.0	1	1
52	2	0.0	1	2
53	2	0.0	1	2
54	1	0.0	1	1
55	2	0.0	1	1 1
57	3	0.0	1	3
58	2	0.0	1	2
63	1	0.0	1	1
64	1	0.0	1	1
65	3	0.0	1	3
71	1	0.0	1	1
75	1	0.0	1	0 1
79	1	0.0	1	1
80	3	0.0	1	2 1
81	4	0.0	1	4
82	4	0.0	1	4
83	6	0.0	1	4 2
84	7	0.0	1	5 2
85	6	0.0	1	6
86	4	0.0	1	4
87	4	0.0	1	4
88	5	0.0	1	5
89	1	0.0	1	1
90	1	0.0	1	1
92	1	0.0	1	1
93	2	0.0	1	2
94	2	0.0	1	2
98	2	0.0	1	2
100	3	0.0	1	3
105	1	0.0	1	1
106	1	0.0	1	1
108	1	0.0	1	1
109	1	0.0	1	1
112	2	0.0	1	1 1
113	1	0.0	1	1
114	1	0.0	1	1
117	3	0.0	1	3
119	1	0.0	1	1
123	2	0.0	1	2
124	1	0.0	1	0 1
126	1	0.0	1	1
127	1	0.0	1	1
135	3	0.0	1	3
139	1	0.0	1	1
140	1	0.0	1	1
142	2	0.0	1	2
158	1	0.0	1	1
159	1	0.0	1	1
160	1	0.0	1	1
163	1	0.0	1	1
165	1	0.0	1	1
167	1	0.0	1	1
170	1	0.0	1	1
172	1	0.0	1	1
175	1	0.0	1	1
176	1	0.0	1	0 1
177	2	0.0	1	2
179	1	0.0	1	1
183	1	0.0	1	1
185	1	0.0	1	1
187	1	0.0	1	1
188	1	0.0	1	1
190	1	0.0	1	1
192	1	0.0	1	0 1
193	1	0.0	1	0 1
194	3	0.0	1	2 1
195	1	0.0	1	1
196	2	0.0	1	2
198	1	0.0	1	1
200	1	0.0	1	1
201	1	0.0	1	1
204	1	0.0	1	1
205	1	0.0	1	1
208	1	0.0	1	1
209	3	0.0	1	2 1
212	1	0.0	1	1
213	1	0.0	1	1
221	1	0.0	1	1
225	1	0.0	1	1
233	1	0.0	1	1
282	2	0.0	1	2
286	1	0.0	1	1
288	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1044-E_2.fastq.gz
=============================================
92096 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1044-E_1_trimmed.fq.gz and DR1044-E_2_trimmed.fq.gz
file_1: DR1044-E_1_trimmed.fq.gz, file_2: DR1044-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1044-E_1_trimmed.fq.gz and DR1044-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1044-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1044-E_2_val_2.fq.gz

Total number of sequences analysed: 92096

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4048 (4.40%)


  >>> Now running FastQC on the validated data DR1044-E_1_val_1.fq.gz<<<

Started analysis of DR1044-E_1_val_1.fq.gz
Approx 5% complete for DR1044-E_1_val_1.fq.gz
Approx 10% complete for DR1044-E_1_val_1.fq.gz
Approx 15% complete for DR1044-E_1_val_1.fq.gz
Approx 20% complete for DR1044-E_1_val_1.fq.gz
Approx 25% complete for DR1044-E_1_val_1.fq.gz
Approx 30% complete for DR1044-E_1_val_1.fq.gz
Approx 35% complete for DR1044-E_1_val_1.fq.gz
Approx 40% complete for DR1044-E_1_val_1.fq.gz
Approx 45% complete for DR1044-E_1_val_1.fq.gz
Approx 50% complete for DR1044-E_1_val_1.fq.gz
Approx 55% complete for DR1044-E_1_val_1.fq.gz
Approx 60% complete for DR1044-E_1_val_1.fq.gz
Approx 65% complete for DR1044-E_1_val_1.fq.gz
Approx 70% complete for DR1044-E_1_val_1.fq.gz
Approx 75% complete for DR1044-E_1_val_1.fq.gz
Approx 80% complete for DR1044-E_1_val_1.fq.gz
Approx 85% complete for DR1044-E_1_val_1.fq.gz
Approx 90% complete for DR1044-E_1_val_1.fq.gz
Approx 95% complete for DR1044-E_1_val_1.fq.gz
Analysis complete for DR1044-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1044-E_2_val_2.fq.gz<<<

Started analysis of DR1044-E_2_val_2.fq.gz
Approx 5% complete for DR1044-E_2_val_2.fq.gz
Approx 10% complete for DR1044-E_2_val_2.fq.gz
Approx 15% complete for DR1044-E_2_val_2.fq.gz
Approx 20% complete for DR1044-E_2_val_2.fq.gz
Approx 25% complete for DR1044-E_2_val_2.fq.gz
Approx 30% complete for DR1044-E_2_val_2.fq.gz
Approx 35% complete for DR1044-E_2_val_2.fq.gz
Approx 40% complete for DR1044-E_2_val_2.fq.gz
Approx 45% complete for DR1044-E_2_val_2.fq.gz
Approx 50% complete for DR1044-E_2_val_2.fq.gz
Approx 55% complete for DR1044-E_2_val_2.fq.gz
Approx 60% complete for DR1044-E_2_val_2.fq.gz
Approx 65% complete for DR1044-E_2_val_2.fq.gz
Approx 70% complete for DR1044-E_2_val_2.fq.gz
Approx 75% complete for DR1044-E_2_val_2.fq.gz
Approx 80% complete for DR1044-E_2_val_2.fq.gz
Approx 85% complete for DR1044-E_2_val_2.fq.gz
Approx 90% complete for DR1044-E_2_val_2.fq.gz
Approx 95% complete for DR1044-E_2_val_2.fq.gz
Analysis complete for DR1044-E_2_val_2.fq.gz
Deleting both intermediate output files DR1044-E_1_trimmed.fq.gz and DR1044-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1044-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1044-SAH_1.fastq.gz data/DR1044-SAH_2.fastq.gz -o results/02.trimgalore/DR1044-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1044-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1044-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1044-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	68	CTGTCTCTTATA	85269	0.08
Illumina	0	AGATCGGAAGAGC	85269	0.00
smallRNA	0	TGGAATTCTCGG	85269	0.00
Using Nextera adapter for trimming (count: 68). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1044-SAH_trimgalore/DR1044-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1044-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1044-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1044-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1044-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.417 s (4.888 µs/read; 12.28 M reads/minute).

=== Summary ===

Total reads processed:                  85,269
Reads with adapters:                     6,457 (7.6%)
Reads written (passing filters):        85,269 (100.0%)

Total basepairs processed:    25,665,969 bp
Quality-trimmed:                 109,418 bp (0.4%)
Total written (filtered):     25,530,530 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 6457 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 42.5%
  C: 9.9%
  G: 33.9%
  T: 13.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3156	21317.2	0	3156
2	1516	5329.3	0	1516
3	1421	1332.3	0	1421
4	271	333.1	0	271
5	9	83.3	0	9
6	5	20.8	0	5
10	1	0.1	1	0 1
14	1	0.0	1	1
15	1	0.0	1	1
27	1	0.0	1	0 1
36	1	0.0	1	0 1
78	2	0.0	1	2
81	3	0.0	1	3
82	1	0.0	1	1
83	1	0.0	1	0 1
85	1	0.0	1	1
86	1	0.0	1	1
90	1	0.0	1	1
94	1	0.0	1	1
96	1	0.0	1	1
102	1	0.0	1	1
105	1	0.0	1	0 1
108	1	0.0	1	1
113	1	0.0	1	1
116	1	0.0	1	1
120	1	0.0	1	1
123	1	0.0	1	1
127	1	0.0	1	1
133	1	0.0	1	1
134	1	0.0	1	1
137	1	0.0	1	1
138	1	0.0	1	1
140	1	0.0	1	1
149	1	0.0	1	1
152	1	0.0	1	0 1
154	1	0.0	1	1
162	1	0.0	1	1
167	1	0.0	1	1
175	1	0.0	1	0 1
180	1	0.0	1	1
187	1	0.0	1	1
188	1	0.0	1	0 1
190	1	0.0	1	1
193	1	0.0	1	1
194	1	0.0	1	1
195	1	0.0	1	1
197	1	0.0	1	1
202	1	0.0	1	1
203	1	0.0	1	1
211	1	0.0	1	1
213	1	0.0	1	1
215	1	0.0	1	0 1
217	1	0.0	1	1
220	1	0.0	1	1
229	1	0.0	1	1
244	1	0.0	1	1
250	1	0.0	1	1
251	1	0.0	1	1
252	1	0.0	1	1
256	1	0.0	1	1
263	2	0.0	1	2
265	1	0.0	1	1
275	1	0.0	1	1
277	1	0.0	1	1
280	2	0.0	1	2
289	6	0.0	1	6
290	4	0.0	1	4
291	5	0.0	1	3 2

RUN STATISTICS FOR INPUT FILE: data/DR1044-SAH_1.fastq.gz
=============================================
85269 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1044-SAH_trimgalore/DR1044-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1044-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1044-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1044-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1044-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.464 s (5.438 µs/read; 11.03 M reads/minute).

=== Summary ===

Total reads processed:                  85,269
Reads with adapters:                    70,578 (82.8%)
Reads written (passing filters):        85,269 (100.0%)

Total basepairs processed:    25,665,969 bp
Quality-trimmed:                 746,231 bp (2.9%)
Total written (filtered):     24,836,355 bp (96.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 70578 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.9%
  C: 80.7%
  G: 13.2%
  T: 2.3%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	68273	21317.2	0	68273
2	1623	5329.3	0	1623
3	531	1332.3	0	531
4	55	333.1	0	55
5	10	83.3	0	10
6	6	20.8	0	6
7	2	5.2	0	2
14	1	0.0	1	1
18	1	0.0	1	0 1
33	1	0.0	1	1
41	1	0.0	1	1
52	1	0.0	1	0 1
59	1	0.0	1	1
81	3	0.0	1	2 1
82	2	0.0	1	2
83	4	0.0	1	3 1
84	3	0.0	1	3
85	3	0.0	1	2 1
86	1	0.0	1	1
87	2	0.0	1	2
88	1	0.0	1	1
89	1	0.0	1	1
90	1	0.0	1	1
91	2	0.0	1	2
93	1	0.0	1	1
94	1	0.0	1	1
96	1	0.0	1	1
97	2	0.0	1	1 1
98	2	0.0	1	1 1
101	2	0.0	1	2
104	1	0.0	1	1
105	1	0.0	1	1
106	1	0.0	1	1
107	1	0.0	1	1
109	2	0.0	1	2
118	1	0.0	1	1
120	1	0.0	1	1
123	1	0.0	1	1
125	1	0.0	1	0 1
126	1	0.0	1	1
129	2	0.0	1	2
134	1	0.0	1	0 1
145	1	0.0	1	1
149	1	0.0	1	1
150	1	0.0	1	1
161	1	0.0	1	1
162	1	0.0	1	1
163	1	0.0	1	0 1
164	1	0.0	1	1
170	1	0.0	1	1
173	1	0.0	1	1
175	1	0.0	1	1
180	1	0.0	1	1
181	1	0.0	1	1
184	1	0.0	1	1
186	1	0.0	1	1
194	1	0.0	1	1
199	1	0.0	1	1
212	1	0.0	1	1
213	1	0.0	1	0 1
215	1	0.0	1	0 1
224	1	0.0	1	1
237	1	0.0	1	0 1
260	1	0.0	1	1
290	1	0.0	1	1
291	3	0.0	1	2 1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1044-SAH_2.fastq.gz
=============================================
85269 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1044-SAH_1_trimmed.fq.gz and DR1044-SAH_2_trimmed.fq.gz
file_1: DR1044-SAH_1_trimmed.fq.gz, file_2: DR1044-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1044-SAH_1_trimmed.fq.gz and DR1044-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1044-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1044-SAH_2_val_2.fq.gz

Total number of sequences analysed: 85269

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4233 (4.96%)


  >>> Now running FastQC on the validated data DR1044-SAH_1_val_1.fq.gz<<<

Started analysis of DR1044-SAH_1_val_1.fq.gz
Approx 5% complete for DR1044-SAH_1_val_1.fq.gz
Approx 10% complete for DR1044-SAH_1_val_1.fq.gz
Approx 15% complete for DR1044-SAH_1_val_1.fq.gz
Approx 20% complete for DR1044-SAH_1_val_1.fq.gz
Approx 25% complete for DR1044-SAH_1_val_1.fq.gz
Approx 30% complete for DR1044-SAH_1_val_1.fq.gz
Approx 35% complete for DR1044-SAH_1_val_1.fq.gz
Approx 40% complete for DR1044-SAH_1_val_1.fq.gz
Approx 45% complete for DR1044-SAH_1_val_1.fq.gz
Approx 50% complete for DR1044-SAH_1_val_1.fq.gz
Approx 55% complete for DR1044-SAH_1_val_1.fq.gz
Approx 60% complete for DR1044-SAH_1_val_1.fq.gz
Approx 65% complete for DR1044-SAH_1_val_1.fq.gz
Approx 70% complete for DR1044-SAH_1_val_1.fq.gz
Approx 75% complete for DR1044-SAH_1_val_1.fq.gz
Approx 80% complete for DR1044-SAH_1_val_1.fq.gz
Approx 85% complete for DR1044-SAH_1_val_1.fq.gz
Approx 90% complete for DR1044-SAH_1_val_1.fq.gz
Approx 95% complete for DR1044-SAH_1_val_1.fq.gz
Analysis complete for DR1044-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1044-SAH_2_val_2.fq.gz<<<

Started analysis of DR1044-SAH_2_val_2.fq.gz
Approx 5% complete for DR1044-SAH_2_val_2.fq.gz
Approx 10% complete for DR1044-SAH_2_val_2.fq.gz
Approx 15% complete for DR1044-SAH_2_val_2.fq.gz
Approx 20% complete for DR1044-SAH_2_val_2.fq.gz
Approx 25% complete for DR1044-SAH_2_val_2.fq.gz
Approx 30% complete for DR1044-SAH_2_val_2.fq.gz
Approx 35% complete for DR1044-SAH_2_val_2.fq.gz
Approx 40% complete for DR1044-SAH_2_val_2.fq.gz
Approx 45% complete for DR1044-SAH_2_val_2.fq.gz
Approx 50% complete for DR1044-SAH_2_val_2.fq.gz
Approx 55% complete for DR1044-SAH_2_val_2.fq.gz
Approx 60% complete for DR1044-SAH_2_val_2.fq.gz
Approx 65% complete for DR1044-SAH_2_val_2.fq.gz
Approx 70% complete for DR1044-SAH_2_val_2.fq.gz
Approx 75% complete for DR1044-SAH_2_val_2.fq.gz
Approx 80% complete for DR1044-SAH_2_val_2.fq.gz
Approx 85% complete for DR1044-SAH_2_val_2.fq.gz
Approx 90% complete for DR1044-SAH_2_val_2.fq.gz
Approx 95% complete for DR1044-SAH_2_val_2.fq.gz
Analysis complete for DR1044-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1044-SAH_1_trimmed.fq.gz and DR1044-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1045-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1045-E_1.fastq.gz data/DR1045-E_2.fastq.gz -o results/02.trimgalore/DR1045-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1045-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1045-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1045-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	43	CTGTCTCTTATA	75581	0.06
smallRNA	1	TGGAATTCTCGG	75581	0.00
Illumina	0	AGATCGGAAGAGC	75581	0.00
Using Nextera adapter for trimming (count: 43). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1045-E_trimgalore/DR1045-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1045-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1045-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1045-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1045-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.344 s (4.548 µs/read; 13.19 M reads/minute).

=== Summary ===

Total reads processed:                  75,581
Reads with adapters:                       968 (1.3%)
Reads written (passing filters):        75,581 (100.0%)

Total basepairs processed:    22,749,881 bp
Quality-trimmed:                  45,678 bp (0.2%)
Total written (filtered):     22,696,617 bp (99.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 968 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 51.5%
  C: 16.0%
  G: 26.0%
  T: 6.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	440	18895.2	0	440
2	227	4723.8	0	227
3	223	1181.0	0	223
4	28	295.2	0	28
5	1	73.8	0	1
8	1	1.2	0	1
12	4	0.0	1	3 1
13	2	0.0	1	2
15	6	0.0	1	6
43	4	0.0	1	4
46	1	0.0	1	0 1
78	1	0.0	1	1
80	2	0.0	1	1 1
85	1	0.0	1	1
87	1	0.0	1	1
92	1	0.0	1	1
94	1	0.0	1	0 1
99	1	0.0	1	0 1
103	1	0.0	1	1
109	1	0.0	1	1
111	1	0.0	1	1
122	1	0.0	1	1
132	1	0.0	1	1
150	2	0.0	1	2
177	1	0.0	1	1
183	1	0.0	1	1
199	1	0.0	1	1
202	1	0.0	1	1
204	1	0.0	1	1
220	1	0.0	1	1
225	1	0.0	1	1
227	1	0.0	1	1
283	1	0.0	1	1
286	1	0.0	1	1
287	1	0.0	1	1
289	2	0.0	1	2
291	3	0.0	1	3

RUN STATISTICS FOR INPUT FILE: data/DR1045-E_1.fastq.gz
=============================================
75581 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1045-E_trimgalore/DR1045-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1045-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1045-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1045-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1045-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.411 s (5.437 µs/read; 11.04 M reads/minute).

=== Summary ===

Total reads processed:                  75,581
Reads with adapters:                    63,613 (84.2%)
Reads written (passing filters):        75,581 (100.0%)

Total basepairs processed:    22,749,881 bp
Quality-trimmed:                 456,771 bp (2.0%)
Total written (filtered):     22,222,924 bp (97.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 63613 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 2.8%
  C: 84.7%
  G: 10.7%
  T: 1.8%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	62252	18895.2	0	62252
2	959	4723.8	0	959
3	323	1181.0	0	323
4	18	295.2	0	18
5	9	73.8	0	9
6	4	18.5	0	4
7	1	4.6	0	1
8	1	1.2	0	1
10	1	0.1	1	1
13	3	0.0	1	0 3
14	2	0.0	1	2
15	3	0.0	1	3
27	2	0.0	1	2
31	1	0.0	1	1
34	1	0.0	1	0 1
40	1	0.0	1	0 1
42	2	0.0	1	1 1
62	1	0.0	1	1
82	1	0.0	1	1
87	3	0.0	1	3
89	1	0.0	1	1
96	1	0.0	1	1
101	3	0.0	1	3
104	1	0.0	1	1
105	1	0.0	1	1
112	2	0.0	1	2
119	1	0.0	1	1
125	1	0.0	1	1
142	1	0.0	1	0 1
154	1	0.0	1	1
168	1	0.0	1	1
177	1	0.0	1	1
181	1	0.0	1	1
183	1	0.0	1	1
184	1	0.0	1	1
191	1	0.0	1	1
199	1	0.0	1	1
263	2	0.0	1	2
274	1	0.0	1	1
287	1	0.0	1	1
290	1	0.0	1	0 1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1045-E_2.fastq.gz
=============================================
75581 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1045-E_1_trimmed.fq.gz and DR1045-E_2_trimmed.fq.gz
file_1: DR1045-E_1_trimmed.fq.gz, file_2: DR1045-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1045-E_1_trimmed.fq.gz and DR1045-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1045-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1045-E_2_val_2.fq.gz

Total number of sequences analysed: 75581

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 2513 (3.32%)


  >>> Now running FastQC on the validated data DR1045-E_1_val_1.fq.gz<<<

Started analysis of DR1045-E_1_val_1.fq.gz
Approx 5% complete for DR1045-E_1_val_1.fq.gz
Approx 10% complete for DR1045-E_1_val_1.fq.gz
Approx 15% complete for DR1045-E_1_val_1.fq.gz
Approx 20% complete for DR1045-E_1_val_1.fq.gz
Approx 25% complete for DR1045-E_1_val_1.fq.gz
Approx 30% complete for DR1045-E_1_val_1.fq.gz
Approx 35% complete for DR1045-E_1_val_1.fq.gz
Approx 40% complete for DR1045-E_1_val_1.fq.gz
Approx 45% complete for DR1045-E_1_val_1.fq.gz
Approx 50% complete for DR1045-E_1_val_1.fq.gz
Approx 55% complete for DR1045-E_1_val_1.fq.gz
Approx 60% complete for DR1045-E_1_val_1.fq.gz
Approx 65% complete for DR1045-E_1_val_1.fq.gz
Approx 70% complete for DR1045-E_1_val_1.fq.gz
Approx 75% complete for DR1045-E_1_val_1.fq.gz
Approx 80% complete for DR1045-E_1_val_1.fq.gz
Approx 85% complete for DR1045-E_1_val_1.fq.gz
Approx 90% complete for DR1045-E_1_val_1.fq.gz
Approx 95% complete for DR1045-E_1_val_1.fq.gz
Analysis complete for DR1045-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1045-E_2_val_2.fq.gz<<<

Started analysis of DR1045-E_2_val_2.fq.gz
Approx 5% complete for DR1045-E_2_val_2.fq.gz
Approx 10% complete for DR1045-E_2_val_2.fq.gz
Approx 15% complete for DR1045-E_2_val_2.fq.gz
Approx 20% complete for DR1045-E_2_val_2.fq.gz
Approx 25% complete for DR1045-E_2_val_2.fq.gz
Approx 30% complete for DR1045-E_2_val_2.fq.gz
Approx 35% complete for DR1045-E_2_val_2.fq.gz
Approx 40% complete for DR1045-E_2_val_2.fq.gz
Approx 45% complete for DR1045-E_2_val_2.fq.gz
Approx 50% complete for DR1045-E_2_val_2.fq.gz
Approx 55% complete for DR1045-E_2_val_2.fq.gz
Approx 60% complete for DR1045-E_2_val_2.fq.gz
Approx 65% complete for DR1045-E_2_val_2.fq.gz
Approx 70% complete for DR1045-E_2_val_2.fq.gz
Approx 75% complete for DR1045-E_2_val_2.fq.gz
Approx 80% complete for DR1045-E_2_val_2.fq.gz
Approx 85% complete for DR1045-E_2_val_2.fq.gz
Approx 90% complete for DR1045-E_2_val_2.fq.gz
Approx 95% complete for DR1045-E_2_val_2.fq.gz
Analysis complete for DR1045-E_2_val_2.fq.gz
Deleting both intermediate output files DR1045-E_1_trimmed.fq.gz and DR1045-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1045-H sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1045-H_1.fastq.gz data/DR1045-H_2.fastq.gz -o results/02.trimgalore/DR1045-H_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1045-H_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1045-H_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1045-H_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	36	CTGTCTCTTATA	82462	0.04
Illumina	0	AGATCGGAAGAGC	82462	0.00
smallRNA	0	TGGAATTCTCGG	82462	0.00
Using Nextera adapter for trimming (count: 36). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1045-H_trimgalore/DR1045-H_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1045-H_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1045-H_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1045-H_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1045-H_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.369 s (4.477 µs/read; 13.40 M reads/minute).

=== Summary ===

Total reads processed:                  82,462
Reads with adapters:                     2,383 (2.9%)
Reads written (passing filters):        82,462 (100.0%)

Total basepairs processed:    24,821,062 bp
Quality-trimmed:                  59,827 bp (0.2%)
Total written (filtered):     24,754,509 bp (99.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 2383 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 50.1%
  C: 12.0%
  G: 27.4%
  T: 10.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	1176	20615.5	0	1176
2	498	5153.9	0	498
3	536	1288.5	0	536
4	122	322.1	0	122
5	1	80.5	0	1
6	2	20.1	0	2
10	1	0.1	1	1
11	9	0.0	1	9
12	10	0.0	1	9 1
13	7	0.0	1	7
47	1	0.0	1	1
55	1	0.0	1	1
56	1	0.0	1	1
57	4	0.0	1	4
70	1	0.0	1	1
76	1	0.0	1	1
78	5	0.0	1	5
80	1	0.0	1	1
88	1	0.0	1	1
102	1	0.0	1	1
184	1	0.0	1	0 1
186	1	0.0	1	1
269	1	0.0	1	1
290	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1045-H_1.fastq.gz
=============================================
82462 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1045-H_trimgalore/DR1045-H_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1045-H_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1045-H_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1045-H_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1045-H_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.454 s (5.503 µs/read; 10.90 M reads/minute).

=== Summary ===

Total reads processed:                  82,462
Reads with adapters:                    68,920 (83.6%)
Reads written (passing filters):        82,462 (100.0%)

Total basepairs processed:    24,821,062 bp
Quality-trimmed:                 517,798 bp (2.1%)
Total written (filtered):     24,228,826 bp (97.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 68920 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 2.9%
  C: 83.9%
  G: 11.3%
  T: 1.9%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	67307	20615.5	0	67307
2	1104	5153.9	0	1104
3	399	1288.5	0	399
4	27	322.1	0	27
5	15	80.5	0	15
6	4	20.1	0	4
9	2	0.3	0	2
11	10	0.0	1	8 2
12	7	0.0	1	3 4
13	4	0.0	1	2 2
17	1	0.0	1	0 1
27	2	0.0	1	2
29	1	0.0	1	1
30	1	0.0	1	1
32	1	0.0	1	0 1
36	1	0.0	1	0 1
44	1	0.0	1	1
45	1	0.0	1	0 1
47	1	0.0	1	1
49	1	0.0	1	1
53	1	0.0	1	1
55	1	0.0	1	1
56	1	0.0	1	1
58	1	0.0	1	1
60	2	0.0	1	2
62	1	0.0	1	0 1
64	1	0.0	1	0 1
66	1	0.0	1	0 1
75	1	0.0	1	0 1
85	1	0.0	1	0 1
87	1	0.0	1	1
93	2	0.0	1	0 2
94	1	0.0	1	0 1
95	1	0.0	1	0 1
96	1	0.0	1	0 1
97	8	0.0	1	0 8
98	1	0.0	1	0 1
104	1	0.0	1	1
150	1	0.0	1	1
219	1	0.0	1	1
273	1	0.0	1	0 1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1045-H_2.fastq.gz
=============================================
82462 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1045-H_1_trimmed.fq.gz and DR1045-H_2_trimmed.fq.gz
file_1: DR1045-H_1_trimmed.fq.gz, file_2: DR1045-H_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1045-H_1_trimmed.fq.gz and DR1045-H_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1045-H_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1045-H_2_val_2.fq.gz

Total number of sequences analysed: 82462

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 2834 (3.44%)


  >>> Now running FastQC on the validated data DR1045-H_1_val_1.fq.gz<<<

Started analysis of DR1045-H_1_val_1.fq.gz
Approx 5% complete for DR1045-H_1_val_1.fq.gz
Approx 10% complete for DR1045-H_1_val_1.fq.gz
Approx 15% complete for DR1045-H_1_val_1.fq.gz
Approx 20% complete for DR1045-H_1_val_1.fq.gz
Approx 25% complete for DR1045-H_1_val_1.fq.gz
Approx 30% complete for DR1045-H_1_val_1.fq.gz
Approx 35% complete for DR1045-H_1_val_1.fq.gz
Approx 40% complete for DR1045-H_1_val_1.fq.gz
Approx 45% complete for DR1045-H_1_val_1.fq.gz
Approx 50% complete for DR1045-H_1_val_1.fq.gz
Approx 55% complete for DR1045-H_1_val_1.fq.gz
Approx 60% complete for DR1045-H_1_val_1.fq.gz
Approx 65% complete for DR1045-H_1_val_1.fq.gz
Approx 70% complete for DR1045-H_1_val_1.fq.gz
Approx 75% complete for DR1045-H_1_val_1.fq.gz
Approx 80% complete for DR1045-H_1_val_1.fq.gz
Approx 85% complete for DR1045-H_1_val_1.fq.gz
Approx 90% complete for DR1045-H_1_val_1.fq.gz
Approx 95% complete for DR1045-H_1_val_1.fq.gz
Analysis complete for DR1045-H_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1045-H_2_val_2.fq.gz<<<

Started analysis of DR1045-H_2_val_2.fq.gz
Approx 5% complete for DR1045-H_2_val_2.fq.gz
Approx 10% complete for DR1045-H_2_val_2.fq.gz
Approx 15% complete for DR1045-H_2_val_2.fq.gz
Approx 20% complete for DR1045-H_2_val_2.fq.gz
Approx 25% complete for DR1045-H_2_val_2.fq.gz
Approx 30% complete for DR1045-H_2_val_2.fq.gz
Approx 35% complete for DR1045-H_2_val_2.fq.gz
Approx 40% complete for DR1045-H_2_val_2.fq.gz
Approx 45% complete for DR1045-H_2_val_2.fq.gz
Approx 50% complete for DR1045-H_2_val_2.fq.gz
Approx 55% complete for DR1045-H_2_val_2.fq.gz
Approx 60% complete for DR1045-H_2_val_2.fq.gz
Approx 65% complete for DR1045-H_2_val_2.fq.gz
Approx 70% complete for DR1045-H_2_val_2.fq.gz
Approx 75% complete for DR1045-H_2_val_2.fq.gz
Approx 80% complete for DR1045-H_2_val_2.fq.gz
Approx 85% complete for DR1045-H_2_val_2.fq.gz
Approx 90% complete for DR1045-H_2_val_2.fq.gz
Approx 95% complete for DR1045-H_2_val_2.fq.gz
Analysis complete for DR1045-H_2_val_2.fq.gz
Deleting both intermediate output files DR1045-H_1_trimmed.fq.gz and DR1045-H_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1045-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1045-SAH_1.fastq.gz data/DR1045-SAH_2.fastq.gz -o results/02.trimgalore/DR1045-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1045-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1045-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1045-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	49	CTGTCTCTTATA	93471	0.05
smallRNA	1	TGGAATTCTCGG	93471	0.00
Illumina	0	AGATCGGAAGAGC	93471	0.00
Using Nextera adapter for trimming (count: 49). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1045-SAH_trimgalore/DR1045-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1045-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1045-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1045-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1045-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.428 s (4.575 µs/read; 13.11 M reads/minute).

=== Summary ===

Total reads processed:                  93,471
Reads with adapters:                     8,264 (8.8%)
Reads written (passing filters):        93,471 (100.0%)

Total basepairs processed:    28,134,771 bp
Quality-trimmed:                 110,607 bp (0.4%)
Total written (filtered):     27,998,268 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 8264 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 46.9%
  C: 9.0%
  G: 28.0%
  T: 16.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4003	23367.8	0	4003
2	1375	5841.9	0	1375
3	2212	1460.5	0	2212
4	592	365.1	0	592
5	24	91.3	0	24
6	1	22.8	0	1
7	1	5.7	0	1
20	1	0.0	1	0 1
76	1	0.0	1	1
78	1	0.0	1	1
79	2	0.0	1	2
80	1	0.0	1	1
81	1	0.0	1	1
84	1	0.0	1	1
87	1	0.0	1	1
92	2	0.0	1	2
97	1	0.0	1	1
99	1	0.0	1	0 1
103	1	0.0	1	1
106	1	0.0	1	1
110	1	0.0	1	1
117	1	0.0	1	1
120	1	0.0	1	1
127	1	0.0	1	1
129	1	0.0	1	1
135	1	0.0	1	1
141	1	0.0	1	0 1
145	2	0.0	1	2
163	1	0.0	1	1
168	1	0.0	1	1
170	1	0.0	1	1
174	1	0.0	1	1
180	1	0.0	1	1
181	1	0.0	1	1
185	1	0.0	1	1
189	1	0.0	1	1
194	1	0.0	1	1
203	1	0.0	1	1
204	1	0.0	1	1
218	1	0.0	1	1
222	1	0.0	1	0 1
223	1	0.0	1	1
226	1	0.0	1	1
228	1	0.0	1	0 1
239	1	0.0	1	1
251	1	0.0	1	1
254	1	0.0	1	1
262	1	0.0	1	1
273	1	0.0	1	1
283	1	0.0	1	1
284	1	0.0	1	1
286	1	0.0	1	0 1
287	1	0.0	1	1
291	7	0.0	1	6 1

RUN STATISTICS FOR INPUT FILE: data/DR1045-SAH_1.fastq.gz
=============================================
93471 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1045-SAH_trimgalore/DR1045-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1045-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1045-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1045-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1045-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.495 s (5.296 µs/read; 11.33 M reads/minute).

=== Summary ===

Total reads processed:                  93,471
Reads with adapters:                    78,294 (83.8%)
Reads written (passing filters):        93,471 (100.0%)

Total basepairs processed:    28,134,771 bp
Quality-trimmed:                 662,209 bp (2.4%)
Total written (filtered):     27,384,237 bp (97.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 78294 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.1%
  C: 82.1%
  G: 12.9%
  T: 1.9%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	76317	23367.8	0	76317
2	1386	5841.9	0	1386
3	470	1460.5	0	470
4	34	365.1	0	34
5	19	91.3	0	19
6	6	22.8	0	6
7	1	5.7	0	1
49	1	0.0	1	1
53	1	0.0	1	0 1
66	1	0.0	1	1
80	1	0.0	1	1
82	4	0.0	1	4
83	1	0.0	1	1
84	2	0.0	1	2
85	4	0.0	1	4
86	2	0.0	1	2
87	2	0.0	1	2
90	2	0.0	1	2
92	2	0.0	1	2
94	1	0.0	1	1
96	1	0.0	1	1
97	1	0.0	1	0 1
98	1	0.0	1	1
99	1	0.0	1	1
102	1	0.0	1	1
106	1	0.0	1	1
107	1	0.0	1	1
110	1	0.0	1	1
111	1	0.0	1	1
112	1	0.0	1	1
115	1	0.0	1	1
117	1	0.0	1	1
119	1	0.0	1	1
124	1	0.0	1	1
128	2	0.0	1	2
132	1	0.0	1	1
137	1	0.0	1	1
141	1	0.0	1	1
143	1	0.0	1	1
146	1	0.0	1	1
151	1	0.0	1	1
163	1	0.0	1	0 1
167	1	0.0	1	0 1
168	1	0.0	1	0 1
169	1	0.0	1	1
175	1	0.0	1	1
177	1	0.0	1	1
180	1	0.0	1	1
182	1	0.0	1	1
185	1	0.0	1	1
188	1	0.0	1	1
207	1	0.0	1	1
208	1	0.0	1	1
215	1	0.0	1	1
288	1	0.0	1	1
290	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1045-SAH_2.fastq.gz
=============================================
93471 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1045-SAH_1_trimmed.fq.gz and DR1045-SAH_2_trimmed.fq.gz
file_1: DR1045-SAH_1_trimmed.fq.gz, file_2: DR1045-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1045-SAH_1_trimmed.fq.gz and DR1045-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1045-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1045-SAH_2_val_2.fq.gz

Total number of sequences analysed: 93471

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 3859 (4.13%)


  >>> Now running FastQC on the validated data DR1045-SAH_1_val_1.fq.gz<<<

Started analysis of DR1045-SAH_1_val_1.fq.gz
Approx 5% complete for DR1045-SAH_1_val_1.fq.gz
Approx 10% complete for DR1045-SAH_1_val_1.fq.gz
Approx 15% complete for DR1045-SAH_1_val_1.fq.gz
Approx 20% complete for DR1045-SAH_1_val_1.fq.gz
Approx 25% complete for DR1045-SAH_1_val_1.fq.gz
Approx 30% complete for DR1045-SAH_1_val_1.fq.gz
Approx 35% complete for DR1045-SAH_1_val_1.fq.gz
Approx 40% complete for DR1045-SAH_1_val_1.fq.gz
Approx 45% complete for DR1045-SAH_1_val_1.fq.gz
Approx 50% complete for DR1045-SAH_1_val_1.fq.gz
Approx 55% complete for DR1045-SAH_1_val_1.fq.gz
Approx 60% complete for DR1045-SAH_1_val_1.fq.gz
Approx 65% complete for DR1045-SAH_1_val_1.fq.gz
Approx 70% complete for DR1045-SAH_1_val_1.fq.gz
Approx 75% complete for DR1045-SAH_1_val_1.fq.gz
Approx 80% complete for DR1045-SAH_1_val_1.fq.gz
Approx 85% complete for DR1045-SAH_1_val_1.fq.gz
Approx 90% complete for DR1045-SAH_1_val_1.fq.gz
Approx 95% complete for DR1045-SAH_1_val_1.fq.gz
Analysis complete for DR1045-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1045-SAH_2_val_2.fq.gz<<<

Started analysis of DR1045-SAH_2_val_2.fq.gz
Approx 5% complete for DR1045-SAH_2_val_2.fq.gz
Approx 10% complete for DR1045-SAH_2_val_2.fq.gz
Approx 15% complete for DR1045-SAH_2_val_2.fq.gz
Approx 20% complete for DR1045-SAH_2_val_2.fq.gz
Approx 25% complete for DR1045-SAH_2_val_2.fq.gz
Approx 30% complete for DR1045-SAH_2_val_2.fq.gz
Approx 35% complete for DR1045-SAH_2_val_2.fq.gz
Approx 40% complete for DR1045-SAH_2_val_2.fq.gz
Approx 45% complete for DR1045-SAH_2_val_2.fq.gz
Approx 50% complete for DR1045-SAH_2_val_2.fq.gz
Approx 55% complete for DR1045-SAH_2_val_2.fq.gz
Approx 60% complete for DR1045-SAH_2_val_2.fq.gz
Approx 65% complete for DR1045-SAH_2_val_2.fq.gz
Approx 70% complete for DR1045-SAH_2_val_2.fq.gz
Approx 75% complete for DR1045-SAH_2_val_2.fq.gz
Approx 80% complete for DR1045-SAH_2_val_2.fq.gz
Approx 85% complete for DR1045-SAH_2_val_2.fq.gz
Approx 90% complete for DR1045-SAH_2_val_2.fq.gz
Approx 95% complete for DR1045-SAH_2_val_2.fq.gz
Analysis complete for DR1045-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1045-SAH_1_trimmed.fq.gz and DR1045-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1046-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1046-E_1.fastq.gz data/DR1046-E_2.fastq.gz -o results/02.trimgalore/DR1046-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1046-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1046-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1046-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	6	CTGTCTCTTATA	81267	0.01
smallRNA	0	TGGAATTCTCGG	81267	0.00
Illumina	0	AGATCGGAAGAGC	81267	0.00
Using Nextera adapter for trimming (count: 6). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1046-E_trimgalore/DR1046-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1046-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1046-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1046-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1046-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.366 s (4.501 µs/read; 13.33 M reads/minute).

=== Summary ===

Total reads processed:                  81,267
Reads with adapters:                     1,925 (2.4%)
Reads written (passing filters):        81,267 (100.0%)

Total basepairs processed:    24,461,367 bp
Quality-trimmed:                  66,483 bp (0.3%)
Total written (filtered):     24,390,962 bp (99.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1925 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 55.7%
  C: 11.3%
  G: 20.4%
  T: 12.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	973	20316.8	0	973
2	386	5079.2	0	386
3	490	1269.8	0	490
4	62	317.4	0	62
5	4	79.4	0	4
6	2	19.8	0	2
7	1	5.0	0	1
12	2	0.0	1	1 1
29	2	0.0	1	2
111	1	0.0	1	1
113	1	0.0	1	1
114	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1046-E_1.fastq.gz
=============================================
81267 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1046-E_trimgalore/DR1046-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1046-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1046-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1046-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1046-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.415 s (5.104 µs/read; 11.76 M reads/minute).

=== Summary ===

Total reads processed:                  81,267
Reads with adapters:                    66,732 (82.1%)
Reads written (passing filters):        81,267 (100.0%)

Total basepairs processed:    24,461,367 bp
Quality-trimmed:                 713,120 bp (2.9%)
Total written (filtered):     23,678,532 bp (96.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 66732 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 4.0%
  C: 81.3%
  G: 12.1%
  T: 2.6%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	64726	20316.8	0	64726
2	1473	5079.2	0	1473
3	461	1269.8	0	461
4	28	317.4	0	28
5	25	79.4	0	25
6	9	19.8	0	9
7	2	5.0	0	2
11	1	0.0	1	0 1
12	1	0.0	1	1
26	1	0.0	1	1
28	1	0.0	1	1
40	1	0.0	1	0 1
44	1	0.0	1	1
83	1	0.0	1	0 1
111	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1046-E_2.fastq.gz
=============================================
81267 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1046-E_1_trimmed.fq.gz and DR1046-E_2_trimmed.fq.gz
file_1: DR1046-E_1_trimmed.fq.gz, file_2: DR1046-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1046-E_1_trimmed.fq.gz and DR1046-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1046-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1046-E_2_val_2.fq.gz

Total number of sequences analysed: 81267

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4348 (5.35%)


  >>> Now running FastQC on the validated data DR1046-E_1_val_1.fq.gz<<<

Started analysis of DR1046-E_1_val_1.fq.gz
Approx 5% complete for DR1046-E_1_val_1.fq.gz
Approx 10% complete for DR1046-E_1_val_1.fq.gz
Approx 15% complete for DR1046-E_1_val_1.fq.gz
Approx 20% complete for DR1046-E_1_val_1.fq.gz
Approx 25% complete for DR1046-E_1_val_1.fq.gz
Approx 30% complete for DR1046-E_1_val_1.fq.gz
Approx 35% complete for DR1046-E_1_val_1.fq.gz
Approx 40% complete for DR1046-E_1_val_1.fq.gz
Approx 45% complete for DR1046-E_1_val_1.fq.gz
Approx 50% complete for DR1046-E_1_val_1.fq.gz
Approx 55% complete for DR1046-E_1_val_1.fq.gz
Approx 60% complete for DR1046-E_1_val_1.fq.gz
Approx 65% complete for DR1046-E_1_val_1.fq.gz
Approx 70% complete for DR1046-E_1_val_1.fq.gz
Approx 75% complete for DR1046-E_1_val_1.fq.gz
Approx 80% complete for DR1046-E_1_val_1.fq.gz
Approx 85% complete for DR1046-E_1_val_1.fq.gz
Approx 90% complete for DR1046-E_1_val_1.fq.gz
Approx 95% complete for DR1046-E_1_val_1.fq.gz
Analysis complete for DR1046-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1046-E_2_val_2.fq.gz<<<

Started analysis of DR1046-E_2_val_2.fq.gz
Approx 5% complete for DR1046-E_2_val_2.fq.gz
Approx 10% complete for DR1046-E_2_val_2.fq.gz
Approx 15% complete for DR1046-E_2_val_2.fq.gz
Approx 20% complete for DR1046-E_2_val_2.fq.gz
Approx 25% complete for DR1046-E_2_val_2.fq.gz
Approx 30% complete for DR1046-E_2_val_2.fq.gz
Approx 35% complete for DR1046-E_2_val_2.fq.gz
Approx 40% complete for DR1046-E_2_val_2.fq.gz
Approx 45% complete for DR1046-E_2_val_2.fq.gz
Approx 50% complete for DR1046-E_2_val_2.fq.gz
Approx 55% complete for DR1046-E_2_val_2.fq.gz
Approx 60% complete for DR1046-E_2_val_2.fq.gz
Approx 65% complete for DR1046-E_2_val_2.fq.gz
Approx 70% complete for DR1046-E_2_val_2.fq.gz
Approx 75% complete for DR1046-E_2_val_2.fq.gz
Approx 80% complete for DR1046-E_2_val_2.fq.gz
Approx 85% complete for DR1046-E_2_val_2.fq.gz
Approx 90% complete for DR1046-E_2_val_2.fq.gz
Approx 95% complete for DR1046-E_2_val_2.fq.gz
Analysis complete for DR1046-E_2_val_2.fq.gz
Deleting both intermediate output files DR1046-E_1_trimmed.fq.gz and DR1046-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1046-H sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1046-H_1.fastq.gz data/DR1046-H_2.fastq.gz -o results/02.trimgalore/DR1046-H_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1046-H_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1046-H_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1046-H_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	15	CTGTCTCTTATA	82990	0.02
Illumina	0	AGATCGGAAGAGC	82990	0.00
smallRNA	0	TGGAATTCTCGG	82990	0.00
Using Nextera adapter for trimming (count: 15). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1046-H_trimgalore/DR1046-H_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1046-H_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1046-H_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1046-H_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1046-H_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.401 s (4.838 µs/read; 12.40 M reads/minute).

=== Summary ===

Total reads processed:                  82,990
Reads with adapters:                     4,526 (5.5%)
Reads written (passing filters):        82,990 (100.0%)

Total basepairs processed:    24,979,990 bp
Quality-trimmed:                  64,789 bp (0.3%)
Total written (filtered):     24,905,619 bp (99.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 4526 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 44.9%
  C: 9.9%
  G: 27.0%
  T: 18.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	2258	20747.5	0	2258
2	1031	5186.9	0	1031
3	960	1296.7	0	960
4	244	324.2	0	244
5	7	81.0	0	7
6	3	20.3	0	3
7	4	5.1	0	4
10	1	0.1	1	1
11	1	0.0	1	1
12	4	0.0	1	3 1
16	1	0.0	1	0 1
26	1	0.0	1	1
29	2	0.0	1	2
34	1	0.0	1	0 1
73	2	0.0	1	2
82	1	0.0	1	1
83	1	0.0	1	1
133	1	0.0	1	1
194	1	0.0	1	1
230	1	0.0	1	1
254	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1046-H_1.fastq.gz
=============================================
82990 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1046-H_trimgalore/DR1046-H_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1046-H_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1046-H_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1046-H_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1046-H_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.434 s (5.235 µs/read; 11.46 M reads/minute).

=== Summary ===

Total reads processed:                  82,990
Reads with adapters:                    69,123 (83.3%)
Reads written (passing filters):        82,990 (100.0%)

Total basepairs processed:    24,979,990 bp
Quality-trimmed:                 599,157 bp (2.4%)
Total written (filtered):     24,307,968 bp (97.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 69123 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.3%
  C: 82.5%
  G: 12.1%
  T: 2.1%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	67374	20747.5	0	67374
2	1252	5186.9	0	1252
3	430	1296.7	0	430
4	25	324.2	0	25
5	9	81.0	0	9
6	14	20.3	0	14
11	3	0.0	1	3
12	2	0.0	1	1 1
13	1	0.0	1	1
19	1	0.0	1	1
21	1	0.0	1	0 1
29	1	0.0	1	1
32	1	0.0	1	1
48	1	0.0	1	0 1
59	1	0.0	1	0 1
85	1	0.0	1	1
93	1	0.0	1	0 1
125	1	0.0	1	1
140	1	0.0	1	1
199	1	0.0	1	1
260	1	0.0	1	1
288	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1046-H_2.fastq.gz
=============================================
82990 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1046-H_1_trimmed.fq.gz and DR1046-H_2_trimmed.fq.gz
file_1: DR1046-H_1_trimmed.fq.gz, file_2: DR1046-H_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1046-H_1_trimmed.fq.gz and DR1046-H_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1046-H_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1046-H_2_val_2.fq.gz

Total number of sequences analysed: 82990

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 3336 (4.02%)


  >>> Now running FastQC on the validated data DR1046-H_1_val_1.fq.gz<<<

Started analysis of DR1046-H_1_val_1.fq.gz
Approx 5% complete for DR1046-H_1_val_1.fq.gz
Approx 10% complete for DR1046-H_1_val_1.fq.gz
Approx 15% complete for DR1046-H_1_val_1.fq.gz
Approx 20% complete for DR1046-H_1_val_1.fq.gz
Approx 25% complete for DR1046-H_1_val_1.fq.gz
Approx 30% complete for DR1046-H_1_val_1.fq.gz
Approx 35% complete for DR1046-H_1_val_1.fq.gz
Approx 40% complete for DR1046-H_1_val_1.fq.gz
Approx 45% complete for DR1046-H_1_val_1.fq.gz
Approx 50% complete for DR1046-H_1_val_1.fq.gz
Approx 55% complete for DR1046-H_1_val_1.fq.gz
Approx 60% complete for DR1046-H_1_val_1.fq.gz
Approx 65% complete for DR1046-H_1_val_1.fq.gz
Approx 70% complete for DR1046-H_1_val_1.fq.gz
Approx 75% complete for DR1046-H_1_val_1.fq.gz
Approx 80% complete for DR1046-H_1_val_1.fq.gz
Approx 85% complete for DR1046-H_1_val_1.fq.gz
Approx 90% complete for DR1046-H_1_val_1.fq.gz
Approx 95% complete for DR1046-H_1_val_1.fq.gz
Analysis complete for DR1046-H_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1046-H_2_val_2.fq.gz<<<

Started analysis of DR1046-H_2_val_2.fq.gz
Approx 5% complete for DR1046-H_2_val_2.fq.gz
Approx 10% complete for DR1046-H_2_val_2.fq.gz
Approx 15% complete for DR1046-H_2_val_2.fq.gz
Approx 20% complete for DR1046-H_2_val_2.fq.gz
Approx 25% complete for DR1046-H_2_val_2.fq.gz
Approx 30% complete for DR1046-H_2_val_2.fq.gz
Approx 35% complete for DR1046-H_2_val_2.fq.gz
Approx 40% complete for DR1046-H_2_val_2.fq.gz
Approx 45% complete for DR1046-H_2_val_2.fq.gz
Approx 50% complete for DR1046-H_2_val_2.fq.gz
Approx 55% complete for DR1046-H_2_val_2.fq.gz
Approx 60% complete for DR1046-H_2_val_2.fq.gz
Approx 65% complete for DR1046-H_2_val_2.fq.gz
Approx 70% complete for DR1046-H_2_val_2.fq.gz
Approx 75% complete for DR1046-H_2_val_2.fq.gz
Approx 80% complete for DR1046-H_2_val_2.fq.gz
Approx 85% complete for DR1046-H_2_val_2.fq.gz
Approx 90% complete for DR1046-H_2_val_2.fq.gz
Approx 95% complete for DR1046-H_2_val_2.fq.gz
Analysis complete for DR1046-H_2_val_2.fq.gz
Deleting both intermediate output files DR1046-H_1_trimmed.fq.gz and DR1046-H_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1046-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1046-SAH_1.fastq.gz data/DR1046-SAH_2.fastq.gz -o results/02.trimgalore/DR1046-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1046-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1046-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1046-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	70	CTGTCTCTTATA	93040	0.08
smallRNA	0	TGGAATTCTCGG	93040	0.00
Illumina	0	AGATCGGAAGAGC	93040	0.00
Using Nextera adapter for trimming (count: 70). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1046-SAH_trimgalore/DR1046-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1046-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1046-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1046-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1046-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.423 s (4.546 µs/read; 13.20 M reads/minute).

=== Summary ===

Total reads processed:                  93,040
Reads with adapters:                     8,380 (9.0%)
Reads written (passing filters):        93,040 (100.0%)

Total basepairs processed:    28,005,040 bp
Quality-trimmed:                  93,903 bp (0.3%)
Total written (filtered):     27,881,603 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 8380 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 44.0%
  C: 8.0%
  G: 33.9%
  T: 14.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4159	23260.0	0	4159
2	1514	5815.0	0	1514
3	2059	1453.8	0	2059
4	561	363.4	0	561
5	3	90.9	0	3
6	5	22.7	0	5
17	1	0.0	1	1
22	1	0.0	1	1
28	1	0.0	1	1
73	1	0.0	1	1
78	1	0.0	1	1
80	2	0.0	1	2
81	1	0.0	1	1
83	1	0.0	1	0 1
84	1	0.0	1	1
87	1	0.0	1	1
96	2	0.0	1	1 1
97	1	0.0	1	1
98	2	0.0	1	2
101	1	0.0	1	1
102	2	0.0	1	2
108	1	0.0	1	1
109	1	0.0	1	1
117	1	0.0	1	1
126	1	0.0	1	1
135	1	0.0	1	1
137	1	0.0	1	1
143	1	0.0	1	1
146	1	0.0	1	1
153	1	0.0	1	1
155	1	0.0	1	1
158	2	0.0	1	2
163	1	0.0	1	1
164	3	0.0	1	3
168	2	0.0	1	2
169	1	0.0	1	1
171	1	0.0	1	0 1
180	1	0.0	1	1
185	2	0.0	1	1 1
186	2	0.0	1	2
193	1	0.0	1	1
199	2	0.0	1	2
202	1	0.0	1	1
203	1	0.0	1	0 1
205	1	0.0	1	1
207	2	0.0	1	1 1
208	1	0.0	1	1
210	1	0.0	1	1
212	1	0.0	1	1
213	2	0.0	1	2
215	2	0.0	1	2
216	2	0.0	1	1 1
222	2	0.0	1	2
234	1	0.0	1	1
265	1	0.0	1	1
273	1	0.0	1	1
276	1	0.0	1	1
278	1	0.0	1	1
283	2	0.0	1	2
286	1	0.0	1	1
289	1	0.0	1	1
290	1	0.0	1	1
291	6	0.0	1	4 2

RUN STATISTICS FOR INPUT FILE: data/DR1046-SAH_1.fastq.gz
=============================================
93040 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1046-SAH_trimgalore/DR1046-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1046-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1046-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1046-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1046-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.525 s (5.641 µs/read; 10.64 M reads/minute).

=== Summary ===

Total reads processed:                  93,040
Reads with adapters:                    77,602 (83.4%)
Reads written (passing filters):        93,040 (100.0%)

Total basepairs processed:    28,005,040 bp
Quality-trimmed:                 715,498 bp (2.6%)
Total written (filtered):     27,197,803 bp (97.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 77602 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.4%
  C: 82.1%
  G: 12.4%
  T: 2.1%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	75467	23260.0	0	75467
2	1518	5815.0	0	1518
3	463	1453.8	0	463
4	39	363.4	0	39
5	26	90.9	0	26
6	9	22.7	0	9
7	1	5.7	0	1
17	2	0.0	1	0 2
23	1	0.0	1	0 1
29	1	0.0	1	1
81	2	0.0	1	2
82	3	0.0	1	3
83	5	0.0	1	5
84	2	0.0	1	2
85	3	0.0	1	3
87	1	0.0	1	1
88	1	0.0	1	0 1
89	2	0.0	1	1 1
93	1	0.0	1	1
96	1	0.0	1	1
97	1	0.0	1	1
99	1	0.0	1	1
101	2	0.0	1	2
102	1	0.0	1	1
113	2	0.0	1	2
114	3	0.0	1	2 1
115	1	0.0	1	0 1
116	1	0.0	1	1
121	1	0.0	1	1
123	1	0.0	1	1
130	2	0.0	1	1 1
134	1	0.0	1	1
139	1	0.0	1	1
144	1	0.0	1	1
149	1	0.0	1	1
153	1	0.0	1	1
154	1	0.0	1	1
157	3	0.0	1	2 1
168	1	0.0	1	1
174	2	0.0	1	2
178	1	0.0	1	1
183	1	0.0	1	1
188	1	0.0	1	1
189	2	0.0	1	2
190	2	0.0	1	2
195	1	0.0	1	1
200	2	0.0	1	2
201	2	0.0	1	1 1
206	1	0.0	1	1
219	1	0.0	1	1
225	2	0.0	1	2
227	1	0.0	1	1
236	1	0.0	1	1
288	1	0.0	1	1
290	4	0.0	1	4
291	3	0.0	1	3


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1046-SAH_2.fastq.gz
=============================================
93040 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1046-SAH_1_trimmed.fq.gz and DR1046-SAH_2_trimmed.fq.gz
file_1: DR1046-SAH_1_trimmed.fq.gz, file_2: DR1046-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1046-SAH_1_trimmed.fq.gz and DR1046-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1046-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1046-SAH_2_val_2.fq.gz

Total number of sequences analysed: 93040

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4223 (4.54%)


  >>> Now running FastQC on the validated data DR1046-SAH_1_val_1.fq.gz<<<

Started analysis of DR1046-SAH_1_val_1.fq.gz
Approx 5% complete for DR1046-SAH_1_val_1.fq.gz
Approx 10% complete for DR1046-SAH_1_val_1.fq.gz
Approx 15% complete for DR1046-SAH_1_val_1.fq.gz
Approx 20% complete for DR1046-SAH_1_val_1.fq.gz
Approx 25% complete for DR1046-SAH_1_val_1.fq.gz
Approx 30% complete for DR1046-SAH_1_val_1.fq.gz
Approx 35% complete for DR1046-SAH_1_val_1.fq.gz
Approx 40% complete for DR1046-SAH_1_val_1.fq.gz
Approx 45% complete for DR1046-SAH_1_val_1.fq.gz
Approx 50% complete for DR1046-SAH_1_val_1.fq.gz
Approx 55% complete for DR1046-SAH_1_val_1.fq.gz
Approx 60% complete for DR1046-SAH_1_val_1.fq.gz
Approx 65% complete for DR1046-SAH_1_val_1.fq.gz
Approx 70% complete for DR1046-SAH_1_val_1.fq.gz
Approx 75% complete for DR1046-SAH_1_val_1.fq.gz
Approx 80% complete for DR1046-SAH_1_val_1.fq.gz
Approx 85% complete for DR1046-SAH_1_val_1.fq.gz
Approx 90% complete for DR1046-SAH_1_val_1.fq.gz
Approx 95% complete for DR1046-SAH_1_val_1.fq.gz
Analysis complete for DR1046-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1046-SAH_2_val_2.fq.gz<<<

Started analysis of DR1046-SAH_2_val_2.fq.gz
Approx 5% complete for DR1046-SAH_2_val_2.fq.gz
Approx 10% complete for DR1046-SAH_2_val_2.fq.gz
Approx 15% complete for DR1046-SAH_2_val_2.fq.gz
Approx 20% complete for DR1046-SAH_2_val_2.fq.gz
Approx 25% complete for DR1046-SAH_2_val_2.fq.gz
Approx 30% complete for DR1046-SAH_2_val_2.fq.gz
Approx 35% complete for DR1046-SAH_2_val_2.fq.gz
Approx 40% complete for DR1046-SAH_2_val_2.fq.gz
Approx 45% complete for DR1046-SAH_2_val_2.fq.gz
Approx 50% complete for DR1046-SAH_2_val_2.fq.gz
Approx 55% complete for DR1046-SAH_2_val_2.fq.gz
Approx 60% complete for DR1046-SAH_2_val_2.fq.gz
Approx 65% complete for DR1046-SAH_2_val_2.fq.gz
Approx 70% complete for DR1046-SAH_2_val_2.fq.gz
Approx 75% complete for DR1046-SAH_2_val_2.fq.gz
Approx 80% complete for DR1046-SAH_2_val_2.fq.gz
Approx 85% complete for DR1046-SAH_2_val_2.fq.gz
Approx 90% complete for DR1046-SAH_2_val_2.fq.gz
Approx 95% complete for DR1046-SAH_2_val_2.fq.gz
Analysis complete for DR1046-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1046-SAH_1_trimmed.fq.gz and DR1046-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1047-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1047-E_1.fastq.gz data/DR1047-E_2.fastq.gz -o results/02.trimgalore/DR1047-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1047-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1047-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1047-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	10	CTGTCTCTTATA	84114	0.01
smallRNA	1	TGGAATTCTCGG	84114	0.00
Illumina	0	AGATCGGAAGAGC	84114	0.00
Using Nextera adapter for trimming (count: 10). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1047-E_trimgalore/DR1047-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1047-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1047-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1047-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1047-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.381 s (4.534 µs/read; 13.23 M reads/minute).

=== Summary ===

Total reads processed:                  84,114
Reads with adapters:                     5,336 (6.3%)
Reads written (passing filters):        84,114 (100.0%)

Total basepairs processed:    25,318,314 bp
Quality-trimmed:                  87,243 bp (0.3%)
Total written (filtered):     25,220,340 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 5336 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 40.6%
  C: 9.5%
  G: 28.9%
  T: 21.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	2777	21028.5	0	2777
2	1241	5257.1	0	1241
3	1199	1314.3	0	1199
4	94	328.6	0	94
5	5	82.1	0	5
6	5	20.5	0	5
7	1	5.1	0	1
24	1	0.0	1	0 1
36	1	0.0	1	0 1
79	1	0.0	1	1
84	1	0.0	1	1
85	1	0.0	1	1
86	1	0.0	1	1
92	1	0.0	1	0 1
97	2	0.0	1	2
105	1	0.0	1	1
113	1	0.0	1	0 1
116	1	0.0	1	1
187	1	0.0	1	1
236	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1047-E_1.fastq.gz
=============================================
84114 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1047-E_trimgalore/DR1047-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1047-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1047-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1047-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1047-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.463 s (5.510 µs/read; 10.89 M reads/minute).

=== Summary ===

Total reads processed:                  84,114
Reads with adapters:                    69,136 (82.2%)
Reads written (passing filters):        84,114 (100.0%)

Total basepairs processed:    25,318,314 bp
Quality-trimmed:                 700,693 bp (2.8%)
Total written (filtered):     24,544,629 bp (96.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 69136 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 4.0%
  C: 80.5%
  G: 13.1%
  T: 2.4%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	67021	21028.5	0	67021
2	1553	5257.1	0	1553
3	502	1314.3	0	502
4	29	328.6	0	29
5	14	82.1	0	14
6	4	20.5	0	4
10	1	0.1	1	0 1
43	1	0.0	1	1
45	1	0.0	1	1
75	1	0.0	1	1
82	1	0.0	1	1
84	2	0.0	1	2
85	1	0.0	1	0 1
86	1	0.0	1	1
108	1	0.0	1	1
124	1	0.0	1	1
158	1	0.0	1	1
165	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1047-E_2.fastq.gz
=============================================
84114 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1047-E_1_trimmed.fq.gz and DR1047-E_2_trimmed.fq.gz
file_1: DR1047-E_1_trimmed.fq.gz, file_2: DR1047-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1047-E_1_trimmed.fq.gz and DR1047-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1047-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1047-E_2_val_2.fq.gz

Total number of sequences analysed: 84114

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4031 (4.79%)


  >>> Now running FastQC on the validated data DR1047-E_1_val_1.fq.gz<<<

Started analysis of DR1047-E_1_val_1.fq.gz
Approx 5% complete for DR1047-E_1_val_1.fq.gz
Approx 10% complete for DR1047-E_1_val_1.fq.gz
Approx 15% complete for DR1047-E_1_val_1.fq.gz
Approx 20% complete for DR1047-E_1_val_1.fq.gz
Approx 25% complete for DR1047-E_1_val_1.fq.gz
Approx 30% complete for DR1047-E_1_val_1.fq.gz
Approx 35% complete for DR1047-E_1_val_1.fq.gz
Approx 40% complete for DR1047-E_1_val_1.fq.gz
Approx 45% complete for DR1047-E_1_val_1.fq.gz
Approx 50% complete for DR1047-E_1_val_1.fq.gz
Approx 55% complete for DR1047-E_1_val_1.fq.gz
Approx 60% complete for DR1047-E_1_val_1.fq.gz
Approx 65% complete for DR1047-E_1_val_1.fq.gz
Approx 70% complete for DR1047-E_1_val_1.fq.gz
Approx 75% complete for DR1047-E_1_val_1.fq.gz
Approx 80% complete for DR1047-E_1_val_1.fq.gz
Approx 85% complete for DR1047-E_1_val_1.fq.gz
Approx 90% complete for DR1047-E_1_val_1.fq.gz
Approx 95% complete for DR1047-E_1_val_1.fq.gz
Analysis complete for DR1047-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1047-E_2_val_2.fq.gz<<<

Started analysis of DR1047-E_2_val_2.fq.gz
Approx 5% complete for DR1047-E_2_val_2.fq.gz
Approx 10% complete for DR1047-E_2_val_2.fq.gz
Approx 15% complete for DR1047-E_2_val_2.fq.gz
Approx 20% complete for DR1047-E_2_val_2.fq.gz
Approx 25% complete for DR1047-E_2_val_2.fq.gz
Approx 30% complete for DR1047-E_2_val_2.fq.gz
Approx 35% complete for DR1047-E_2_val_2.fq.gz
Approx 40% complete for DR1047-E_2_val_2.fq.gz
Approx 45% complete for DR1047-E_2_val_2.fq.gz
Approx 50% complete for DR1047-E_2_val_2.fq.gz
Approx 55% complete for DR1047-E_2_val_2.fq.gz
Approx 60% complete for DR1047-E_2_val_2.fq.gz
Approx 65% complete for DR1047-E_2_val_2.fq.gz
Approx 70% complete for DR1047-E_2_val_2.fq.gz
Approx 75% complete for DR1047-E_2_val_2.fq.gz
Approx 80% complete for DR1047-E_2_val_2.fq.gz
Approx 85% complete for DR1047-E_2_val_2.fq.gz
Approx 90% complete for DR1047-E_2_val_2.fq.gz
Approx 95% complete for DR1047-E_2_val_2.fq.gz
Analysis complete for DR1047-E_2_val_2.fq.gz
Deleting both intermediate output files DR1047-E_1_trimmed.fq.gz and DR1047-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1047-H sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1047-H_1.fastq.gz data/DR1047-H_2.fastq.gz -o results/02.trimgalore/DR1047-H_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1047-H_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1047-H_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1047-H_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	5	CTGTCTCTTATA	82597	0.01
Illumina	0	AGATCGGAAGAGC	82597	0.00
smallRNA	0	TGGAATTCTCGG	82597	0.00
Using Nextera adapter for trimming (count: 5). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1047-H_trimgalore/DR1047-H_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1047-H_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1047-H_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1047-H_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1047-H_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.388 s (4.697 µs/read; 12.77 M reads/minute).

=== Summary ===

Total reads processed:                  82,597
Reads with adapters:                     5,594 (6.8%)
Reads written (passing filters):        82,597 (100.0%)

Total basepairs processed:    24,861,697 bp
Quality-trimmed:                  76,938 bp (0.3%)
Total written (filtered):     24,773,838 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 5594 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 45.6%
  C: 9.9%
  G: 24.4%
  T: 20.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3173	20649.2	0	3173
2	1086	5162.3	0	1086
3	1222	1290.6	0	1222
4	84	322.6	0	84
5	15	80.7	0	15
6	4	20.2	0	4
7	1	5.0	0	1
20	1	0.0	1	0 1
28	1	0.0	1	0 1
35	1	0.0	1	0 1
36	1	0.0	1	0 1
196	1	0.0	1	1
287	2	0.0	1	2
288	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1047-H_1.fastq.gz
=============================================
82597 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1047-H_trimgalore/DR1047-H_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1047-H_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1047-H_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1047-H_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1047-H_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.476 s (5.758 µs/read; 10.42 M reads/minute).

=== Summary ===

Total reads processed:                  82,597
Reads with adapters:                    68,009 (82.3%)
Reads written (passing filters):        82,597 (100.0%)

Total basepairs processed:    24,861,697 bp
Quality-trimmed:                 691,086 bp (2.8%)
Total written (filtered):     24,098,825 bp (96.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 68009 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.8%
  C: 80.1%
  G: 13.9%
  T: 2.2%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	65945	20649.2	0	65945
2	1498	5162.3	0	1498
3	503	1290.6	0	503
4	30	322.6	0	30
5	17	80.7	0	17
6	7	20.2	0	7
7	1	5.0	0	1
9	1	0.3	0	0 1
87	1	0.0	1	1
91	1	0.0	1	1
120	1	0.0	1	1
145	1	0.0	1	1
166	1	0.0	1	0 1
176	1	0.0	1	1
288	1	0.0	1	0 1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1047-H_2.fastq.gz
=============================================
82597 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1047-H_1_trimmed.fq.gz and DR1047-H_2_trimmed.fq.gz
file_1: DR1047-H_1_trimmed.fq.gz, file_2: DR1047-H_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1047-H_1_trimmed.fq.gz and DR1047-H_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1047-H_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1047-H_2_val_2.fq.gz

Total number of sequences analysed: 82597

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 3979 (4.82%)


  >>> Now running FastQC on the validated data DR1047-H_1_val_1.fq.gz<<<

Started analysis of DR1047-H_1_val_1.fq.gz
Approx 5% complete for DR1047-H_1_val_1.fq.gz
Approx 10% complete for DR1047-H_1_val_1.fq.gz
Approx 15% complete for DR1047-H_1_val_1.fq.gz
Approx 20% complete for DR1047-H_1_val_1.fq.gz
Approx 25% complete for DR1047-H_1_val_1.fq.gz
Approx 30% complete for DR1047-H_1_val_1.fq.gz
Approx 35% complete for DR1047-H_1_val_1.fq.gz
Approx 40% complete for DR1047-H_1_val_1.fq.gz
Approx 45% complete for DR1047-H_1_val_1.fq.gz
Approx 50% complete for DR1047-H_1_val_1.fq.gz
Approx 55% complete for DR1047-H_1_val_1.fq.gz
Approx 60% complete for DR1047-H_1_val_1.fq.gz
Approx 65% complete for DR1047-H_1_val_1.fq.gz
Approx 70% complete for DR1047-H_1_val_1.fq.gz
Approx 75% complete for DR1047-H_1_val_1.fq.gz
Approx 80% complete for DR1047-H_1_val_1.fq.gz
Approx 85% complete for DR1047-H_1_val_1.fq.gz
Approx 90% complete for DR1047-H_1_val_1.fq.gz
Approx 95% complete for DR1047-H_1_val_1.fq.gz
Analysis complete for DR1047-H_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1047-H_2_val_2.fq.gz<<<

Started analysis of DR1047-H_2_val_2.fq.gz
Approx 5% complete for DR1047-H_2_val_2.fq.gz
Approx 10% complete for DR1047-H_2_val_2.fq.gz
Approx 15% complete for DR1047-H_2_val_2.fq.gz
Approx 20% complete for DR1047-H_2_val_2.fq.gz
Approx 25% complete for DR1047-H_2_val_2.fq.gz
Approx 30% complete for DR1047-H_2_val_2.fq.gz
Approx 35% complete for DR1047-H_2_val_2.fq.gz
Approx 40% complete for DR1047-H_2_val_2.fq.gz
Approx 45% complete for DR1047-H_2_val_2.fq.gz
Approx 50% complete for DR1047-H_2_val_2.fq.gz
Approx 55% complete for DR1047-H_2_val_2.fq.gz
Approx 60% complete for DR1047-H_2_val_2.fq.gz
Approx 65% complete for DR1047-H_2_val_2.fq.gz
Approx 70% complete for DR1047-H_2_val_2.fq.gz
Approx 75% complete for DR1047-H_2_val_2.fq.gz
Approx 80% complete for DR1047-H_2_val_2.fq.gz
Approx 85% complete for DR1047-H_2_val_2.fq.gz
Approx 90% complete for DR1047-H_2_val_2.fq.gz
Approx 95% complete for DR1047-H_2_val_2.fq.gz
Analysis complete for DR1047-H_2_val_2.fq.gz
Deleting both intermediate output files DR1047-H_1_trimmed.fq.gz and DR1047-H_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1047-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1047-SAH_1.fastq.gz data/DR1047-SAH_2.fastq.gz -o results/02.trimgalore/DR1047-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1047-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1047-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1047-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	65	CTGTCTCTTATA	88928	0.07
smallRNA	0	TGGAATTCTCGG	88928	0.00
Illumina	0	AGATCGGAAGAGC	88928	0.00
Using Nextera adapter for trimming (count: 65). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1047-SAH_trimgalore/DR1047-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1047-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1047-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1047-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1047-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.416 s (4.677 µs/read; 12.83 M reads/minute).

=== Summary ===

Total reads processed:                  88,928
Reads with adapters:                     6,971 (7.8%)
Reads written (passing filters):        88,928 (100.0%)

Total basepairs processed:    26,767,328 bp
Quality-trimmed:                  92,657 bp (0.3%)
Total written (filtered):     26,646,700 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 6971 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 42.5%
  C: 9.5%
  G: 30.5%
  T: 17.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3687	22232.0	0	3687
2	1180	5558.0	0	1180
3	1810	1389.5	0	1810
4	206	347.4	0	206
5	4	86.8	0	4
7	1	5.4	0	1
9	1	0.3	0	1
36	1	0.0	1	0 1
73	2	0.0	1	2
78	1	0.0	1	0 1
79	1	0.0	1	0 1
80	1	0.0	1	1
81	1	0.0	1	1
82	2	0.0	1	2
83	2	0.0	1	2
84	1	0.0	1	0 1
85	1	0.0	1	1
87	1	0.0	1	1
95	1	0.0	1	1
96	1	0.0	1	1
97	1	0.0	1	1
108	1	0.0	1	1
112	1	0.0	1	1
129	1	0.0	1	1
130	1	0.0	1	1
133	1	0.0	1	1
137	1	0.0	1	1
140	1	0.0	1	1
142	1	0.0	1	1
148	1	0.0	1	1
150	2	0.0	1	2
153	1	0.0	1	1
158	1	0.0	1	0 1
163	1	0.0	1	1
164	2	0.0	1	2
167	1	0.0	1	0 1
168	1	0.0	1	1
188	2	0.0	1	2
191	1	0.0	1	0 1
193	1	0.0	1	1
206	1	0.0	1	1
209	1	0.0	1	1
210	1	0.0	1	1
212	1	0.0	1	1
213	2	0.0	1	1 1
216	1	0.0	1	1
217	1	0.0	1	1
218	1	0.0	1	1
220	1	0.0	1	1
221	1	0.0	1	0 1
225	1	0.0	1	0 1
231	1	0.0	1	1
236	2	0.0	1	2
238	1	0.0	1	1
239	1	0.0	1	1
245	1	0.0	1	1
247	1	0.0	1	1
249	1	0.0	1	1
251	1	0.0	1	1
254	1	0.0	1	0 1
260	1	0.0	1	1
261	1	0.0	1	1
264	1	0.0	1	0 1
266	1	0.0	1	1
272	1	0.0	1	1
273	2	0.0	1	2
278	1	0.0	1	0 1
279	1	0.0	1	1
282	1	0.0	1	1
283	1	0.0	1	1
285	1	0.0	1	0 1
287	1	0.0	1	0 1
288	4	0.0	1	4
289	1	0.0	1	0 1
291	2	0.0	1	2
292	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: data/DR1047-SAH_1.fastq.gz
=============================================
88928 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1047-SAH_trimgalore/DR1047-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1047-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1047-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1047-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1047-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.515 s (5.786 µs/read; 10.37 M reads/minute).

=== Summary ===

Total reads processed:                  88,928
Reads with adapters:                    73,152 (82.3%)
Reads written (passing filters):        88,928 (100.0%)

Total basepairs processed:    26,767,328 bp
Quality-trimmed:                 764,374 bp (2.9%)
Total written (filtered):     25,915,651 bp (96.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 73152 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.9%
  C: 79.8%
  G: 14.0%
  T: 2.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	70761	22232.0	0	70761
2	1699	5558.0	0	1699
3	553	1389.5	0	553
4	39	347.4	0	39
5	13	86.8	0	13
6	7	21.7	0	7
8	1	1.4	0	1
37	1	0.0	1	1
43	1	0.0	1	1
52	1	0.0	1	0 1
70	1	0.0	1	0 1
81	2	0.0	1	2
82	5	0.0	1	5
83	3	0.0	1	3
84	2	0.0	1	2
85	4	0.0	1	4
86	3	0.0	1	2 1
89	1	0.0	1	1
90	2	0.0	1	2
93	1	0.0	1	1
95	1	0.0	1	1
96	1	0.0	1	1
101	2	0.0	1	2
113	1	0.0	1	1
115	1	0.0	1	1
121	1	0.0	1	1
122	1	0.0	1	1
123	2	0.0	1	2
125	1	0.0	1	1
129	2	0.0	1	2
130	1	0.0	1	1
131	1	0.0	1	1
135	1	0.0	1	1
140	1	0.0	1	1
143	1	0.0	1	1
148	1	0.0	1	0 1
157	3	0.0	1	2 1
159	2	0.0	1	2
161	1	0.0	1	1
164	1	0.0	1	1
166	1	0.0	1	0 1
171	1	0.0	1	1
174	1	0.0	1	1
176	1	0.0	1	1
177	1	0.0	1	1
181	1	0.0	1	1
183	1	0.0	1	1
187	1	0.0	1	1
191	1	0.0	1	1
195	1	0.0	1	1
202	1	0.0	1	1
203	1	0.0	1	1
204	1	0.0	1	1
209	1	0.0	1	1
212	1	0.0	1	0 1
213	1	0.0	1	1
215	1	0.0	1	1
226	1	0.0	1	1
232	1	0.0	1	1
243	1	0.0	1	0 1
258	1	0.0	1	1
263	1	0.0	1	1
281	1	0.0	1	1
287	1	0.0	1	0 1
290	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/DR1047-SAH_2.fastq.gz
=============================================
88928 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1047-SAH_1_trimmed.fq.gz and DR1047-SAH_2_trimmed.fq.gz
file_1: DR1047-SAH_1_trimmed.fq.gz, file_2: DR1047-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1047-SAH_1_trimmed.fq.gz and DR1047-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1047-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1047-SAH_2_val_2.fq.gz

Total number of sequences analysed: 88928

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4294 (4.83%)


  >>> Now running FastQC on the validated data DR1047-SAH_1_val_1.fq.gz<<<

Started analysis of DR1047-SAH_1_val_1.fq.gz
Approx 5% complete for DR1047-SAH_1_val_1.fq.gz
Approx 10% complete for DR1047-SAH_1_val_1.fq.gz
Approx 15% complete for DR1047-SAH_1_val_1.fq.gz
Approx 20% complete for DR1047-SAH_1_val_1.fq.gz
Approx 25% complete for DR1047-SAH_1_val_1.fq.gz
Approx 30% complete for DR1047-SAH_1_val_1.fq.gz
Approx 35% complete for DR1047-SAH_1_val_1.fq.gz
Approx 40% complete for DR1047-SAH_1_val_1.fq.gz
Approx 45% complete for DR1047-SAH_1_val_1.fq.gz
Approx 50% complete for DR1047-SAH_1_val_1.fq.gz
Approx 55% complete for DR1047-SAH_1_val_1.fq.gz
Approx 60% complete for DR1047-SAH_1_val_1.fq.gz
Approx 65% complete for DR1047-SAH_1_val_1.fq.gz
Approx 70% complete for DR1047-SAH_1_val_1.fq.gz
Approx 75% complete for DR1047-SAH_1_val_1.fq.gz
Approx 80% complete for DR1047-SAH_1_val_1.fq.gz
Approx 85% complete for DR1047-SAH_1_val_1.fq.gz
Approx 90% complete for DR1047-SAH_1_val_1.fq.gz
Approx 95% complete for DR1047-SAH_1_val_1.fq.gz
Analysis complete for DR1047-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1047-SAH_2_val_2.fq.gz<<<

Started analysis of DR1047-SAH_2_val_2.fq.gz
Approx 5% complete for DR1047-SAH_2_val_2.fq.gz
Approx 10% complete for DR1047-SAH_2_val_2.fq.gz
Approx 15% complete for DR1047-SAH_2_val_2.fq.gz
Approx 20% complete for DR1047-SAH_2_val_2.fq.gz
Approx 25% complete for DR1047-SAH_2_val_2.fq.gz
Approx 30% complete for DR1047-SAH_2_val_2.fq.gz
Approx 35% complete for DR1047-SAH_2_val_2.fq.gz
Approx 40% complete for DR1047-SAH_2_val_2.fq.gz
Approx 45% complete for DR1047-SAH_2_val_2.fq.gz
Approx 50% complete for DR1047-SAH_2_val_2.fq.gz
Approx 55% complete for DR1047-SAH_2_val_2.fq.gz
Approx 60% complete for DR1047-SAH_2_val_2.fq.gz
Approx 65% complete for DR1047-SAH_2_val_2.fq.gz
Approx 70% complete for DR1047-SAH_2_val_2.fq.gz
Approx 75% complete for DR1047-SAH_2_val_2.fq.gz
Approx 80% complete for DR1047-SAH_2_val_2.fq.gz
Approx 85% complete for DR1047-SAH_2_val_2.fq.gz
Approx 90% complete for DR1047-SAH_2_val_2.fq.gz
Approx 95% complete for DR1047-SAH_2_val_2.fq.gz
Analysis complete for DR1047-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1047-SAH_1_trimmed.fq.gz and DR1047-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1048-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1048-E_1.fastq.gz data/DR1048-E_2.fastq.gz -o results/02.trimgalore/DR1048-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1048-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1048-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1048-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	15	CTGTCTCTTATA	91446	0.02
smallRNA	1	TGGAATTCTCGG	91446	0.00
Illumina	0	AGATCGGAAGAGC	91446	0.00
Using Nextera adapter for trimming (count: 15). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1048-E_trimgalore/DR1048-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1048-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1048-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1048-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1048-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.400 s (4.369 µs/read; 13.73 M reads/minute).

=== Summary ===

Total reads processed:                  91,446
Reads with adapters:                     1,484 (1.6%)
Reads written (passing filters):        91,446 (100.0%)

Total basepairs processed:    27,525,246 bp
Quality-trimmed:                  61,993 bp (0.2%)
Total written (filtered):     27,457,879 bp (99.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 1484 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 42.4%
  C: 16.1%
  G: 28.7%
  T: 12.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	832	22861.5	0	832
2	327	5715.4	0	327
3	268	1428.8	0	268
4	28	357.2	0	28
5	6	89.3	0	6
6	4	22.3	0	4
78	1	0.0	1	1
81	2	0.0	1	2
85	1	0.0	1	1
101	1	0.0	1	1
102	1	0.0	1	0 1
103	1	0.0	1	1
113	1	0.0	1	0 1
119	1	0.0	1	1
160	1	0.0	1	1
162	1	0.0	1	1
167	1	0.0	1	1
179	1	0.0	1	1
182	1	0.0	1	0 1
199	1	0.0	1	1
213	1	0.0	1	1
223	1	0.0	1	0 1
280	1	0.0	1	1
290	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1048-E_1.fastq.gz
=============================================
91446 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1048-E_trimgalore/DR1048-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1048-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1048-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1048-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1048-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.452 s (4.941 µs/read; 12.14 M reads/minute).

=== Summary ===

Total reads processed:                  91,446
Reads with adapters:                    75,688 (82.8%)
Reads written (passing filters):        91,446 (100.0%)

Total basepairs processed:    27,525,246 bp
Quality-trimmed:                 695,097 bp (2.5%)
Total written (filtered):     26,749,382 bp (97.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 75688 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.6%
  C: 82.6%
  G: 11.4%
  T: 2.4%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	73647	22861.5	0	73647
2	1508	5715.4	0	1508
3	463	1428.8	0	463
4	22	357.2	0	22
5	23	89.3	0	23
6	3	22.3	0	3
10	1	0.1	1	0 1
11	1	0.0	1	0 1
17	1	0.0	1	0 1
42	1	0.0	1	0 1
49	1	0.0	1	1
57	1	0.0	1	0 1
82	1	0.0	1	1
87	1	0.0	1	1
88	1	0.0	1	1
91	1	0.0	1	1
98	1	0.0	1	1
101	2	0.0	1	2
123	1	0.0	1	1
124	1	0.0	1	1
126	1	0.0	1	1
154	2	0.0	1	1 1
196	1	0.0	1	1
205	1	0.0	1	1
287	1	0.0	1	1
291	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1048-E_2.fastq.gz
=============================================
91446 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1048-E_1_trimmed.fq.gz and DR1048-E_2_trimmed.fq.gz
file_1: DR1048-E_1_trimmed.fq.gz, file_2: DR1048-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1048-E_1_trimmed.fq.gz and DR1048-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1048-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1048-E_2_val_2.fq.gz

Total number of sequences analysed: 91446

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4036 (4.41%)


  >>> Now running FastQC on the validated data DR1048-E_1_val_1.fq.gz<<<

Started analysis of DR1048-E_1_val_1.fq.gz
Approx 5% complete for DR1048-E_1_val_1.fq.gz
Approx 10% complete for DR1048-E_1_val_1.fq.gz
Approx 15% complete for DR1048-E_1_val_1.fq.gz
Approx 20% complete for DR1048-E_1_val_1.fq.gz
Approx 25% complete for DR1048-E_1_val_1.fq.gz
Approx 30% complete for DR1048-E_1_val_1.fq.gz
Approx 35% complete for DR1048-E_1_val_1.fq.gz
Approx 40% complete for DR1048-E_1_val_1.fq.gz
Approx 45% complete for DR1048-E_1_val_1.fq.gz
Approx 50% complete for DR1048-E_1_val_1.fq.gz
Approx 55% complete for DR1048-E_1_val_1.fq.gz
Approx 60% complete for DR1048-E_1_val_1.fq.gz
Approx 65% complete for DR1048-E_1_val_1.fq.gz
Approx 70% complete for DR1048-E_1_val_1.fq.gz
Approx 75% complete for DR1048-E_1_val_1.fq.gz
Approx 80% complete for DR1048-E_1_val_1.fq.gz
Approx 85% complete for DR1048-E_1_val_1.fq.gz
Approx 90% complete for DR1048-E_1_val_1.fq.gz
Approx 95% complete for DR1048-E_1_val_1.fq.gz
Analysis complete for DR1048-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1048-E_2_val_2.fq.gz<<<

Started analysis of DR1048-E_2_val_2.fq.gz
Approx 5% complete for DR1048-E_2_val_2.fq.gz
Approx 10% complete for DR1048-E_2_val_2.fq.gz
Approx 15% complete for DR1048-E_2_val_2.fq.gz
Approx 20% complete for DR1048-E_2_val_2.fq.gz
Approx 25% complete for DR1048-E_2_val_2.fq.gz
Approx 30% complete for DR1048-E_2_val_2.fq.gz
Approx 35% complete for DR1048-E_2_val_2.fq.gz
Approx 40% complete for DR1048-E_2_val_2.fq.gz
Approx 45% complete for DR1048-E_2_val_2.fq.gz
Approx 50% complete for DR1048-E_2_val_2.fq.gz
Approx 55% complete for DR1048-E_2_val_2.fq.gz
Approx 60% complete for DR1048-E_2_val_2.fq.gz
Approx 65% complete for DR1048-E_2_val_2.fq.gz
Approx 70% complete for DR1048-E_2_val_2.fq.gz
Approx 75% complete for DR1048-E_2_val_2.fq.gz
Approx 80% complete for DR1048-E_2_val_2.fq.gz
Approx 85% complete for DR1048-E_2_val_2.fq.gz
Approx 90% complete for DR1048-E_2_val_2.fq.gz
Approx 95% complete for DR1048-E_2_val_2.fq.gz
Analysis complete for DR1048-E_2_val_2.fq.gz
Deleting both intermediate output files DR1048-E_1_trimmed.fq.gz and DR1048-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1048-H sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1048-H_1.fastq.gz data/DR1048-H_2.fastq.gz -o results/02.trimgalore/DR1048-H_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1048-H_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1048-H_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1048-H_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	7	CTGTCTCTTATA	85157	0.01
Illumina	0	AGATCGGAAGAGC	85157	0.00
smallRNA	0	TGGAATTCTCGG	85157	0.00
Using Nextera adapter for trimming (count: 7). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1048-H_trimgalore/DR1048-H_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1048-H_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1048-H_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1048-H_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1048-H_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.394 s (4.628 µs/read; 12.97 M reads/minute).

=== Summary ===

Total reads processed:                  85,157
Reads with adapters:                     5,572 (6.5%)
Reads written (passing filters):        85,157 (100.0%)

Total basepairs processed:    25,632,257 bp
Quality-trimmed:                  75,766 bp (0.3%)
Total written (filtered):     25,543,484 bp (99.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 5572 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 68.1%
  C: 6.6%
  G: 16.9%
  T: 8.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	1689	21289.2	0	1689
2	1253	5322.3	0	1253
3	2485	1330.6	0	2485
4	125	332.6	0	125
5	2	83.2	0	2
6	9	20.8	0	9
68	2	0.0	1	2
77	1	0.0	1	0 1
78	2	0.0	1	2
79	2	0.0	1	1 1
85	1	0.0	1	1
181	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1048-H_1.fastq.gz
=============================================
85157 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1048-H_trimgalore/DR1048-H_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1048-H_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1048-H_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1048-H_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1048-H_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.463 s (5.436 µs/read; 11.04 M reads/minute).

=== Summary ===

Total reads processed:                  85,157
Reads with adapters:                    71,685 (84.2%)
Reads written (passing filters):        85,157 (100.0%)

Total basepairs processed:    25,632,257 bp
Quality-trimmed:                 533,261 bp (2.1%)
Total written (filtered):     25,024,511 bp (97.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 71685 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.1%
  C: 84.1%
  G: 10.9%
  T: 2.0%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	69967	21289.2	0	69967
2	1254	5322.3	0	1254
3	412	1330.6	0	412
4	29	332.6	0	29
5	9	83.2	0	9
6	3	20.8	0	3
10	1	0.1	1	0 1
22	1	0.0	1	1
36	2	0.0	1	1 1
44	1	0.0	1	1
58	2	0.0	1	2
76	1	0.0	1	0 1
77	1	0.0	1	1
82	1	0.0	1	1
96	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1048-H_2.fastq.gz
=============================================
85157 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1048-H_1_trimmed.fq.gz and DR1048-H_2_trimmed.fq.gz
file_1: DR1048-H_1_trimmed.fq.gz, file_2: DR1048-H_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1048-H_1_trimmed.fq.gz and DR1048-H_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1048-H_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1048-H_2_val_2.fq.gz

Total number of sequences analysed: 85157

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 2786 (3.27%)


  >>> Now running FastQC on the validated data DR1048-H_1_val_1.fq.gz<<<

Started analysis of DR1048-H_1_val_1.fq.gz
Approx 5% complete for DR1048-H_1_val_1.fq.gz
Approx 10% complete for DR1048-H_1_val_1.fq.gz
Approx 15% complete for DR1048-H_1_val_1.fq.gz
Approx 20% complete for DR1048-H_1_val_1.fq.gz
Approx 25% complete for DR1048-H_1_val_1.fq.gz
Approx 30% complete for DR1048-H_1_val_1.fq.gz
Approx 35% complete for DR1048-H_1_val_1.fq.gz
Approx 40% complete for DR1048-H_1_val_1.fq.gz
Approx 45% complete for DR1048-H_1_val_1.fq.gz
Approx 50% complete for DR1048-H_1_val_1.fq.gz
Approx 55% complete for DR1048-H_1_val_1.fq.gz
Approx 60% complete for DR1048-H_1_val_1.fq.gz
Approx 65% complete for DR1048-H_1_val_1.fq.gz
Approx 70% complete for DR1048-H_1_val_1.fq.gz
Approx 75% complete for DR1048-H_1_val_1.fq.gz
Approx 80% complete for DR1048-H_1_val_1.fq.gz
Approx 85% complete for DR1048-H_1_val_1.fq.gz
Approx 90% complete for DR1048-H_1_val_1.fq.gz
Approx 95% complete for DR1048-H_1_val_1.fq.gz
Analysis complete for DR1048-H_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1048-H_2_val_2.fq.gz<<<

Started analysis of DR1048-H_2_val_2.fq.gz
Approx 5% complete for DR1048-H_2_val_2.fq.gz
Approx 10% complete for DR1048-H_2_val_2.fq.gz
Approx 15% complete for DR1048-H_2_val_2.fq.gz
Approx 20% complete for DR1048-H_2_val_2.fq.gz
Approx 25% complete for DR1048-H_2_val_2.fq.gz
Approx 30% complete for DR1048-H_2_val_2.fq.gz
Approx 35% complete for DR1048-H_2_val_2.fq.gz
Approx 40% complete for DR1048-H_2_val_2.fq.gz
Approx 45% complete for DR1048-H_2_val_2.fq.gz
Approx 50% complete for DR1048-H_2_val_2.fq.gz
Approx 55% complete for DR1048-H_2_val_2.fq.gz
Approx 60% complete for DR1048-H_2_val_2.fq.gz
Approx 65% complete for DR1048-H_2_val_2.fq.gz
Approx 70% complete for DR1048-H_2_val_2.fq.gz
Approx 75% complete for DR1048-H_2_val_2.fq.gz
Approx 80% complete for DR1048-H_2_val_2.fq.gz
Approx 85% complete for DR1048-H_2_val_2.fq.gz
Approx 90% complete for DR1048-H_2_val_2.fq.gz
Approx 95% complete for DR1048-H_2_val_2.fq.gz
Analysis complete for DR1048-H_2_val_2.fq.gz
Deleting both intermediate output files DR1048-H_1_trimmed.fq.gz and DR1048-H_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1048-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1048-SAH_1.fastq.gz data/DR1048-SAH_2.fastq.gz -o results/02.trimgalore/DR1048-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1048-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1048-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1048-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	186	CTGTCTCTTATA	106159	0.18
Illumina	0	AGATCGGAAGAGC	106159	0.00
smallRNA	0	TGGAATTCTCGG	106159	0.00
Using Nextera adapter for trimming (count: 186). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1048-SAH_trimgalore/DR1048-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1048-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1048-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1048-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1048-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.466 s (4.390 µs/read; 13.67 M reads/minute).

=== Summary ===

Total reads processed:                 106,159
Reads with adapters:                     6,772 (6.4%)
Reads written (passing filters):       106,159 (100.0%)

Total basepairs processed:    31,953,859 bp
Quality-trimmed:                 117,677 bp (0.4%)
Total written (filtered):     31,790,000 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 6772 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 30.5%
  C: 12.6%
  G: 41.4%
  T: 15.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3199	26539.8	0	3199
2	1949	6634.9	0	1949
3	1266	1658.7	0	1266
4	121	414.7	0	121
5	11	103.7	0	11
6	9	25.9	0	9
10	1	0.1	1	0 1
12	3	0.0	1	3
26	3	0.0	1	3
29	1	0.0	1	1
30	2	0.0	1	2
47	1	0.0	1	0 1
77	3	0.0	1	3
78	9	0.0	1	9
80	7	0.0	1	6 1
81	3	0.0	1	2 1
82	5	0.0	1	5
83	3	0.0	1	2 1
84	2	0.0	1	2
85	3	0.0	1	3
87	3	0.0	1	2 1
88	2	0.0	1	2
89	3	0.0	1	2 1
90	2	0.0	1	2
92	4	0.0	1	4
93	4	0.0	1	2 2
94	1	0.0	1	1
95	2	0.0	1	1 1
96	3	0.0	1	3
97	2	0.0	1	1 1
99	1	0.0	1	1
100	4	0.0	1	4
102	1	0.0	1	1
103	2	0.0	1	2
104	1	0.0	1	0 1
105	1	0.0	1	0 1
106	1	0.0	1	1
107	1	0.0	1	1
108	1	0.0	1	1
109	1	0.0	1	1
110	1	0.0	1	1
111	3	0.0	1	2 1
112	1	0.0	1	1
113	3	0.0	1	3
115	3	0.0	1	3
118	1	0.0	1	1
120	2	0.0	1	2
125	1	0.0	1	0 1
126	1	0.0	1	0 1
128	1	0.0	1	1
129	2	0.0	1	2
133	2	0.0	1	1 1
136	2	0.0	1	2
137	1	0.0	1	1
139	2	0.0	1	2
140	1	0.0	1	1
143	1	0.0	1	1
144	2	0.0	1	2
145	2	0.0	1	2
146	1	0.0	1	1
148	1	0.0	1	1
149	2	0.0	1	2
150	1	0.0	1	1
154	1	0.0	1	0 1
155	1	0.0	1	1
156	1	0.0	1	1
158	2	0.0	1	1 1
163	1	0.0	1	1
164	2	0.0	1	2
168	2	0.0	1	2
169	1	0.0	1	1
171	1	0.0	1	1
173	1	0.0	1	1
175	4	0.0	1	3 1
177	1	0.0	1	1
181	2	0.0	1	2
184	1	0.0	1	1
194	1	0.0	1	1
199	1	0.0	1	1
201	1	0.0	1	0 1
203	1	0.0	1	1
206	1	0.0	1	0 1
214	1	0.0	1	1
215	1	0.0	1	1
217	1	0.0	1	1
218	3	0.0	1	3
224	1	0.0	1	1
229	2	0.0	1	2
235	1	0.0	1	1
237	2	0.0	1	2
241	1	0.0	1	1
242	1	0.0	1	1
247	1	0.0	1	1
259	1	0.0	1	1
260	2	0.0	1	2
263	2	0.0	1	2
264	1	0.0	1	1
268	1	0.0	1	1
271	2	0.0	1	2
274	1	0.0	1	1
276	1	0.0	1	0 1
277	2	0.0	1	2
281	2	0.0	1	1 1
282	1	0.0	1	1
283	1	0.0	1	0 1
284	1	0.0	1	1
285	2	0.0	1	2
286	2	0.0	1	2
287	3	0.0	1	1 2
288	4	0.0	1	4
289	3	0.0	1	1 2
290	5	0.0	1	4 1
291	16	0.0	1	15 1

RUN STATISTICS FOR INPUT FILE: data/DR1048-SAH_1.fastq.gz
=============================================
106159 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1048-SAH_trimgalore/DR1048-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1048-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1048-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1048-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1048-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.541 s (5.095 µs/read; 11.78 M reads/minute).

=== Summary ===

Total reads processed:                 106,159
Reads with adapters:                    88,191 (83.1%)
Reads written (passing filters):       106,159 (100.0%)

Total basepairs processed:    31,953,859 bp
Quality-trimmed:                 870,219 bp (2.7%)
Total written (filtered):     30,964,568 bp (96.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 88191 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.8%
  C: 80.9%
  G: 13.0%
  T: 2.3%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	85332	26539.8	0	85332
2	1946	6634.9	0	1946
3	619	1658.7	0	619
4	55	414.7	0	55
5	14	103.7	0	14
6	11	25.9	0	11
7	1	6.5	0	1
10	1	0.1	1	0 1
11	2	0.0	1	1 1
22	1	0.0	1	1
24	1	0.0	1	0 1
25	1	0.0	1	0 1
34	1	0.0	1	0 1
35	1	0.0	1	1
36	1	0.0	1	1
37	1	0.0	1	1
38	1	0.0	1	0 1
41	1	0.0	1	0 1
44	1	0.0	1	1
45	1	0.0	1	1
49	1	0.0	1	1
52	1	0.0	1	1
73	1	0.0	1	1
76	1	0.0	1	1
77	1	0.0	1	1
79	1	0.0	1	1
80	3	0.0	1	1 2
81	2	0.0	1	2
82	13	0.0	1	13
83	6	0.0	1	6
84	5	0.0	1	2 3
85	7	0.0	1	7
86	4	0.0	1	4
87	3	0.0	1	3
88	4	0.0	1	3 1
89	3	0.0	1	2 1
90	2	0.0	1	2
91	5	0.0	1	5
92	2	0.0	1	2
93	2	0.0	1	2
94	3	0.0	1	3
95	2	0.0	1	2
96	3	0.0	1	3
98	2	0.0	1	1 1
100	2	0.0	1	2
101	1	0.0	1	1
102	2	0.0	1	2
103	2	0.0	1	1 1
104	2	0.0	1	2
105	2	0.0	1	2
106	2	0.0	1	2
107	2	0.0	1	2
108	1	0.0	1	1
109	2	0.0	1	2
110	1	0.0	1	0 1
111	1	0.0	1	1
113	1	0.0	1	1
114	1	0.0	1	1
116	2	0.0	1	2
117	1	0.0	1	1
118	3	0.0	1	2 1
120	1	0.0	1	1
121	1	0.0	1	1
123	2	0.0	1	2
125	1	0.0	1	1
127	1	0.0	1	1
128	1	0.0	1	1
130	2	0.0	1	2
133	1	0.0	1	1
135	1	0.0	1	1
138	1	0.0	1	1
139	2	0.0	1	2
140	1	0.0	1	1
141	1	0.0	1	1
142	1	0.0	1	1
143	1	0.0	1	1
144	1	0.0	1	1
146	3	0.0	1	3
150	2	0.0	1	2
151	3	0.0	1	3
152	1	0.0	1	1
157	1	0.0	1	0 1
158	2	0.0	1	2
159	1	0.0	1	1
161	2	0.0	1	2
165	1	0.0	1	1
167	2	0.0	1	2
170	1	0.0	1	1
171	1	0.0	1	1
172	1	0.0	1	1
174	2	0.0	1	2
175	3	0.0	1	3
176	2	0.0	1	1 1
183	1	0.0	1	1
184	1	0.0	1	1
185	1	0.0	1	1
187	1	0.0	1	1
188	2	0.0	1	1 1
189	2	0.0	1	2
192	3	0.0	1	3
194	1	0.0	1	1
195	1	0.0	1	1
196	1	0.0	1	1
202	1	0.0	1	1
203	2	0.0	1	2
204	2	0.0	1	2
205	1	0.0	1	1
206	2	0.0	1	2
207	1	0.0	1	1
209	2	0.0	1	1 1
212	1	0.0	1	1
213	1	0.0	1	1
215	2	0.0	1	1 1
218	1	0.0	1	1
221	1	0.0	1	1
222	1	0.0	1	1
225	1	0.0	1	1
240	1	0.0	1	1
241	1	0.0	1	1
264	1	0.0	1	1
272	1	0.0	1	1
280	1	0.0	1	0 1
286	1	0.0	1	1
288	1	0.0	1	1
289	1	0.0	1	1
290	3	0.0	1	3
291	3	0.0	1	2 1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1048-SAH_2.fastq.gz
=============================================
106159 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1048-SAH_1_trimmed.fq.gz and DR1048-SAH_2_trimmed.fq.gz
file_1: DR1048-SAH_1_trimmed.fq.gz, file_2: DR1048-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1048-SAH_1_trimmed.fq.gz and DR1048-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1048-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1048-SAH_2_val_2.fq.gz

Total number of sequences analysed: 106159

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4788 (4.51%)


  >>> Now running FastQC on the validated data DR1048-SAH_1_val_1.fq.gz<<<

Started analysis of DR1048-SAH_1_val_1.fq.gz
Approx 5% complete for DR1048-SAH_1_val_1.fq.gz
Approx 10% complete for DR1048-SAH_1_val_1.fq.gz
Approx 15% complete for DR1048-SAH_1_val_1.fq.gz
Approx 20% complete for DR1048-SAH_1_val_1.fq.gz
Approx 25% complete for DR1048-SAH_1_val_1.fq.gz
Approx 30% complete for DR1048-SAH_1_val_1.fq.gz
Approx 35% complete for DR1048-SAH_1_val_1.fq.gz
Approx 40% complete for DR1048-SAH_1_val_1.fq.gz
Approx 45% complete for DR1048-SAH_1_val_1.fq.gz
Approx 50% complete for DR1048-SAH_1_val_1.fq.gz
Approx 55% complete for DR1048-SAH_1_val_1.fq.gz
Approx 60% complete for DR1048-SAH_1_val_1.fq.gz
Approx 65% complete for DR1048-SAH_1_val_1.fq.gz
Approx 70% complete for DR1048-SAH_1_val_1.fq.gz
Approx 75% complete for DR1048-SAH_1_val_1.fq.gz
Approx 80% complete for DR1048-SAH_1_val_1.fq.gz
Approx 85% complete for DR1048-SAH_1_val_1.fq.gz
Approx 90% complete for DR1048-SAH_1_val_1.fq.gz
Approx 95% complete for DR1048-SAH_1_val_1.fq.gz
Analysis complete for DR1048-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1048-SAH_2_val_2.fq.gz<<<

Started analysis of DR1048-SAH_2_val_2.fq.gz
Approx 5% complete for DR1048-SAH_2_val_2.fq.gz
Approx 10% complete for DR1048-SAH_2_val_2.fq.gz
Approx 15% complete for DR1048-SAH_2_val_2.fq.gz
Approx 20% complete for DR1048-SAH_2_val_2.fq.gz
Approx 25% complete for DR1048-SAH_2_val_2.fq.gz
Approx 30% complete for DR1048-SAH_2_val_2.fq.gz
Approx 35% complete for DR1048-SAH_2_val_2.fq.gz
Approx 40% complete for DR1048-SAH_2_val_2.fq.gz
Approx 45% complete for DR1048-SAH_2_val_2.fq.gz
Approx 50% complete for DR1048-SAH_2_val_2.fq.gz
Approx 55% complete for DR1048-SAH_2_val_2.fq.gz
Approx 60% complete for DR1048-SAH_2_val_2.fq.gz
Approx 65% complete for DR1048-SAH_2_val_2.fq.gz
Approx 70% complete for DR1048-SAH_2_val_2.fq.gz
Approx 75% complete for DR1048-SAH_2_val_2.fq.gz
Approx 80% complete for DR1048-SAH_2_val_2.fq.gz
Approx 85% complete for DR1048-SAH_2_val_2.fq.gz
Approx 90% complete for DR1048-SAH_2_val_2.fq.gz
Approx 95% complete for DR1048-SAH_2_val_2.fq.gz
Analysis complete for DR1048-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1048-SAH_1_trimmed.fq.gz and DR1048-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1049-E sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1049-E_1.fastq.gz data/DR1049-E_2.fastq.gz -o results/02.trimgalore/DR1049-E_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1049-E_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1049-E_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1049-E_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	38	CTGTCTCTTATA	123764	0.03
Illumina	0	AGATCGGAAGAGC	123764	0.00
smallRNA	0	TGGAATTCTCGG	123764	0.00
Using Nextera adapter for trimming (count: 38). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1049-E_trimgalore/DR1049-E_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1049-E_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1049-E_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1049-E_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1049-E_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.523 s (4.229 µs/read; 14.19 M reads/minute).

=== Summary ===

Total reads processed:                 123,764
Reads with adapters:                     7,094 (5.7%)
Reads written (passing filters):       123,764 (100.0%)

Total basepairs processed:    37,252,964 bp
Quality-trimmed:                 106,613 bp (0.3%)
Total written (filtered):     37,125,581 bp (99.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 7094 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 57.3%
  C: 10.1%
  G: 17.2%
  T: 15.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3341	30941.0	0	3341
2	1435	7735.2	0	1435
3	1753	1933.8	0	1753
4	506	483.5	0	506
5	7	120.9	0	7
6	3	30.2	0	3
7	1	7.6	0	1
8	1	1.9	0	1
10	1	0.1	1	0 1
20	1	0.0	1	1
22	1	0.0	1	1
36	2	0.0	1	1 1
43	1	0.0	1	1
60	1	0.0	1	1
78	4	0.0	1	4
79	3	0.0	1	3
81	1	0.0	1	1
85	2	0.0	1	2
99	2	0.0	1	1 1
107	1	0.0	1	1
113	1	0.0	1	1
119	1	0.0	1	1
127	1	0.0	1	0 1
133	1	0.0	1	0 1
139	1	0.0	1	1
145	1	0.0	1	0 1
147	1	0.0	1	1
160	1	0.0	1	1
168	1	0.0	1	1
180	1	0.0	1	0 1
209	1	0.0	1	1
213	1	0.0	1	0 1
219	1	0.0	1	1
223	1	0.0	1	1
233	1	0.0	1	1
249	1	0.0	1	0 1
253	1	0.0	1	1
265	1	0.0	1	1
277	1	0.0	1	1
285	1	0.0	1	1
286	1	0.0	1	1
288	4	0.0	1	4
290	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1049-E_1.fastq.gz
=============================================
123764 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1049-E_trimgalore/DR1049-E_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1049-E_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1049-E_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1049-E_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1049-E_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.585 s (4.726 µs/read; 12.70 M reads/minute).

=== Summary ===

Total reads processed:                 123,764
Reads with adapters:                   101,138 (81.7%)
Reads written (passing filters):       123,764 (100.0%)

Total basepairs processed:    37,252,964 bp
Quality-trimmed:               1,090,159 bp (2.9%)
Total written (filtered):     36,052,562 bp (96.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 101138 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.7%
  C: 80.7%
  G: 13.2%
  T: 2.3%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	98121	30941.0	0	98121
2	2169	7735.2	0	2169
3	722	1933.8	0	722
4	52	483.5	0	52
5	22	120.9	0	22
6	8	30.2	0	8
9	1	0.5	0	0 1
20	1	0.0	1	1
32	1	0.0	1	0 1
34	1	0.0	1	1
35	1	0.0	1	1
38	1	0.0	1	1
48	1	0.0	1	1
49	1	0.0	1	1
54	1	0.0	1	1
56	1	0.0	1	1
77	1	0.0	1	0 1
79	1	0.0	1	0 1
80	1	0.0	1	1
81	2	0.0	1	2
82	1	0.0	1	1
84	2	0.0	1	1 1
86	1	0.0	1	1
87	2	0.0	1	2
90	1	0.0	1	1
95	2	0.0	1	2
105	1	0.0	1	1
116	1	0.0	1	1
129	1	0.0	1	1
136	1	0.0	1	1
138	1	0.0	1	1
161	2	0.0	1	1 1
164	1	0.0	1	1
176	1	0.0	1	1
181	1	0.0	1	1
182	1	0.0	1	1
184	1	0.0	1	1
191	1	0.0	1	0 1
200	1	0.0	1	1
209	1	0.0	1	0 1
216	1	0.0	1	1
220	1	0.0	1	1
243	1	0.0	1	0 1
288	1	0.0	1	1
289	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1049-E_2.fastq.gz
=============================================
123764 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1049-E_1_trimmed.fq.gz and DR1049-E_2_trimmed.fq.gz
file_1: DR1049-E_1_trimmed.fq.gz, file_2: DR1049-E_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1049-E_1_trimmed.fq.gz and DR1049-E_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1049-E_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1049-E_2_val_2.fq.gz

Total number of sequences analysed: 123764

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 6330 (5.11%)


  >>> Now running FastQC on the validated data DR1049-E_1_val_1.fq.gz<<<

Started analysis of DR1049-E_1_val_1.fq.gz
Approx 5% complete for DR1049-E_1_val_1.fq.gz
Approx 10% complete for DR1049-E_1_val_1.fq.gz
Approx 15% complete for DR1049-E_1_val_1.fq.gz
Approx 20% complete for DR1049-E_1_val_1.fq.gz
Approx 25% complete for DR1049-E_1_val_1.fq.gz
Approx 30% complete for DR1049-E_1_val_1.fq.gz
Approx 35% complete for DR1049-E_1_val_1.fq.gz
Approx 40% complete for DR1049-E_1_val_1.fq.gz
Approx 45% complete for DR1049-E_1_val_1.fq.gz
Approx 50% complete for DR1049-E_1_val_1.fq.gz
Approx 55% complete for DR1049-E_1_val_1.fq.gz
Approx 60% complete for DR1049-E_1_val_1.fq.gz
Approx 65% complete for DR1049-E_1_val_1.fq.gz
Approx 70% complete for DR1049-E_1_val_1.fq.gz
Approx 75% complete for DR1049-E_1_val_1.fq.gz
Approx 80% complete for DR1049-E_1_val_1.fq.gz
Approx 85% complete for DR1049-E_1_val_1.fq.gz
Approx 90% complete for DR1049-E_1_val_1.fq.gz
Approx 95% complete for DR1049-E_1_val_1.fq.gz
Analysis complete for DR1049-E_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1049-E_2_val_2.fq.gz<<<

Started analysis of DR1049-E_2_val_2.fq.gz
Approx 5% complete for DR1049-E_2_val_2.fq.gz
Approx 10% complete for DR1049-E_2_val_2.fq.gz
Approx 15% complete for DR1049-E_2_val_2.fq.gz
Approx 20% complete for DR1049-E_2_val_2.fq.gz
Approx 25% complete for DR1049-E_2_val_2.fq.gz
Approx 30% complete for DR1049-E_2_val_2.fq.gz
Approx 35% complete for DR1049-E_2_val_2.fq.gz
Approx 40% complete for DR1049-E_2_val_2.fq.gz
Approx 45% complete for DR1049-E_2_val_2.fq.gz
Approx 50% complete for DR1049-E_2_val_2.fq.gz
Approx 55% complete for DR1049-E_2_val_2.fq.gz
Approx 60% complete for DR1049-E_2_val_2.fq.gz
Approx 65% complete for DR1049-E_2_val_2.fq.gz
Approx 70% complete for DR1049-E_2_val_2.fq.gz
Approx 75% complete for DR1049-E_2_val_2.fq.gz
Approx 80% complete for DR1049-E_2_val_2.fq.gz
Approx 85% complete for DR1049-E_2_val_2.fq.gz
Approx 90% complete for DR1049-E_2_val_2.fq.gz
Approx 95% complete for DR1049-E_2_val_2.fq.gz
Analysis complete for DR1049-E_2_val_2.fq.gz
Deleting both intermediate output files DR1049-E_1_trimmed.fq.gz and DR1049-E_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1049-H sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1049-H_1.fastq.gz data/DR1049-H_2.fastq.gz -o results/02.trimgalore/DR1049-H_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1049-H_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1049-H_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1049-H_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	43	CTGTCTCTTATA	115410	0.04
Illumina	0	AGATCGGAAGAGC	115410	0.00
smallRNA	0	TGGAATTCTCGG	115410	0.00
Using Nextera adapter for trimming (count: 43). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1049-H_trimgalore/DR1049-H_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1049-H_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1049-H_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1049-H_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1049-H_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.509 s (4.411 µs/read; 13.60 M reads/minute).

=== Summary ===

Total reads processed:                 115,410
Reads with adapters:                    10,143 (8.8%)
Reads written (passing filters):       115,410 (100.0%)

Total basepairs processed:    34,738,410 bp
Quality-trimmed:                 129,631 bp (0.4%)
Total written (filtered):     34,581,438 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 10143 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 54.0%
  C: 9.5%
  G: 17.3%
  T: 19.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4894	28852.5	0	4894
2	2027	7213.1	0	2027
3	2692	1803.3	0	2692
4	450	450.8	0	450
5	18	112.7	0	18
6	4	28.2	0	4
7	1	7.0	0	1
10	1	0.1	1	0 1
12	1	0.0	1	0 1
13	1	0.0	1	0 1
26	1	0.0	1	1
29	1	0.0	1	1
30	1	0.0	1	1
35	1	0.0	1	0 1
36	1	0.0	1	0 1
43	1	0.0	1	1
62	1	0.0	1	1
64	1	0.0	1	1
75	1	0.0	1	1
78	1	0.0	1	1
79	2	0.0	1	2
80	2	0.0	1	1 1
81	1	0.0	1	1
82	1	0.0	1	1
83	1	0.0	1	1
87	1	0.0	1	0 1
92	2	0.0	1	2
93	1	0.0	1	1
96	1	0.0	1	0 1
97	1	0.0	1	0 1
101	1	0.0	1	1
114	1	0.0	1	0 1
115	1	0.0	1	1
116	1	0.0	1	1
117	1	0.0	1	1
120	1	0.0	1	1
127	1	0.0	1	1
140	1	0.0	1	1
146	1	0.0	1	1
157	1	0.0	1	1
174	1	0.0	1	1
181	1	0.0	1	1
194	1	0.0	1	1
214	1	0.0	1	1
221	1	0.0	1	0 1
271	1	0.0	1	1
273	1	0.0	1	1
274	2	0.0	1	1 1
275	1	0.0	1	0 1
276	1	0.0	1	1
286	1	0.0	1	1
287	1	0.0	1	1
288	5	0.0	1	4 1
289	2	0.0	1	2
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/DR1049-H_1.fastq.gz
=============================================
115410 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1049-H_trimgalore/DR1049-H_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1049-H_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1049-H_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1049-H_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1049-H_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.577 s (5.001 µs/read; 12.00 M reads/minute).

=== Summary ===

Total reads processed:                 115,410
Reads with adapters:                    94,583 (82.0%)
Reads written (passing filters):       115,410 (100.0%)

Total basepairs processed:    34,738,410 bp
Quality-trimmed:               1,045,832 bp (3.0%)
Total written (filtered):     33,587,564 bp (96.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 94583 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.8%
  C: 80.0%
  G: 13.7%
  T: 2.4%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	91565	28852.5	0	91565
2	2182	7213.1	0	2182
3	702	1803.3	0	702
4	40	450.8	0	40
5	25	112.7	0	25
6	13	28.2	0	13
7	3	7.0	0	3
8	1	1.8	0	1
16	1	0.0	1	0 1
23	1	0.0	1	1
28	1	0.0	1	1
39	1	0.0	1	0 1
43	1	0.0	1	1
54	1	0.0	1	1
64	1	0.0	1	1
66	1	0.0	1	1
81	1	0.0	1	1
82	1	0.0	1	1
84	1	0.0	1	1
85	2	0.0	1	2
86	1	0.0	1	0 1
87	2	0.0	1	2
88	1	0.0	1	1
89	2	0.0	1	2
94	1	0.0	1	1
95	1	0.0	1	1
96	1	0.0	1	1
98	2	0.0	1	2
100	1	0.0	1	1
101	1	0.0	1	1
103	1	0.0	1	1
114	1	0.0	1	1
116	1	0.0	1	1
118	1	0.0	1	1
120	1	0.0	1	1
127	1	0.0	1	0 1
133	1	0.0	1	1
134	1	0.0	1	1
142	1	0.0	1	0 1
166	1	0.0	1	0 1
171	1	0.0	1	1
173	1	0.0	1	0 1
182	1	0.0	1	1
183	1	0.0	1	1
187	1	0.0	1	1
194	1	0.0	1	1
201	3	0.0	1	1 2
203	1	0.0	1	0 1
207	1	0.0	1	1
211	1	0.0	1	0 1
224	1	0.0	1	1
242	1	0.0	1	1
288	2	0.0	1	2


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1049-H_2.fastq.gz
=============================================
115410 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1049-H_1_trimmed.fq.gz and DR1049-H_2_trimmed.fq.gz
file_1: DR1049-H_1_trimmed.fq.gz, file_2: DR1049-H_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1049-H_1_trimmed.fq.gz and DR1049-H_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1049-H_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1049-H_2_val_2.fq.gz

Total number of sequences analysed: 115410

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 6177 (5.35%)


  >>> Now running FastQC on the validated data DR1049-H_1_val_1.fq.gz<<<

Started analysis of DR1049-H_1_val_1.fq.gz
Approx 5% complete for DR1049-H_1_val_1.fq.gz
Approx 10% complete for DR1049-H_1_val_1.fq.gz
Approx 15% complete for DR1049-H_1_val_1.fq.gz
Approx 20% complete for DR1049-H_1_val_1.fq.gz
Approx 25% complete for DR1049-H_1_val_1.fq.gz
Approx 30% complete for DR1049-H_1_val_1.fq.gz
Approx 35% complete for DR1049-H_1_val_1.fq.gz
Approx 40% complete for DR1049-H_1_val_1.fq.gz
Approx 45% complete for DR1049-H_1_val_1.fq.gz
Approx 50% complete for DR1049-H_1_val_1.fq.gz
Approx 55% complete for DR1049-H_1_val_1.fq.gz
Approx 60% complete for DR1049-H_1_val_1.fq.gz
Approx 65% complete for DR1049-H_1_val_1.fq.gz
Approx 70% complete for DR1049-H_1_val_1.fq.gz
Approx 75% complete for DR1049-H_1_val_1.fq.gz
Approx 80% complete for DR1049-H_1_val_1.fq.gz
Approx 85% complete for DR1049-H_1_val_1.fq.gz
Approx 90% complete for DR1049-H_1_val_1.fq.gz
Approx 95% complete for DR1049-H_1_val_1.fq.gz
Analysis complete for DR1049-H_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1049-H_2_val_2.fq.gz<<<

Started analysis of DR1049-H_2_val_2.fq.gz
Approx 5% complete for DR1049-H_2_val_2.fq.gz
Approx 10% complete for DR1049-H_2_val_2.fq.gz
Approx 15% complete for DR1049-H_2_val_2.fq.gz
Approx 20% complete for DR1049-H_2_val_2.fq.gz
Approx 25% complete for DR1049-H_2_val_2.fq.gz
Approx 30% complete for DR1049-H_2_val_2.fq.gz
Approx 35% complete for DR1049-H_2_val_2.fq.gz
Approx 40% complete for DR1049-H_2_val_2.fq.gz
Approx 45% complete for DR1049-H_2_val_2.fq.gz
Approx 50% complete for DR1049-H_2_val_2.fq.gz
Approx 55% complete for DR1049-H_2_val_2.fq.gz
Approx 60% complete for DR1049-H_2_val_2.fq.gz
Approx 65% complete for DR1049-H_2_val_2.fq.gz
Approx 70% complete for DR1049-H_2_val_2.fq.gz
Approx 75% complete for DR1049-H_2_val_2.fq.gz
Approx 80% complete for DR1049-H_2_val_2.fq.gz
Approx 85% complete for DR1049-H_2_val_2.fq.gz
Approx 90% complete for DR1049-H_2_val_2.fq.gz
Approx 95% complete for DR1049-H_2_val_2.fq.gz
Analysis complete for DR1049-H_2_val_2.fq.gz
Deleting both intermediate output files DR1049-H_1_trimmed.fq.gz and DR1049-H_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to DR1049-SAH sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/DR1049-SAH_1.fastq.gz data/DR1049-SAH_2.fastq.gz -o results/02.trimgalore/DR1049-SAH_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/DR1049-SAH_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1049-SAH_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/DR1049-SAH_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	134	CTGTCTCTTATA	96050	0.14
Illumina	0	AGATCGGAAGAGC	96050	0.00
smallRNA	0	TGGAATTCTCGG	96050	0.00
Using Nextera adapter for trimming (count: 134). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1049-SAH_trimgalore/DR1049-SAH_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1049-SAH_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to DR1049-SAH_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1049-SAH_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1049-SAH_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.439 s (4.572 µs/read; 13.12 M reads/minute).

=== Summary ===

Total reads processed:                  96,050
Reads with adapters:                     8,439 (8.8%)
Reads written (passing filters):        96,050 (100.0%)

Total basepairs processed:    28,911,050 bp
Quality-trimmed:                 114,023 bp (0.4%)
Total written (filtered):     28,750,521 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 8439 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 46.3%
  C: 10.3%
  G: 22.3%
  T: 21.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3995	24012.5	0	3995
2	1229	6003.1	0	1229
3	2433	1500.8	0	2433
4	597	375.2	0	597
5	20	93.8	0	20
6	3	23.4	0	3
7	3	5.9	0	3
9	1	0.4	0	0 1
29	1	0.0	1	1
33	1	0.0	1	0 1
36	1	0.0	1	0 1
78	3	0.0	1	3
79	1	0.0	1	0 1
80	1	0.0	1	1
82	4	0.0	1	4
84	1	0.0	1	1
85	1	0.0	1	1
89	3	0.0	1	2 1
91	2	0.0	1	1 1
92	1	0.0	1	1
93	1	0.0	1	1
94	4	0.0	1	2 2
95	3	0.0	1	2 1
98	1	0.0	1	1
100	1	0.0	1	1
105	1	0.0	1	0 1
106	1	0.0	1	1
109	1	0.0	1	1
113	1	0.0	1	1
114	1	0.0	1	1
117	2	0.0	1	1 1
118	1	0.0	1	1
128	1	0.0	1	1
129	1	0.0	1	1
132	1	0.0	1	0 1
135	1	0.0	1	1
139	1	0.0	1	0 1
144	1	0.0	1	0 1
146	1	0.0	1	1
147	1	0.0	1	1
152	2	0.0	1	2
154	2	0.0	1	2
155	2	0.0	1	2
161	1	0.0	1	1
162	1	0.0	1	1
163	3	0.0	1	2 1
165	2	0.0	1	2
166	1	0.0	1	0 1
167	2	0.0	1	2
170	1	0.0	1	0 1
172	1	0.0	1	1
173	2	0.0	1	2
174	1	0.0	1	1
178	1	0.0	1	1
179	1	0.0	1	1
180	2	0.0	1	2
186	1	0.0	1	1
187	1	0.0	1	1
188	2	0.0	1	1 1
190	1	0.0	1	1
194	2	0.0	1	2
195	1	0.0	1	1
196	1	0.0	1	0 1
197	1	0.0	1	1
199	1	0.0	1	1
200	1	0.0	1	1
201	1	0.0	1	1
203	3	0.0	1	3
204	2	0.0	1	2
206	1	0.0	1	1
211	1	0.0	1	0 1
212	1	0.0	1	1
215	1	0.0	1	1
216	1	0.0	1	1
218	1	0.0	1	1
220	1	0.0	1	1
221	1	0.0	1	1
222	4	0.0	1	4
223	1	0.0	1	1
226	2	0.0	1	2
230	1	0.0	1	1
232	1	0.0	1	1
233	1	0.0	1	1
235	1	0.0	1	1
237	1	0.0	1	1
241	1	0.0	1	1
247	1	0.0	1	1
250	1	0.0	1	1
255	1	0.0	1	0 1
261	1	0.0	1	1
262	1	0.0	1	1
266	1	0.0	1	1
267	3	0.0	1	3
270	2	0.0	1	2
271	2	0.0	1	2
272	2	0.0	1	2
273	2	0.0	1	2
274	3	0.0	1	3
275	2	0.0	1	1 1
277	1	0.0	1	1
278	1	0.0	1	1
280	1	0.0	1	1
284	2	0.0	1	2
286	1	0.0	1	1
288	4	0.0	1	3 1
289	3	0.0	1	2 1
290	4	0.0	1	4
291	9	0.0	1	8 1

RUN STATISTICS FOR INPUT FILE: data/DR1049-SAH_1.fastq.gz
=============================================
96050 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/DR1049-SAH_trimgalore/DR1049-SAH_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/DR1049-SAH_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to DR1049-SAH_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/DR1049-SAH_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/DR1049-SAH_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.539 s (5.617 µs/read; 10.68 M reads/minute).

=== Summary ===

Total reads processed:                  96,050
Reads with adapters:                    79,637 (82.9%)
Reads written (passing filters):        96,050 (100.0%)

Total basepairs processed:    28,911,050 bp
Quality-trimmed:                 753,348 bp (2.6%)
Total written (filtered):     28,053,093 bp (97.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 79637 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 3.4%
  C: 80.9%
  G: 13.8%
  T: 1.9%
  none/other: 0.0%
WARNING:
    The adapter is preceded by 'C' extremely often.
    The provided adapter sequence could be incomplete at its 5' end.
    Ignore this warning when trimming primers.

Overview of removed sequences
length	count	expect	max.err	error counts
1	77315	24012.5	0	77315
2	1552	6003.1	0	1552
3	553	1500.8	0	553
4	30	375.2	0	30
5	19	93.8	0	19
6	11	23.4	0	11
10	1	0.1	1	0 1
12	1	0.0	1	0 1
59	1	0.0	1	0 1
77	1	0.0	1	0 1
81	1	0.0	1	1
82	7	0.0	1	7
83	4	0.0	1	3 1
84	5	0.0	1	5
85	5	0.0	1	5
86	9	0.0	1	9
87	3	0.0	1	3
88	1	0.0	1	1
89	2	0.0	1	1 1
90	1	0.0	1	1
91	3	0.0	1	3
92	1	0.0	1	1
93	3	0.0	1	3
94	1	0.0	1	1
95	4	0.0	1	4
96	4	0.0	1	4
97	2	0.0	1	2
98	1	0.0	1	1
99	1	0.0	1	1
100	1	0.0	1	1
105	3	0.0	1	3
106	1	0.0	1	1
108	1	0.0	1	1
109	1	0.0	1	0 1
112	1	0.0	1	0 1
114	1	0.0	1	1
115	1	0.0	1	1
121	2	0.0	1	2
122	1	0.0	1	1
125	1	0.0	1	1
126	1	0.0	1	1
127	1	0.0	1	1
130	1	0.0	1	1
131	2	0.0	1	2
134	1	0.0	1	1
135	2	0.0	1	2
137	1	0.0	1	1
139	1	0.0	1	1
142	1	0.0	1	1
144	1	0.0	1	1
145	1	0.0	1	0 1
147	1	0.0	1	1
148	1	0.0	1	1
152	1	0.0	1	1
155	1	0.0	1	1
158	1	0.0	1	1
159	1	0.0	1	1
161	1	0.0	1	1
164	1	0.0	1	1
166	1	0.0	1	0 1
167	3	0.0	1	2 1
171	1	0.0	1	1
172	1	0.0	1	1
174	1	0.0	1	1
176	1	0.0	1	1
179	2	0.0	1	2
180	2	0.0	1	2
181	1	0.0	1	1
182	2	0.0	1	2
183	1	0.0	1	1
184	1	0.0	1	0 1
185	1	0.0	1	1
186	1	0.0	1	1
187	2	0.0	1	2
188	1	0.0	1	1
192	2	0.0	1	2
193	3	0.0	1	3
194	2	0.0	1	2
195	1	0.0	1	1
196	1	0.0	1	1
197	1	0.0	1	1
198	1	0.0	1	0 1
199	1	0.0	1	0 1
201	1	0.0	1	1
202	1	0.0	1	1
203	3	0.0	1	3
205	1	0.0	1	1
208	1	0.0	1	1
211	1	0.0	1	1
213	1	0.0	1	1
214	1	0.0	1	0 1
216	1	0.0	1	0 1
217	1	0.0	1	1
219	1	0.0	1	1
225	1	0.0	1	1
228	1	0.0	1	1
236	2	0.0	1	2
243	1	0.0	1	1
259	1	0.0	1	1
274	1	0.0	1	1
287	1	0.0	1	1
288	2	0.0	1	2
289	1	0.0	1	1
290	1	0.0	1	1
291	1	0.0	1	1


WARNING:
    One or more of your adapter sequences may be incomplete.
    Please see the detailed output above.

RUN STATISTICS FOR INPUT FILE: data/DR1049-SAH_2.fastq.gz
=============================================
96050 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files DR1049-SAH_1_trimmed.fq.gz and DR1049-SAH_2_trimmed.fq.gz
file_1: DR1049-SAH_1_trimmed.fq.gz, file_2: DR1049-SAH_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: DR1049-SAH_1_trimmed.fq.gz and DR1049-SAH_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to DR1049-SAH_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to DR1049-SAH_2_val_2.fq.gz

Total number of sequences analysed: 96050

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 4323 (4.50%)


  >>> Now running FastQC on the validated data DR1049-SAH_1_val_1.fq.gz<<<

Started analysis of DR1049-SAH_1_val_1.fq.gz
Approx 5% complete for DR1049-SAH_1_val_1.fq.gz
Approx 10% complete for DR1049-SAH_1_val_1.fq.gz
Approx 15% complete for DR1049-SAH_1_val_1.fq.gz
Approx 20% complete for DR1049-SAH_1_val_1.fq.gz
Approx 25% complete for DR1049-SAH_1_val_1.fq.gz
Approx 30% complete for DR1049-SAH_1_val_1.fq.gz
Approx 35% complete for DR1049-SAH_1_val_1.fq.gz
Approx 40% complete for DR1049-SAH_1_val_1.fq.gz
Approx 45% complete for DR1049-SAH_1_val_1.fq.gz
Approx 50% complete for DR1049-SAH_1_val_1.fq.gz
Approx 55% complete for DR1049-SAH_1_val_1.fq.gz
Approx 60% complete for DR1049-SAH_1_val_1.fq.gz
Approx 65% complete for DR1049-SAH_1_val_1.fq.gz
Approx 70% complete for DR1049-SAH_1_val_1.fq.gz
Approx 75% complete for DR1049-SAH_1_val_1.fq.gz
Approx 80% complete for DR1049-SAH_1_val_1.fq.gz
Approx 85% complete for DR1049-SAH_1_val_1.fq.gz
Approx 90% complete for DR1049-SAH_1_val_1.fq.gz
Approx 95% complete for DR1049-SAH_1_val_1.fq.gz
Analysis complete for DR1049-SAH_1_val_1.fq.gz

  >>> Now running FastQC on the validated data DR1049-SAH_2_val_2.fq.gz<<<

Started analysis of DR1049-SAH_2_val_2.fq.gz
Approx 5% complete for DR1049-SAH_2_val_2.fq.gz
Approx 10% complete for DR1049-SAH_2_val_2.fq.gz
Approx 15% complete for DR1049-SAH_2_val_2.fq.gz
Approx 20% complete for DR1049-SAH_2_val_2.fq.gz
Approx 25% complete for DR1049-SAH_2_val_2.fq.gz
Approx 30% complete for DR1049-SAH_2_val_2.fq.gz
Approx 35% complete for DR1049-SAH_2_val_2.fq.gz
Approx 40% complete for DR1049-SAH_2_val_2.fq.gz
Approx 45% complete for DR1049-SAH_2_val_2.fq.gz
Approx 50% complete for DR1049-SAH_2_val_2.fq.gz
Approx 55% complete for DR1049-SAH_2_val_2.fq.gz
Approx 60% complete for DR1049-SAH_2_val_2.fq.gz
Approx 65% complete for DR1049-SAH_2_val_2.fq.gz
Approx 70% complete for DR1049-SAH_2_val_2.fq.gz
Approx 75% complete for DR1049-SAH_2_val_2.fq.gz
Approx 80% complete for DR1049-SAH_2_val_2.fq.gz
Approx 85% complete for DR1049-SAH_2_val_2.fq.gz
Approx 90% complete for DR1049-SAH_2_val_2.fq.gz
Approx 95% complete for DR1049-SAH_2_val_2.fq.gz
Analysis complete for DR1049-SAH_2_val_2.fq.gz
Deleting both intermediate output files DR1049-SAH_1_trimmed.fq.gz and DR1049-SAH_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to E-1 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/E-1_1.fastq.gz data/E-1_2.fastq.gz -o results/02.trimgalore/E-1_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/E-1_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-1_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/E-1_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	70	CTGTCTCTTATA	140631	0.05
smallRNA	0	TGGAATTCTCGG	140631	0.00
Illumina	0	AGATCGGAAGAGC	140631	0.00
Using Nextera adapter for trimming (count: 70). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-1_trimgalore/E-1_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-1_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to E-1_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-1_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-1_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.596 s (4.238 µs/read; 14.16 M reads/minute).

=== Summary ===

Total reads processed:                 140,631
Reads with adapters:                     9,884 (7.0%)
Reads written (passing filters):       140,631 (100.0%)

Total basepairs processed:    42,329,931 bp
Quality-trimmed:                 460,768 bp (1.1%)
Total written (filtered):     41,841,682 bp (98.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 9884 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 38.4%
  C: 16.7%
  G: 22.2%
  T: 22.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	6091	35157.8	0	6091
2	1699	8789.4	0	1699
3	1891	2197.4	0	1891
4	96	549.3	0	96
5	24	137.3	0	24
6	7	34.3	0	7
7	3	8.6	0	3
10	1	0.1	1	0 1
29	1	0.0	1	0 1
63	1	0.0	1	1
77	1	0.0	1	1
79	1	0.0	1	1
80	1	0.0	1	1
83	3	0.0	1	3
84	1	0.0	1	1
85	1	0.0	1	1
87	2	0.0	1	2
90	2	0.0	1	2
95	1	0.0	1	1
98	1	0.0	1	1
100	1	0.0	1	1
103	1	0.0	1	1
106	1	0.0	1	1
108	1	0.0	1	1
111	1	0.0	1	1
115	1	0.0	1	1
121	1	0.0	1	1
125	1	0.0	1	1
127	1	0.0	1	1
128	1	0.0	1	1
132	1	0.0	1	1
134	1	0.0	1	1
145	1	0.0	1	1
146	1	0.0	1	1
156	1	0.0	1	1
157	1	0.0	1	1
159	1	0.0	1	1
160	1	0.0	1	1
165	1	0.0	1	1
168	2	0.0	1	2
171	1	0.0	1	1
173	1	0.0	1	1
176	1	0.0	1	1
178	2	0.0	1	2
180	1	0.0	1	1
193	1	0.0	1	1
194	1	0.0	1	1
196	2	0.0	1	2
197	1	0.0	1	1
201	1	0.0	1	1
202	1	0.0	1	0 1
203	1	0.0	1	1
205	1	0.0	1	1
206	2	0.0	1	2
208	1	0.0	1	1
209	1	0.0	1	1
211	1	0.0	1	1
216	2	0.0	1	2
217	2	0.0	1	2
219	1	0.0	1	1
227	1	0.0	1	1
228	1	0.0	1	1
245	1	0.0	1	1
258	1	0.0	1	1
259	1	0.0	1	1
272	1	0.0	1	1
286	1	0.0	1	1
290	1	0.0	1	1
291	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/E-1_1.fastq.gz
=============================================
140631 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-1_trimgalore/E-1_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-1_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to E-1_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-1_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-1_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.599 s (4.260 µs/read; 14.08 M reads/minute).

=== Summary ===

Total reads processed:                 140,631
Reads with adapters:                    92,942 (66.1%)
Reads written (passing filters):       140,631 (100.0%)

Total basepairs processed:    42,329,931 bp
Quality-trimmed:               3,882,174 bp (9.2%)
Total written (filtered):     38,337,691 bp (90.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 92942 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.5%
  C: 55.5%
  G: 27.2%
  T: 3.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	86089	35157.8	0	86089
2	5094	8789.4	0	5094
3	1493	2197.4	0	1493
4	124	549.3	0	124
5	62	137.3	0	62
6	6	34.3	0	6
7	1	8.6	0	1
18	1	0.0	1	0 1
53	1	0.0	1	0 1
76	1	0.0	1	0 1
82	2	0.0	1	1 1
83	4	0.0	1	3 1
84	4	0.0	1	4
85	2	0.0	1	2
86	5	0.0	1	5
87	2	0.0	1	2
88	1	0.0	1	1
89	2	0.0	1	2
90	3	0.0	1	3
91	1	0.0	1	0 1
92	2	0.0	1	1 1
93	1	0.0	1	1
96	3	0.0	1	3
98	2	0.0	1	2
99	1	0.0	1	1
100	1	0.0	1	1
101	1	0.0	1	1
103	1	0.0	1	1
105	1	0.0	1	1
106	1	0.0	1	1
109	1	0.0	1	1
114	1	0.0	1	1
123	1	0.0	1	1
124	1	0.0	1	1
130	1	0.0	1	1
131	1	0.0	1	1
132	1	0.0	1	1
133	1	0.0	1	1
137	1	0.0	1	1
140	2	0.0	1	1 1
146	1	0.0	1	1
148	2	0.0	1	1 1
151	1	0.0	1	1
152	1	0.0	1	1
155	2	0.0	1	2
157	1	0.0	1	1
160	2	0.0	1	2
161	1	0.0	1	1
172	2	0.0	1	2
177	1	0.0	1	1
185	1	0.0	1	1
192	1	0.0	1	1
195	1	0.0	1	1
216	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/E-1_2.fastq.gz
=============================================
140631 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E-1_1_trimmed.fq.gz and E-1_2_trimmed.fq.gz
file_1: E-1_1_trimmed.fq.gz, file_2: E-1_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E-1_1_trimmed.fq.gz and E-1_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E-1_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E-1_2_val_2.fq.gz

Total number of sequences analysed: 140631

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 28862 (20.52%)


  >>> Now running FastQC on the validated data E-1_1_val_1.fq.gz<<<

Started analysis of E-1_1_val_1.fq.gz
Approx 5% complete for E-1_1_val_1.fq.gz
Approx 10% complete for E-1_1_val_1.fq.gz
Approx 15% complete for E-1_1_val_1.fq.gz
Approx 20% complete for E-1_1_val_1.fq.gz
Approx 25% complete for E-1_1_val_1.fq.gz
Approx 30% complete for E-1_1_val_1.fq.gz
Approx 35% complete for E-1_1_val_1.fq.gz
Approx 40% complete for E-1_1_val_1.fq.gz
Approx 45% complete for E-1_1_val_1.fq.gz
Approx 50% complete for E-1_1_val_1.fq.gz
Approx 55% complete for E-1_1_val_1.fq.gz
Approx 60% complete for E-1_1_val_1.fq.gz
Approx 65% complete for E-1_1_val_1.fq.gz
Approx 70% complete for E-1_1_val_1.fq.gz
Approx 75% complete for E-1_1_val_1.fq.gz
Approx 80% complete for E-1_1_val_1.fq.gz
Approx 85% complete for E-1_1_val_1.fq.gz
Approx 90% complete for E-1_1_val_1.fq.gz
Approx 95% complete for E-1_1_val_1.fq.gz
Analysis complete for E-1_1_val_1.fq.gz

  >>> Now running FastQC on the validated data E-1_2_val_2.fq.gz<<<

Started analysis of E-1_2_val_2.fq.gz
Approx 5% complete for E-1_2_val_2.fq.gz
Approx 10% complete for E-1_2_val_2.fq.gz
Approx 15% complete for E-1_2_val_2.fq.gz
Approx 20% complete for E-1_2_val_2.fq.gz
Approx 25% complete for E-1_2_val_2.fq.gz
Approx 30% complete for E-1_2_val_2.fq.gz
Approx 35% complete for E-1_2_val_2.fq.gz
Approx 40% complete for E-1_2_val_2.fq.gz
Approx 45% complete for E-1_2_val_2.fq.gz
Approx 50% complete for E-1_2_val_2.fq.gz
Approx 55% complete for E-1_2_val_2.fq.gz
Approx 60% complete for E-1_2_val_2.fq.gz
Approx 65% complete for E-1_2_val_2.fq.gz
Approx 70% complete for E-1_2_val_2.fq.gz
Approx 75% complete for E-1_2_val_2.fq.gz
Approx 80% complete for E-1_2_val_2.fq.gz
Approx 85% complete for E-1_2_val_2.fq.gz
Approx 90% complete for E-1_2_val_2.fq.gz
Approx 95% complete for E-1_2_val_2.fq.gz
Analysis complete for E-1_2_val_2.fq.gz
Deleting both intermediate output files E-1_1_trimmed.fq.gz and E-1_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to E-10 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/E-10_1.fastq.gz data/E-10_2.fastq.gz -o results/02.trimgalore/E-10_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/E-10_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-10_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/E-10_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	152	CTGTCTCTTATA	237330	0.06
smallRNA	0	TGGAATTCTCGG	237330	0.00
Illumina	0	AGATCGGAAGAGC	237330	0.00
Using Nextera adapter for trimming (count: 152). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-10_trimgalore/E-10_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-10_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to E-10_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-10_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-10_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.874 s (3.683 µs/read; 16.29 M reads/minute).

=== Summary ===

Total reads processed:                 237,330
Reads with adapters:                     5,363 (2.3%)
Reads written (passing filters):       237,330 (100.0%)

Total basepairs processed:    71,436,330 bp
Quality-trimmed:                 393,653 bp (0.6%)
Total written (filtered):     71,016,005 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 5363 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 38.8%
  C: 16.9%
  G: 32.0%
  T: 12.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	2971	59332.5	0	2971
2	1131	14833.1	0	1131
3	977	3708.3	0	977
4	111	927.1	0	111
5	4	231.8	0	4
7	1	14.5	0	1
9	2	0.9	0	2
15	1	0.0	1	1
34	1	0.0	1	0 1
43	1	0.0	1	1
55	1	0.0	1	0 1
64	1	0.0	1	0 1
66	1	0.0	1	1
67	1	0.0	1	1
68	1	0.0	1	1
70	1	0.0	1	1
71	1	0.0	1	1
74	1	0.0	1	1
75	1	0.0	1	1
76	2	0.0	1	2
77	9	0.0	1	8 1
78	43	0.0	1	43
79	14	0.0	1	12 2
80	12	0.0	1	10 2
81	3	0.0	1	3
82	3	0.0	1	3
83	2	0.0	1	2
84	1	0.0	1	1
86	3	0.0	1	2 1
87	2	0.0	1	2
88	1	0.0	1	1
89	1	0.0	1	1
90	1	0.0	1	1
92	1	0.0	1	1
93	1	0.0	1	1
98	1	0.0	1	1
102	1	0.0	1	1
107	1	0.0	1	1
109	2	0.0	1	2
111	2	0.0	1	2
112	1	0.0	1	1
113	1	0.0	1	1
114	4	0.0	1	2 2
115	5	0.0	1	5
117	1	0.0	1	1
120	1	0.0	1	1
123	1	0.0	1	1
125	1	0.0	1	1
140	1	0.0	1	1
145	1	0.0	1	1
146	1	0.0	1	1
151	1	0.0	1	1
153	1	0.0	1	1
163	1	0.0	1	1
164	1	0.0	1	0 1
171	1	0.0	1	1
173	2	0.0	1	2
182	1	0.0	1	1
186	1	0.0	1	0 1
196	1	0.0	1	1
206	3	0.0	1	3
214	1	0.0	1	1
216	2	0.0	1	2
219	1	0.0	1	1
220	1	0.0	1	1
222	1	0.0	1	1
231	1	0.0	1	1
232	2	0.0	1	2
242	1	0.0	1	1
262	1	0.0	1	1
268	1	0.0	1	1
274	2	0.0	1	2
279	1	0.0	1	0 1
288	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/E-10_1.fastq.gz
=============================================
237330 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-10_trimgalore/E-10_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-10_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to E-10_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-10_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-10_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.912 s (3.843 µs/read; 15.61 M reads/minute).

=== Summary ===

Total reads processed:                 237,330
Reads with adapters:                   165,265 (69.6%)
Reads written (passing filters):       237,330 (100.0%)

Total basepairs processed:    71,436,330 bp
Quality-trimmed:               5,357,035 bp (7.5%)
Total written (filtered):     65,889,659 bp (92.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 165265 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 9.9%
  C: 60.3%
  G: 26.1%
  T: 3.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	154818	59332.5	0	154818
2	7576	14833.1	0	7576
3	2510	3708.3	0	2510
4	107	927.1	0	107
5	69	231.8	0	69
6	24	57.9	0	24
7	3	14.5	0	3
8	1	3.6	0	1
9	1	0.9	0	0 1
20	1	0.0	1	1
24	2	0.0	1	1 1
25	1	0.0	1	0 1
26	1	0.0	1	1
29	5	0.0	1	4 1
30	2	0.0	1	1 1
31	9	0.0	1	8 1
32	6	0.0	1	6
33	2	0.0	1	1 1
34	13	0.0	1	10 3
35	3	0.0	1	3
36	3	0.0	1	3
38	2	0.0	1	1 1
39	4	0.0	1	4
41	3	0.0	1	3
42	1	0.0	1	1
43	3	0.0	1	2 1
44	6	0.0	1	5 1
45	10	0.0	1	8 2
46	2	0.0	1	2
47	7	0.0	1	7
48	3	0.0	1	3
49	1	0.0	1	1
51	1	0.0	1	0 1
52	1	0.0	1	1
53	1	0.0	1	1
54	3	0.0	1	3
59	1	0.0	1	0 1
77	1	0.0	1	0 1
81	1	0.0	1	1
83	4	0.0	1	3 1
84	3	0.0	1	3
85	3	0.0	1	3
86	3	0.0	1	3
87	1	0.0	1	1
88	3	0.0	1	3
90	3	0.0	1	3
91	2	0.0	1	2
97	1	0.0	1	1
99	2	0.0	1	2
100	1	0.0	1	1
106	1	0.0	1	1
114	4	0.0	1	4
115	2	0.0	1	2
125	1	0.0	1	1
126	1	0.0	1	1
127	1	0.0	1	1
128	1	0.0	1	0 1
135	1	0.0	1	1
141	1	0.0	1	1
143	1	0.0	1	1
151	1	0.0	1	1
152	1	0.0	1	1
157	1	0.0	1	1
160	1	0.0	1	1
164	1	0.0	1	1
166	1	0.0	1	1
167	1	0.0	1	1
170	1	0.0	1	1
181	1	0.0	1	1
193	3	0.0	1	3
194	1	0.0	1	0 1
204	1	0.0	1	1
239	1	0.0	1	1
290	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/E-10_2.fastq.gz
=============================================
237330 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E-10_1_trimmed.fq.gz and E-10_2_trimmed.fq.gz
file_1: E-10_1_trimmed.fq.gz, file_2: E-10_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E-10_1_trimmed.fq.gz and E-10_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E-10_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E-10_2_val_2.fq.gz

Total number of sequences analysed: 237330

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 38197 (16.09%)


  >>> Now running FastQC on the validated data E-10_1_val_1.fq.gz<<<

Started analysis of E-10_1_val_1.fq.gz
Approx 5% complete for E-10_1_val_1.fq.gz
Approx 10% complete for E-10_1_val_1.fq.gz
Approx 15% complete for E-10_1_val_1.fq.gz
Approx 20% complete for E-10_1_val_1.fq.gz
Approx 25% complete for E-10_1_val_1.fq.gz
Approx 30% complete for E-10_1_val_1.fq.gz
Approx 35% complete for E-10_1_val_1.fq.gz
Approx 40% complete for E-10_1_val_1.fq.gz
Approx 45% complete for E-10_1_val_1.fq.gz
Approx 50% complete for E-10_1_val_1.fq.gz
Approx 55% complete for E-10_1_val_1.fq.gz
Approx 60% complete for E-10_1_val_1.fq.gz
Approx 65% complete for E-10_1_val_1.fq.gz
Approx 70% complete for E-10_1_val_1.fq.gz
Approx 75% complete for E-10_1_val_1.fq.gz
Approx 80% complete for E-10_1_val_1.fq.gz
Approx 85% complete for E-10_1_val_1.fq.gz
Approx 90% complete for E-10_1_val_1.fq.gz
Approx 95% complete for E-10_1_val_1.fq.gz
Analysis complete for E-10_1_val_1.fq.gz

  >>> Now running FastQC on the validated data E-10_2_val_2.fq.gz<<<

Started analysis of E-10_2_val_2.fq.gz
Approx 5% complete for E-10_2_val_2.fq.gz
Approx 10% complete for E-10_2_val_2.fq.gz
Approx 15% complete for E-10_2_val_2.fq.gz
Approx 20% complete for E-10_2_val_2.fq.gz
Approx 25% complete for E-10_2_val_2.fq.gz
Approx 30% complete for E-10_2_val_2.fq.gz
Approx 35% complete for E-10_2_val_2.fq.gz
Approx 40% complete for E-10_2_val_2.fq.gz
Approx 45% complete for E-10_2_val_2.fq.gz
Approx 50% complete for E-10_2_val_2.fq.gz
Approx 55% complete for E-10_2_val_2.fq.gz
Approx 60% complete for E-10_2_val_2.fq.gz
Approx 65% complete for E-10_2_val_2.fq.gz
Approx 70% complete for E-10_2_val_2.fq.gz
Approx 75% complete for E-10_2_val_2.fq.gz
Approx 80% complete for E-10_2_val_2.fq.gz
Approx 85% complete for E-10_2_val_2.fq.gz
Approx 90% complete for E-10_2_val_2.fq.gz
Approx 95% complete for E-10_2_val_2.fq.gz
Analysis complete for E-10_2_val_2.fq.gz
Deleting both intermediate output files E-10_1_trimmed.fq.gz and E-10_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to E-2 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/E-2_1.fastq.gz data/E-2_2.fastq.gz -o results/02.trimgalore/E-2_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/E-2_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-2_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/E-2_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	58	CTGTCTCTTATA	128965	0.04
smallRNA	1	TGGAATTCTCGG	128965	0.00
Illumina	0	AGATCGGAAGAGC	128965	0.00
Using Nextera adapter for trimming (count: 58). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-2_trimgalore/E-2_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-2_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to E-2_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-2_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-2_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.533 s (4.131 µs/read; 14.52 M reads/minute).

=== Summary ===

Total reads processed:                 128,965
Reads with adapters:                     7,768 (6.0%)
Reads written (passing filters):       128,965 (100.0%)

Total basepairs processed:    38,818,465 bp
Quality-trimmed:                 257,735 bp (0.7%)
Total written (filtered):     38,535,913 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 7768 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 54.1%
  C: 11.2%
  G: 19.2%
  T: 15.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3445	32241.2	0	3445
2	1189	8060.3	0	1189
3	2421	2015.1	0	2421
4	634	503.8	0	634
5	17	125.9	0	17
7	2	7.9	0	2
78	2	0.0	1	2
79	1	0.0	1	1
82	1	0.0	1	1
84	2	0.0	1	2
85	2	0.0	1	2
86	3	0.0	1	3
87	1	0.0	1	1
89	1	0.0	1	1
92	1	0.0	1	1
100	1	0.0	1	1
103	1	0.0	1	1
104	2	0.0	1	2
107	1	0.0	1	1
114	1	0.0	1	0 1
117	1	0.0	1	1
118	2	0.0	1	2
121	1	0.0	1	1
127	1	0.0	1	1
132	1	0.0	1	1
138	2	0.0	1	2
142	1	0.0	1	1
143	1	0.0	1	1
146	1	0.0	1	1
150	1	0.0	1	1
152	1	0.0	1	1
156	1	0.0	1	0 1
161	1	0.0	1	1
163	1	0.0	1	1
165	1	0.0	1	1
170	1	0.0	1	1
172	1	0.0	1	1
175	1	0.0	1	1
177	1	0.0	1	1
178	1	0.0	1	1
179	1	0.0	1	1
182	1	0.0	1	1
185	1	0.0	1	1
187	1	0.0	1	1
192	1	0.0	1	1
195	1	0.0	1	1
204	1	0.0	1	1
210	1	0.0	1	1
214	1	0.0	1	1
218	1	0.0	1	1
224	1	0.0	1	1
226	1	0.0	1	1
235	1	0.0	1	1
242	1	0.0	1	1
265	1	0.0	1	1
287	1	0.0	1	1
288	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/E-2_1.fastq.gz
=============================================
128965 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-2_trimgalore/E-2_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-2_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to E-2_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-2_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-2_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.567 s (4.400 µs/read; 13.64 M reads/minute).

=== Summary ===

Total reads processed:                 128,965
Reads with adapters:                    86,174 (66.8%)
Reads written (passing filters):       128,965 (100.0%)

Total basepairs processed:    38,818,465 bp
Quality-trimmed:               3,118,496 bp (8.0%)
Total written (filtered):     35,599,584 bp (91.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 86174 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.0%
  C: 55.5%
  G: 29.0%
  T: 3.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	80104	32241.2	0	80104
2	4369	8060.3	0	4369
3	1502	2015.1	0	1502
4	82	503.8	0	82
5	51	125.9	0	51
6	8	31.5	0	8
7	1	7.9	0	1
32	1	0.0	1	1
45	1	0.0	1	0 1
82	1	0.0	1	1
83	2	0.0	1	2
84	2	0.0	1	2
85	3	0.0	1	3
86	1	0.0	1	1
87	4	0.0	1	4
89	1	0.0	1	1
90	2	0.0	1	2
91	4	0.0	1	4
92	2	0.0	1	2
94	2	0.0	1	2
95	1	0.0	1	1
98	3	0.0	1	3
102	1	0.0	1	1
105	1	0.0	1	1
108	1	0.0	1	1
109	1	0.0	1	1
112	1	0.0	1	1
115	1	0.0	1	1
116	2	0.0	1	2
121	1	0.0	1	1
122	1	0.0	1	1
123	1	0.0	1	1
131	1	0.0	1	1
132	1	0.0	1	1
133	1	0.0	1	1
136	1	0.0	1	1
144	1	0.0	1	1
148	2	0.0	1	2
155	1	0.0	1	1
156	1	0.0	1	1
158	1	0.0	1	1
160	1	0.0	1	1
162	1	0.0	1	1
169	1	0.0	1	1
172	1	0.0	1	1
181	1	0.0	1	0 1
289	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/E-2_2.fastq.gz
=============================================
128965 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E-2_1_trimmed.fq.gz and E-2_2_trimmed.fq.gz
file_1: E-2_1_trimmed.fq.gz, file_2: E-2_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E-2_1_trimmed.fq.gz and E-2_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E-2_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E-2_2_val_2.fq.gz

Total number of sequences analysed: 128965

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 21322 (16.53%)


  >>> Now running FastQC on the validated data E-2_1_val_1.fq.gz<<<

Started analysis of E-2_1_val_1.fq.gz
Approx 5% complete for E-2_1_val_1.fq.gz
Approx 10% complete for E-2_1_val_1.fq.gz
Approx 15% complete for E-2_1_val_1.fq.gz
Approx 20% complete for E-2_1_val_1.fq.gz
Approx 25% complete for E-2_1_val_1.fq.gz
Approx 30% complete for E-2_1_val_1.fq.gz
Approx 35% complete for E-2_1_val_1.fq.gz
Approx 40% complete for E-2_1_val_1.fq.gz
Approx 45% complete for E-2_1_val_1.fq.gz
Approx 50% complete for E-2_1_val_1.fq.gz
Approx 55% complete for E-2_1_val_1.fq.gz
Approx 60% complete for E-2_1_val_1.fq.gz
Approx 65% complete for E-2_1_val_1.fq.gz
Approx 70% complete for E-2_1_val_1.fq.gz
Approx 75% complete for E-2_1_val_1.fq.gz
Approx 80% complete for E-2_1_val_1.fq.gz
Approx 85% complete for E-2_1_val_1.fq.gz
Approx 90% complete for E-2_1_val_1.fq.gz
Approx 95% complete for E-2_1_val_1.fq.gz
Analysis complete for E-2_1_val_1.fq.gz

  >>> Now running FastQC on the validated data E-2_2_val_2.fq.gz<<<

Started analysis of E-2_2_val_2.fq.gz
Approx 5% complete for E-2_2_val_2.fq.gz
Approx 10% complete for E-2_2_val_2.fq.gz
Approx 15% complete for E-2_2_val_2.fq.gz
Approx 20% complete for E-2_2_val_2.fq.gz
Approx 25% complete for E-2_2_val_2.fq.gz
Approx 30% complete for E-2_2_val_2.fq.gz
Approx 35% complete for E-2_2_val_2.fq.gz
Approx 40% complete for E-2_2_val_2.fq.gz
Approx 45% complete for E-2_2_val_2.fq.gz
Approx 50% complete for E-2_2_val_2.fq.gz
Approx 55% complete for E-2_2_val_2.fq.gz
Approx 60% complete for E-2_2_val_2.fq.gz
Approx 65% complete for E-2_2_val_2.fq.gz
Approx 70% complete for E-2_2_val_2.fq.gz
Approx 75% complete for E-2_2_val_2.fq.gz
Approx 80% complete for E-2_2_val_2.fq.gz
Approx 85% complete for E-2_2_val_2.fq.gz
Approx 90% complete for E-2_2_val_2.fq.gz
Approx 95% complete for E-2_2_val_2.fq.gz
Analysis complete for E-2_2_val_2.fq.gz
Deleting both intermediate output files E-2_1_trimmed.fq.gz and E-2_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to E-3 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/E-3_1.fastq.gz data/E-3_2.fastq.gz -o results/02.trimgalore/E-3_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/E-3_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-3_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/E-3_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	73	CTGTCTCTTATA	171510	0.04
smallRNA	0	TGGAATTCTCGG	171510	0.00
Illumina	0	AGATCGGAAGAGC	171510	0.00
Using Nextera adapter for trimming (count: 73). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-3_trimgalore/E-3_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-3_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to E-3_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-3_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-3_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.685 s (3.992 µs/read; 15.03 M reads/minute).

=== Summary ===

Total reads processed:                 171,510
Reads with adapters:                    15,613 (9.1%)
Reads written (passing filters):       171,510 (100.0%)

Total basepairs processed:    51,624,510 bp
Quality-trimmed:                 512,106 bp (1.0%)
Total written (filtered):     51,072,569 bp (98.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 15613 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 51.5%
  C: 14.3%
  G: 23.8%
  T: 10.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	7779	42877.5	0	7779
2	3087	10719.4	0	3087
3	4228	2679.8	0	4228
4	402	670.0	0	402
5	23	167.5	0	23
6	9	41.9	0	9
7	1	10.5	0	1
11	1	0.0	1	1
13	2	0.0	1	1 1
14	4	0.0	1	3 1
15	3	0.0	1	3
26	1	0.0	1	0 1
30	1	0.0	1	1
78	3	0.0	1	3
79	2	0.0	1	2
82	3	0.0	1	3
83	3	0.0	1	3
84	1	0.0	1	1
86	2	0.0	1	2
87	3	0.0	1	3
90	1	0.0	1	1
91	1	0.0	1	0 1
95	1	0.0	1	1
102	1	0.0	1	1
103	1	0.0	1	1
105	2	0.0	1	2
106	1	0.0	1	1
109	1	0.0	1	1
112	1	0.0	1	1
113	1	0.0	1	1
117	1	0.0	1	1
118	2	0.0	1	1 1
121	1	0.0	1	1
134	1	0.0	1	1
145	1	0.0	1	1
155	1	0.0	1	1
156	1	0.0	1	1
160	1	0.0	1	1
162	1	0.0	1	1
165	1	0.0	1	1
167	1	0.0	1	1
168	1	0.0	1	1
174	1	0.0	1	1
177	1	0.0	1	0 1
181	1	0.0	1	1
182	2	0.0	1	1 1
184	1	0.0	1	0 1
186	1	0.0	1	0 1
192	1	0.0	1	1
193	1	0.0	1	1
194	1	0.0	1	1
199	1	0.0	1	1
200	1	0.0	1	1
205	1	0.0	1	1
207	1	0.0	1	0 1
208	1	0.0	1	1
217	2	0.0	1	2
218	1	0.0	1	1
219	1	0.0	1	1
227	1	0.0	1	1
235	1	0.0	1	1
237	1	0.0	1	1
238	1	0.0	1	1
243	1	0.0	1	1
249	1	0.0	1	1
250	1	0.0	1	1
263	1	0.0	1	1
270	1	0.0	1	0 1
274	1	0.0	1	1
288	1	0.0	1	1
290	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/E-3_1.fastq.gz
=============================================
171510 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-3_trimgalore/E-3_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-3_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to E-3_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-3_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-3_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.684 s (3.990 µs/read; 15.04 M reads/minute).

=== Summary ===

Total reads processed:                 171,510
Reads with adapters:                   113,493 (66.2%)
Reads written (passing filters):       171,510 (100.0%)

Total basepairs processed:    51,624,510 bp
Quality-trimmed:               4,324,607 bp (8.4%)
Total written (filtered):     47,167,967 bp (91.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 113493 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.3%
  C: 54.6%
  G: 29.4%
  T: 3.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	105228	42877.5	0	105228
2	5960	10719.4	0	5960
3	1956	2679.8	0	1956
4	144	670.0	0	144
5	86	167.5	0	86
6	43	41.9	0	43
8	2	2.6	0	2
10	2	0.2	1	0 2
13	2	0.0	1	1 1
14	1	0.0	1	1
24	1	0.0	1	0 1
43	1	0.0	1	1
50	1	0.0	1	1
54	1	0.0	1	1
66	3	0.0	1	2 1
67	1	0.0	1	1
73	2	0.0	1	1 1
76	2	0.0	1	1 1
77	2	0.0	1	2
78	1	0.0	1	1
79	4	0.0	1	4
81	1	0.0	1	1
82	1	0.0	1	1
83	3	0.0	1	3
84	2	0.0	1	2
85	1	0.0	1	1
87	1	0.0	1	1
88	3	0.0	1	3
90	2	0.0	1	2
91	1	0.0	1	1
100	1	0.0	1	1
101	1	0.0	1	1
102	2	0.0	1	2
104	2	0.0	1	2
105	1	0.0	1	1
107	1	0.0	1	1
110	1	0.0	1	1
112	1	0.0	1	0 1
114	1	0.0	1	1
121	2	0.0	1	1 1
123	1	0.0	1	1
126	1	0.0	1	1
127	1	0.0	1	1
128	1	0.0	1	1
138	1	0.0	1	1
149	1	0.0	1	1
152	1	0.0	1	1
153	1	0.0	1	1
155	1	0.0	1	1
156	1	0.0	1	1
159	1	0.0	1	1
166	1	0.0	1	1
168	1	0.0	1	1
170	1	0.0	1	0 1
172	1	0.0	1	1
178	1	0.0	1	1
180	1	0.0	1	1
189	1	0.0	1	1
190	1	0.0	1	1
197	1	0.0	1	1
214	1	0.0	1	1
218	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/E-3_2.fastq.gz
=============================================
171510 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E-3_1_trimmed.fq.gz and E-3_2_trimmed.fq.gz
file_1: E-3_1_trimmed.fq.gz, file_2: E-3_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E-3_1_trimmed.fq.gz and E-3_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E-3_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E-3_2_val_2.fq.gz

Total number of sequences analysed: 171510

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 30817 (17.97%)


  >>> Now running FastQC on the validated data E-3_1_val_1.fq.gz<<<

Started analysis of E-3_1_val_1.fq.gz
Approx 5% complete for E-3_1_val_1.fq.gz
Approx 10% complete for E-3_1_val_1.fq.gz
Approx 15% complete for E-3_1_val_1.fq.gz
Approx 20% complete for E-3_1_val_1.fq.gz
Approx 25% complete for E-3_1_val_1.fq.gz
Approx 30% complete for E-3_1_val_1.fq.gz
Approx 35% complete for E-3_1_val_1.fq.gz
Approx 40% complete for E-3_1_val_1.fq.gz
Approx 45% complete for E-3_1_val_1.fq.gz
Approx 50% complete for E-3_1_val_1.fq.gz
Approx 55% complete for E-3_1_val_1.fq.gz
Approx 60% complete for E-3_1_val_1.fq.gz
Approx 65% complete for E-3_1_val_1.fq.gz
Approx 70% complete for E-3_1_val_1.fq.gz
Approx 75% complete for E-3_1_val_1.fq.gz
Approx 80% complete for E-3_1_val_1.fq.gz
Approx 85% complete for E-3_1_val_1.fq.gz
Approx 90% complete for E-3_1_val_1.fq.gz
Approx 95% complete for E-3_1_val_1.fq.gz
Analysis complete for E-3_1_val_1.fq.gz

  >>> Now running FastQC on the validated data E-3_2_val_2.fq.gz<<<

Started analysis of E-3_2_val_2.fq.gz
Approx 5% complete for E-3_2_val_2.fq.gz
Approx 10% complete for E-3_2_val_2.fq.gz
Approx 15% complete for E-3_2_val_2.fq.gz
Approx 20% complete for E-3_2_val_2.fq.gz
Approx 25% complete for E-3_2_val_2.fq.gz
Approx 30% complete for E-3_2_val_2.fq.gz
Approx 35% complete for E-3_2_val_2.fq.gz
Approx 40% complete for E-3_2_val_2.fq.gz
Approx 45% complete for E-3_2_val_2.fq.gz
Approx 50% complete for E-3_2_val_2.fq.gz
Approx 55% complete for E-3_2_val_2.fq.gz
Approx 60% complete for E-3_2_val_2.fq.gz
Approx 65% complete for E-3_2_val_2.fq.gz
Approx 70% complete for E-3_2_val_2.fq.gz
Approx 75% complete for E-3_2_val_2.fq.gz
Approx 80% complete for E-3_2_val_2.fq.gz
Approx 85% complete for E-3_2_val_2.fq.gz
Approx 90% complete for E-3_2_val_2.fq.gz
Approx 95% complete for E-3_2_val_2.fq.gz
Analysis complete for E-3_2_val_2.fq.gz
Deleting both intermediate output files E-3_1_trimmed.fq.gz and E-3_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to E-4 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/E-4_1.fastq.gz data/E-4_2.fastq.gz -o results/02.trimgalore/E-4_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/E-4_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-4_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/E-4_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	118	CTGTCTCTTATA	237316	0.05
Illumina	0	AGATCGGAAGAGC	237316	0.00
smallRNA	0	TGGAATTCTCGG	237316	0.00
Using Nextera adapter for trimming (count: 118). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-4_trimgalore/E-4_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-4_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to E-4_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-4_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-4_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.869 s (3.662 µs/read; 16.39 M reads/minute).

=== Summary ===

Total reads processed:                 237,316
Reads with adapters:                     7,107 (3.0%)
Reads written (passing filters):       237,316 (100.0%)

Total basepairs processed:    71,432,116 bp
Quality-trimmed:                 341,720 bp (0.5%)
Total written (filtered):     71,057,905 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 7107 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 46.8%
  C: 17.1%
  G: 26.3%
  T: 9.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4349	59329.0	0	4349
2	1239	14832.2	0	1239
3	1253	3708.1	0	1253
4	134	927.0	0	134
5	6	231.8	0	6
6	1	57.9	0	1
56	1	0.0	1	0 1
65	1	0.0	1	1
78	3	0.0	1	2 1
79	4	0.0	1	3 1
81	1	0.0	1	1
82	3	0.0	1	3
83	2	0.0	1	2
84	1	0.0	1	1
87	4	0.0	1	4
90	2	0.0	1	2
91	1	0.0	1	1
92	2	0.0	1	2
93	1	0.0	1	1
94	1	0.0	1	1
95	2	0.0	1	2
97	2	0.0	1	2
100	1	0.0	1	1
101	1	0.0	1	1
104	1	0.0	1	1
105	2	0.0	1	2
109	1	0.0	1	1
111	1	0.0	1	0 1
112	1	0.0	1	1
115	1	0.0	1	1
116	1	0.0	1	1
119	2	0.0	1	2
120	1	0.0	1	1
125	2	0.0	1	2
130	1	0.0	1	1
133	1	0.0	1	1
134	1	0.0	1	1
138	2	0.0	1	2
139	1	0.0	1	1
142	1	0.0	1	1
151	1	0.0	1	0 1
153	1	0.0	1	0 1
154	1	0.0	1	1
156	1	0.0	1	1
158	1	0.0	1	1
163	1	0.0	1	1
171	2	0.0	1	2
174	1	0.0	1	1
175	1	0.0	1	1
177	2	0.0	1	2
181	1	0.0	1	1
183	1	0.0	1	0 1
189	1	0.0	1	1
191	2	0.0	1	2
193	2	0.0	1	2
194	2	0.0	1	2
195	1	0.0	1	1
196	1	0.0	1	1
199	1	0.0	1	1
200	3	0.0	1	3
203	1	0.0	1	1
204	1	0.0	1	1
210	1	0.0	1	1
213	1	0.0	1	1
214	1	0.0	1	1
215	1	0.0	1	1
216	1	0.0	1	1
218	1	0.0	1	1
219	5	0.0	1	5
222	1	0.0	1	1
223	1	0.0	1	1
224	2	0.0	1	2
229	1	0.0	1	1
231	1	0.0	1	1
237	1	0.0	1	1
242	1	0.0	1	1
244	2	0.0	1	2
246	1	0.0	1	1
247	1	0.0	1	1
256	1	0.0	1	1
261	1	0.0	1	1
269	1	0.0	1	1
272	1	0.0	1	1
273	1	0.0	1	1
274	1	0.0	1	1
275	2	0.0	1	2
276	1	0.0	1	1
279	2	0.0	1	2
286	1	0.0	1	1
287	1	0.0	1	1
288	2	0.0	1	2
289	1	0.0	1	1
291	4	0.0	1	4

RUN STATISTICS FOR INPUT FILE: data/E-4_1.fastq.gz
=============================================
237316 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-4_trimgalore/E-4_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-4_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to E-4_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-4_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-4_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.921 s (3.882 µs/read; 15.45 M reads/minute).

=== Summary ===

Total reads processed:                 237,316
Reads with adapters:                   158,316 (66.7%)
Reads written (passing filters):       237,316 (100.0%)

Total basepairs processed:    71,432,116 bp
Quality-trimmed:               5,624,825 bp (7.9%)
Total written (filtered):     65,618,749 bp (91.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 158316 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.8%
  C: 55.3%
  G: 29.6%
  T: 3.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	146973	59329.0	0	146973
2	7996	14832.2	0	7996
3	2959	3708.1	0	2959
4	149	927.0	0	149
5	91	231.8	0	91
6	26	57.9	0	26
7	2	14.5	0	2
9	1	0.9	0	0 1
27	1	0.0	1	0 1
37	1	0.0	1	1
42	1	0.0	1	1
48	1	0.0	1	0 1
59	1	0.0	1	1
75	1	0.0	1	0 1
80	2	0.0	1	2
82	4	0.0	1	3 1
83	4	0.0	1	3 1
84	2	0.0	1	2
85	3	0.0	1	3
86	6	0.0	1	5 1
87	5	0.0	1	5
88	3	0.0	1	3
90	4	0.0	1	4
92	3	0.0	1	3
94	2	0.0	1	2
95	2	0.0	1	2
96	3	0.0	1	3
99	2	0.0	1	0 2
101	1	0.0	1	1
105	1	0.0	1	1
108	1	0.0	1	1
114	1	0.0	1	1
115	4	0.0	1	4
117	1	0.0	1	1
118	2	0.0	1	2
119	1	0.0	1	1
122	1	0.0	1	1
124	2	0.0	1	1 1
127	2	0.0	1	2
131	2	0.0	1	2
132	1	0.0	1	1
135	2	0.0	1	2
139	1	0.0	1	1
140	1	0.0	1	1
147	1	0.0	1	1
148	1	0.0	1	1
150	2	0.0	1	2
152	1	0.0	1	1
157	1	0.0	1	0 1
158	1	0.0	1	1
159	1	0.0	1	1
160	1	0.0	1	1
165	1	0.0	1	1
167	1	0.0	1	1
169	2	0.0	1	2
171	1	0.0	1	1
173	2	0.0	1	2
174	1	0.0	1	1
175	1	0.0	1	0 1
177	1	0.0	1	1
179	1	0.0	1	1
180	4	0.0	1	4
182	1	0.0	1	1
184	1	0.0	1	1
186	1	0.0	1	1
187	1	0.0	1	1
193	3	0.0	1	3
194	1	0.0	1	0 1
196	2	0.0	1	1 1
200	1	0.0	1	1
201	1	0.0	1	1
204	1	0.0	1	1
205	1	0.0	1	1
209	1	0.0	1	1
224	1	0.0	1	1
286	1	0.0	1	0 1
290	2	0.0	1	2
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/E-4_2.fastq.gz
=============================================
237316 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E-4_1_trimmed.fq.gz and E-4_2_trimmed.fq.gz
file_1: E-4_1_trimmed.fq.gz, file_2: E-4_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E-4_1_trimmed.fq.gz and E-4_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E-4_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E-4_2_val_2.fq.gz

Total number of sequences analysed: 237316

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 38517 (16.23%)


  >>> Now running FastQC on the validated data E-4_1_val_1.fq.gz<<<

Started analysis of E-4_1_val_1.fq.gz
Approx 5% complete for E-4_1_val_1.fq.gz
Approx 10% complete for E-4_1_val_1.fq.gz
Approx 15% complete for E-4_1_val_1.fq.gz
Approx 20% complete for E-4_1_val_1.fq.gz
Approx 25% complete for E-4_1_val_1.fq.gz
Approx 30% complete for E-4_1_val_1.fq.gz
Approx 35% complete for E-4_1_val_1.fq.gz
Approx 40% complete for E-4_1_val_1.fq.gz
Approx 45% complete for E-4_1_val_1.fq.gz
Approx 50% complete for E-4_1_val_1.fq.gz
Approx 55% complete for E-4_1_val_1.fq.gz
Approx 60% complete for E-4_1_val_1.fq.gz
Approx 65% complete for E-4_1_val_1.fq.gz
Approx 70% complete for E-4_1_val_1.fq.gz
Approx 75% complete for E-4_1_val_1.fq.gz
Approx 80% complete for E-4_1_val_1.fq.gz
Approx 85% complete for E-4_1_val_1.fq.gz
Approx 90% complete for E-4_1_val_1.fq.gz
Approx 95% complete for E-4_1_val_1.fq.gz
Analysis complete for E-4_1_val_1.fq.gz

  >>> Now running FastQC on the validated data E-4_2_val_2.fq.gz<<<

Started analysis of E-4_2_val_2.fq.gz
Approx 5% complete for E-4_2_val_2.fq.gz
Approx 10% complete for E-4_2_val_2.fq.gz
Approx 15% complete for E-4_2_val_2.fq.gz
Approx 20% complete for E-4_2_val_2.fq.gz
Approx 25% complete for E-4_2_val_2.fq.gz
Approx 30% complete for E-4_2_val_2.fq.gz
Approx 35% complete for E-4_2_val_2.fq.gz
Approx 40% complete for E-4_2_val_2.fq.gz
Approx 45% complete for E-4_2_val_2.fq.gz
Approx 50% complete for E-4_2_val_2.fq.gz
Approx 55% complete for E-4_2_val_2.fq.gz
Approx 60% complete for E-4_2_val_2.fq.gz
Approx 65% complete for E-4_2_val_2.fq.gz
Approx 70% complete for E-4_2_val_2.fq.gz
Approx 75% complete for E-4_2_val_2.fq.gz
Approx 80% complete for E-4_2_val_2.fq.gz
Approx 85% complete for E-4_2_val_2.fq.gz
Approx 90% complete for E-4_2_val_2.fq.gz
Approx 95% complete for E-4_2_val_2.fq.gz
Analysis complete for E-4_2_val_2.fq.gz
Deleting both intermediate output files E-4_1_trimmed.fq.gz and E-4_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to E-5 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/E-5_1.fastq.gz data/E-5_2.fastq.gz -o results/02.trimgalore/E-5_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/E-5_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-5_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/E-5_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	81	CTGTCTCTTATA	138292	0.06
smallRNA	0	TGGAATTCTCGG	138292	0.00
Illumina	0	AGATCGGAAGAGC	138292	0.00
Using Nextera adapter for trimming (count: 81). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-5_trimgalore/E-5_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-5_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to E-5_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-5_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-5_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.545 s (3.944 µs/read; 15.21 M reads/minute).

=== Summary ===

Total reads processed:                 138,292
Reads with adapters:                     4,951 (3.6%)
Reads written (passing filters):       138,292 (100.0%)

Total basepairs processed:    41,625,892 bp
Quality-trimmed:                 184,779 bp (0.4%)
Total written (filtered):     41,418,021 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 4951 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 44.3%
  C: 18.9%
  G: 22.0%
  T: 14.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3021	34573.0	0	3021
2	859	8643.2	0	859
3	904	2160.8	0	904
4	58	540.2	0	58
5	15	135.1	0	15
6	2	33.8	0	2
24	1	0.0	1	0 1
45	1	0.0	1	0 1
78	1	0.0	1	0 1
79	1	0.0	1	1
80	3	0.0	1	2 1
84	2	0.0	1	2
86	2	0.0	1	2
87	1	0.0	1	1
88	1	0.0	1	1
89	2	0.0	1	2
90	1	0.0	1	1
91	2	0.0	1	2
92	1	0.0	1	1
93	2	0.0	1	1 1
94	1	0.0	1	1
99	2	0.0	1	2
100	2	0.0	1	2
102	2	0.0	1	1 1
103	1	0.0	1	1
104	1	0.0	1	1
114	1	0.0	1	1
116	1	0.0	1	1
118	1	0.0	1	1
121	4	0.0	1	4
128	1	0.0	1	1
132	1	0.0	1	1
144	1	0.0	1	1
151	1	0.0	1	1
155	2	0.0	1	1 1
157	2	0.0	1	2
163	1	0.0	1	1
164	1	0.0	1	1
166	1	0.0	1	1
169	1	0.0	1	1
173	2	0.0	1	2
176	1	0.0	1	1
178	1	0.0	1	1
180	1	0.0	1	1
182	1	0.0	1	1
184	1	0.0	1	0 1
186	1	0.0	1	1
194	2	0.0	1	2
196	1	0.0	1	1
199	2	0.0	1	1 1
201	1	0.0	1	1
206	1	0.0	1	1
216	1	0.0	1	1
217	1	0.0	1	1
219	2	0.0	1	2
220	1	0.0	1	1
225	1	0.0	1	1
226	1	0.0	1	0 1
230	1	0.0	1	1
235	1	0.0	1	1
239	1	0.0	1	1
245	1	0.0	1	1
249	1	0.0	1	1
250	1	0.0	1	1
251	1	0.0	1	1
264	1	0.0	1	1
273	1	0.0	1	1
275	1	0.0	1	1
278	1	0.0	1	1
284	1	0.0	1	1
285	1	0.0	1	1
286	1	0.0	1	1
288	2	0.0	1	2
290	1	0.0	1	1
291	4	0.0	1	3 1

RUN STATISTICS FOR INPUT FILE: data/E-5_1.fastq.gz
=============================================
138292 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-5_trimgalore/E-5_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-5_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to E-5_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-5_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-5_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.621 s (4.487 µs/read; 13.37 M reads/minute).

=== Summary ===

Total reads processed:                 138,292
Reads with adapters:                    92,790 (67.1%)
Reads written (passing filters):       138,292 (100.0%)

Total basepairs processed:    41,625,892 bp
Quality-trimmed:               3,371,409 bp (8.1%)
Total written (filtered):     38,143,686 bp (91.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 92790 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.9%
  C: 57.1%
  G: 27.8%
  T: 3.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	86356	34573.0	0	86356
2	4651	8643.2	0	4651
3	1543	2160.8	0	1543
4	73	540.2	0	73
5	68	135.1	0	68
6	18	33.8	0	18
15	1	0.0	1	0 1
41	1	0.0	1	1
47	1	0.0	1	1
81	1	0.0	1	1
82	1	0.0	1	1
83	4	0.0	1	4
84	7	0.0	1	6 1
85	2	0.0	1	1 1
86	5	0.0	1	4 1
87	4	0.0	1	4
88	4	0.0	1	4
89	2	0.0	1	2
91	1	0.0	1	1
92	1	0.0	1	1
95	2	0.0	1	2
98	1	0.0	1	1
99	1	0.0	1	1
100	1	0.0	1	1
102	1	0.0	1	1
103	1	0.0	1	1
104	1	0.0	1	1
105	1	0.0	1	1
107	1	0.0	1	1
111	1	0.0	1	1
115	2	0.0	1	1 1
123	1	0.0	1	1
127	1	0.0	1	0 1
129	1	0.0	1	1
132	1	0.0	1	1
135	1	0.0	1	1
136	1	0.0	1	1
138	1	0.0	1	1
142	1	0.0	1	1
148	1	0.0	1	1
151	1	0.0	1	1
160	1	0.0	1	1
161	2	0.0	1	2
162	1	0.0	1	0 1
167	1	0.0	1	1
168	1	0.0	1	1
170	1	0.0	1	1
171	2	0.0	1	2
174	1	0.0	1	1
175	1	0.0	1	1
176	1	0.0	1	1
179	1	0.0	1	1
187	1	0.0	1	1
190	1	0.0	1	1
191	2	0.0	1	2
192	1	0.0	1	1
193	2	0.0	1	2
194	1	0.0	1	1
198	1	0.0	1	1
289	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/E-5_2.fastq.gz
=============================================
138292 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E-5_1_trimmed.fq.gz and E-5_2_trimmed.fq.gz
file_1: E-5_1_trimmed.fq.gz, file_2: E-5_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E-5_1_trimmed.fq.gz and E-5_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E-5_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E-5_2_val_2.fq.gz

Total number of sequences analysed: 138292

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 23774 (17.19%)


  >>> Now running FastQC on the validated data E-5_1_val_1.fq.gz<<<

Started analysis of E-5_1_val_1.fq.gz
Approx 5% complete for E-5_1_val_1.fq.gz
Approx 10% complete for E-5_1_val_1.fq.gz
Approx 15% complete for E-5_1_val_1.fq.gz
Approx 20% complete for E-5_1_val_1.fq.gz
Approx 25% complete for E-5_1_val_1.fq.gz
Approx 30% complete for E-5_1_val_1.fq.gz
Approx 35% complete for E-5_1_val_1.fq.gz
Approx 40% complete for E-5_1_val_1.fq.gz
Approx 45% complete for E-5_1_val_1.fq.gz
Approx 50% complete for E-5_1_val_1.fq.gz
Approx 55% complete for E-5_1_val_1.fq.gz
Approx 60% complete for E-5_1_val_1.fq.gz
Approx 65% complete for E-5_1_val_1.fq.gz
Approx 70% complete for E-5_1_val_1.fq.gz
Approx 75% complete for E-5_1_val_1.fq.gz
Approx 80% complete for E-5_1_val_1.fq.gz
Approx 85% complete for E-5_1_val_1.fq.gz
Approx 90% complete for E-5_1_val_1.fq.gz
Approx 95% complete for E-5_1_val_1.fq.gz
Analysis complete for E-5_1_val_1.fq.gz

  >>> Now running FastQC on the validated data E-5_2_val_2.fq.gz<<<

Started analysis of E-5_2_val_2.fq.gz
Approx 5% complete for E-5_2_val_2.fq.gz
Approx 10% complete for E-5_2_val_2.fq.gz
Approx 15% complete for E-5_2_val_2.fq.gz
Approx 20% complete for E-5_2_val_2.fq.gz
Approx 25% complete for E-5_2_val_2.fq.gz
Approx 30% complete for E-5_2_val_2.fq.gz
Approx 35% complete for E-5_2_val_2.fq.gz
Approx 40% complete for E-5_2_val_2.fq.gz
Approx 45% complete for E-5_2_val_2.fq.gz
Approx 50% complete for E-5_2_val_2.fq.gz
Approx 55% complete for E-5_2_val_2.fq.gz
Approx 60% complete for E-5_2_val_2.fq.gz
Approx 65% complete for E-5_2_val_2.fq.gz
Approx 70% complete for E-5_2_val_2.fq.gz
Approx 75% complete for E-5_2_val_2.fq.gz
Approx 80% complete for E-5_2_val_2.fq.gz
Approx 85% complete for E-5_2_val_2.fq.gz
Approx 90% complete for E-5_2_val_2.fq.gz
Approx 95% complete for E-5_2_val_2.fq.gz
Analysis complete for E-5_2_val_2.fq.gz
Deleting both intermediate output files E-5_1_trimmed.fq.gz and E-5_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to E-6 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/E-6_1.fastq.gz data/E-6_2.fastq.gz -o results/02.trimgalore/E-6_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/E-6_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-6_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/E-6_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	56	CTGTCTCTTATA	144935	0.04
Illumina	0	AGATCGGAAGAGC	144935	0.00
smallRNA	0	TGGAATTCTCGG	144935	0.00
Using Nextera adapter for trimming (count: 56). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-6_trimgalore/E-6_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-6_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to E-6_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-6_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-6_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.577 s (3.984 µs/read; 15.06 M reads/minute).

=== Summary ===

Total reads processed:                 144,935
Reads with adapters:                     3,115 (2.1%)
Reads written (passing filters):       144,935 (100.0%)

Total basepairs processed:    43,625,435 bp
Quality-trimmed:                 155,973 bp (0.4%)
Total written (filtered):     43,454,362 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 3115 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 57.7%
  C: 15.2%
  G: 20.0%
  T: 7.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	1641	36233.8	0	1641
2	610	9058.4	0	610
3	746	2264.6	0	746
4	58	566.2	0	58
5	1	141.5	0	1
34	1	0.0	1	0 1
78	2	0.0	1	2
79	4	0.0	1	4
82	1	0.0	1	1
83	1	0.0	1	1
88	1	0.0	1	1
94	1	0.0	1	1
98	1	0.0	1	1
99	1	0.0	1	1
107	1	0.0	1	1
110	1	0.0	1	1
113	1	0.0	1	1
115	2	0.0	1	2
117	1	0.0	1	1
118	1	0.0	1	1
127	2	0.0	1	2
133	1	0.0	1	1
134	1	0.0	1	1
135	1	0.0	1	1
139	2	0.0	1	2
161	1	0.0	1	1
163	1	0.0	1	1
165	2	0.0	1	2
168	1	0.0	1	1
171	1	0.0	1	0 1
174	1	0.0	1	1
175	1	0.0	1	1
176	1	0.0	1	1
189	1	0.0	1	1
191	2	0.0	1	2
209	1	0.0	1	1
214	1	0.0	1	1
216	1	0.0	1	1
218	2	0.0	1	2
222	1	0.0	1	0 1
226	1	0.0	1	1
230	1	0.0	1	1
232	1	0.0	1	1
238	1	0.0	1	1
243	1	0.0	1	1
244	1	0.0	1	1
250	1	0.0	1	1
252	1	0.0	1	1
254	1	0.0	1	1
279	1	0.0	1	1
285	1	0.0	1	1
286	1	0.0	1	1
290	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/E-6_1.fastq.gz
=============================================
144935 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-6_trimgalore/E-6_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-6_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to E-6_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-6_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-6_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.598 s (4.127 µs/read; 14.54 M reads/minute).

=== Summary ===

Total reads processed:                 144,935
Reads with adapters:                    98,002 (67.6%)
Reads written (passing filters):       144,935 (100.0%)

Total basepairs processed:    43,625,435 bp
Quality-trimmed:               2,983,269 bp (6.8%)
Total written (filtered):     40,528,307 bp (92.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 98002 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.3%
  C: 57.2%
  G: 29.7%
  T: 2.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	91450	36233.8	0	91450
2	4503	9058.4	0	4503
3	1823	2264.6	0	1823
4	88	566.2	0	88
5	57	141.5	0	57
6	23	35.4	0	23
23	1	0.0	1	0 1
42	1	0.0	1	1
44	2	0.0	1	1 1
48	1	0.0	1	0 1
75	1	0.0	1	1
82	2	0.0	1	2
83	3	0.0	1	3
84	3	0.0	1	3
85	1	0.0	1	1
88	3	0.0	1	3
89	2	0.0	1	1 1
90	1	0.0	1	1
93	2	0.0	1	2
96	1	0.0	1	1
97	1	0.0	1	1
98	1	0.0	1	1
100	1	0.0	1	1
104	1	0.0	1	1
106	1	0.0	1	1
108	1	0.0	1	1
111	1	0.0	1	1
115	1	0.0	1	1
118	1	0.0	1	1
123	1	0.0	1	1
129	1	0.0	1	1
139	1	0.0	1	1
144	2	0.0	1	1 1
148	1	0.0	1	1
157	1	0.0	1	1
158	1	0.0	1	0 1
169	2	0.0	1	2
170	1	0.0	1	1
171	2	0.0	1	2
173	1	0.0	1	1
174	1	0.0	1	0 1
177	1	0.0	1	1
179	1	0.0	1	1
190	2	0.0	1	2
193	1	0.0	1	1
194	1	0.0	1	1
195	1	0.0	1	0 1
204	1	0.0	1	1
213	1	0.0	1	1
288	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/E-6_2.fastq.gz
=============================================
144935 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E-6_1_trimmed.fq.gz and E-6_2_trimmed.fq.gz
file_1: E-6_1_trimmed.fq.gz, file_2: E-6_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E-6_1_trimmed.fq.gz and E-6_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E-6_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E-6_2_val_2.fq.gz

Total number of sequences analysed: 144935

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 19363 (13.36%)


  >>> Now running FastQC on the validated data E-6_1_val_1.fq.gz<<<

Started analysis of E-6_1_val_1.fq.gz
Approx 5% complete for E-6_1_val_1.fq.gz
Approx 10% complete for E-6_1_val_1.fq.gz
Approx 15% complete for E-6_1_val_1.fq.gz
Approx 20% complete for E-6_1_val_1.fq.gz
Approx 25% complete for E-6_1_val_1.fq.gz
Approx 30% complete for E-6_1_val_1.fq.gz
Approx 35% complete for E-6_1_val_1.fq.gz
Approx 40% complete for E-6_1_val_1.fq.gz
Approx 45% complete for E-6_1_val_1.fq.gz
Approx 50% complete for E-6_1_val_1.fq.gz
Approx 55% complete for E-6_1_val_1.fq.gz
Approx 60% complete for E-6_1_val_1.fq.gz
Approx 65% complete for E-6_1_val_1.fq.gz
Approx 70% complete for E-6_1_val_1.fq.gz
Approx 75% complete for E-6_1_val_1.fq.gz
Approx 80% complete for E-6_1_val_1.fq.gz
Approx 85% complete for E-6_1_val_1.fq.gz
Approx 90% complete for E-6_1_val_1.fq.gz
Approx 95% complete for E-6_1_val_1.fq.gz
Analysis complete for E-6_1_val_1.fq.gz

  >>> Now running FastQC on the validated data E-6_2_val_2.fq.gz<<<

Started analysis of E-6_2_val_2.fq.gz
Approx 5% complete for E-6_2_val_2.fq.gz
Approx 10% complete for E-6_2_val_2.fq.gz
Approx 15% complete for E-6_2_val_2.fq.gz
Approx 20% complete for E-6_2_val_2.fq.gz
Approx 25% complete for E-6_2_val_2.fq.gz
Approx 30% complete for E-6_2_val_2.fq.gz
Approx 35% complete for E-6_2_val_2.fq.gz
Approx 40% complete for E-6_2_val_2.fq.gz
Approx 45% complete for E-6_2_val_2.fq.gz
Approx 50% complete for E-6_2_val_2.fq.gz
Approx 55% complete for E-6_2_val_2.fq.gz
Approx 60% complete for E-6_2_val_2.fq.gz
Approx 65% complete for E-6_2_val_2.fq.gz
Approx 70% complete for E-6_2_val_2.fq.gz
Approx 75% complete for E-6_2_val_2.fq.gz
Approx 80% complete for E-6_2_val_2.fq.gz
Approx 85% complete for E-6_2_val_2.fq.gz
Approx 90% complete for E-6_2_val_2.fq.gz
Approx 95% complete for E-6_2_val_2.fq.gz
Analysis complete for E-6_2_val_2.fq.gz
Deleting both intermediate output files E-6_1_trimmed.fq.gz and E-6_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to E-7 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/E-7_1.fastq.gz data/E-7_2.fastq.gz -o results/02.trimgalore/E-7_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/E-7_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-7_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/E-7_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	62	CTGTCTCTTATA	148834	0.04
smallRNA	0	TGGAATTCTCGG	148834	0.00
Illumina	0	AGATCGGAAGAGC	148834	0.00
Using Nextera adapter for trimming (count: 62). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-7_trimgalore/E-7_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-7_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to E-7_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-7_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-7_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.573 s (3.847 µs/read; 15.60 M reads/minute).

=== Summary ===

Total reads processed:                 148,834
Reads with adapters:                     7,539 (5.1%)
Reads written (passing filters):       148,834 (100.0%)

Total basepairs processed:    44,799,034 bp
Quality-trimmed:                 190,494 bp (0.4%)
Total written (filtered):     44,584,283 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 7539 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 76.8%
  C: 5.4%
  G: 12.4%
  T: 5.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	1744	37208.5	0	1744
2	1091	9302.1	0	1091
3	4482	2325.5	0	4482
4	156	581.4	0	156
5	1	145.3	0	1
34	1	0.0	1	0 1
54	1	0.0	1	1
70	1	0.0	1	1
71	1	0.0	1	1
72	1	0.0	1	1
73	1	0.0	1	1
75	1	0.0	1	1
76	2	0.0	1	2
77	1	0.0	1	1
78	17	0.0	1	17
79	11	0.0	1	10 1
80	3	0.0	1	3
81	1	0.0	1	1
82	2	0.0	1	2
83	2	0.0	1	2
85	1	0.0	1	1
86	1	0.0	1	1
91	1	0.0	1	1
98	1	0.0	1	1
115	5	0.0	1	5
116	1	0.0	1	1
118	1	0.0	1	1
126	1	0.0	1	1
156	1	0.0	1	1
184	1	0.0	1	1
196	1	0.0	1	0 1
198	1	0.0	1	1
205	1	0.0	1	1
210	1	0.0	1	1
288	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/E-7_1.fastq.gz
=============================================
148834 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-7_trimgalore/E-7_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-7_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to E-7_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-7_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-7_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.631 s (4.237 µs/read; 14.16 M reads/minute).

=== Summary ===

Total reads processed:                 148,834
Reads with adapters:                   102,847 (69.1%)
Reads written (passing filters):       148,834 (100.0%)

Total basepairs processed:    44,799,034 bp
Quality-trimmed:               3,509,459 bp (7.8%)
Total written (filtered):     41,174,623 bp (91.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 102847 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.3%
  C: 59.4%
  G: 26.1%
  T: 4.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	96173	37208.5	0	96173
2	4897	9302.1	0	4897
3	1580	2325.5	0	1580
4	70	581.4	0	70
5	47	145.3	0	47
6	20	36.3	0	20
12	1	0.0	1	1
14	1	0.0	1	1
16	2	0.0	1	1 1
29	2	0.0	1	1 1
31	1	0.0	1	1
32	1	0.0	1	1
33	1	0.0	1	1
34	3	0.0	1	3
37	2	0.0	1	2
39	3	0.0	1	3
40	2	0.0	1	2
41	5	0.0	1	5
42	1	0.0	1	1
44	3	0.0	1	3
45	1	0.0	1	0 1
46	1	0.0	1	0 1
47	3	0.0	1	3
48	5	0.0	1	3 2
49	2	0.0	1	2
50	1	0.0	1	1
54	1	0.0	1	1
57	1	0.0	1	1
79	1	0.0	1	1
81	1	0.0	1	1
83	1	0.0	1	0 1
86	1	0.0	1	0 1
87	1	0.0	1	1
93	1	0.0	1	0 1
96	1	0.0	1	1
101	1	0.0	1	1
113	1	0.0	1	1
114	1	0.0	1	1
121	1	0.0	1	1
122	2	0.0	1	2
128	1	0.0	1	1
141	1	0.0	1	1
148	1	0.0	1	1
200	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: data/E-7_2.fastq.gz
=============================================
148834 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E-7_1_trimmed.fq.gz and E-7_2_trimmed.fq.gz
file_1: E-7_1_trimmed.fq.gz, file_2: E-7_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E-7_1_trimmed.fq.gz and E-7_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E-7_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E-7_2_val_2.fq.gz

Total number of sequences analysed: 148834

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 25226 (16.95%)


  >>> Now running FastQC on the validated data E-7_1_val_1.fq.gz<<<

Started analysis of E-7_1_val_1.fq.gz
Approx 5% complete for E-7_1_val_1.fq.gz
Approx 10% complete for E-7_1_val_1.fq.gz
Approx 15% complete for E-7_1_val_1.fq.gz
Approx 20% complete for E-7_1_val_1.fq.gz
Approx 25% complete for E-7_1_val_1.fq.gz
Approx 30% complete for E-7_1_val_1.fq.gz
Approx 35% complete for E-7_1_val_1.fq.gz
Approx 40% complete for E-7_1_val_1.fq.gz
Approx 45% complete for E-7_1_val_1.fq.gz
Approx 50% complete for E-7_1_val_1.fq.gz
Approx 55% complete for E-7_1_val_1.fq.gz
Approx 60% complete for E-7_1_val_1.fq.gz
Approx 65% complete for E-7_1_val_1.fq.gz
Approx 70% complete for E-7_1_val_1.fq.gz
Approx 75% complete for E-7_1_val_1.fq.gz
Approx 80% complete for E-7_1_val_1.fq.gz
Approx 85% complete for E-7_1_val_1.fq.gz
Approx 90% complete for E-7_1_val_1.fq.gz
Approx 95% complete for E-7_1_val_1.fq.gz
Analysis complete for E-7_1_val_1.fq.gz

  >>> Now running FastQC on the validated data E-7_2_val_2.fq.gz<<<

Started analysis of E-7_2_val_2.fq.gz
Approx 5% complete for E-7_2_val_2.fq.gz
Approx 10% complete for E-7_2_val_2.fq.gz
Approx 15% complete for E-7_2_val_2.fq.gz
Approx 20% complete for E-7_2_val_2.fq.gz
Approx 25% complete for E-7_2_val_2.fq.gz
Approx 30% complete for E-7_2_val_2.fq.gz
Approx 35% complete for E-7_2_val_2.fq.gz
Approx 40% complete for E-7_2_val_2.fq.gz
Approx 45% complete for E-7_2_val_2.fq.gz
Approx 50% complete for E-7_2_val_2.fq.gz
Approx 55% complete for E-7_2_val_2.fq.gz
Approx 60% complete for E-7_2_val_2.fq.gz
Approx 65% complete for E-7_2_val_2.fq.gz
Approx 70% complete for E-7_2_val_2.fq.gz
Approx 75% complete for E-7_2_val_2.fq.gz
Approx 80% complete for E-7_2_val_2.fq.gz
Approx 85% complete for E-7_2_val_2.fq.gz
Approx 90% complete for E-7_2_val_2.fq.gz
Approx 95% complete for E-7_2_val_2.fq.gz
Analysis complete for E-7_2_val_2.fq.gz
Deleting both intermediate output files E-7_1_trimmed.fq.gz and E-7_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to E-8 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/E-8_1.fastq.gz data/E-8_2.fastq.gz -o results/02.trimgalore/E-8_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/E-8_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-8_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/E-8_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	156	CTGTCTCTTATA	144065	0.11
Illumina	0	AGATCGGAAGAGC	144065	0.00
smallRNA	0	TGGAATTCTCGG	144065	0.00
Using Nextera adapter for trimming (count: 156). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-8_trimgalore/E-8_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-8_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to E-8_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-8_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-8_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.585 s (4.060 µs/read; 14.78 M reads/minute).

=== Summary ===

Total reads processed:                 144,065
Reads with adapters:                    10,359 (7.2%)
Reads written (passing filters):       144,065 (100.0%)

Total basepairs processed:    43,363,565 bp
Quality-trimmed:                 274,246 bp (0.6%)
Total written (filtered):     43,042,815 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 10359 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 47.1%
  C: 16.2%
  G: 23.1%
  T: 13.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	5558	36016.2	0	5558
2	1993	9004.1	0	1993
3	2361	2251.0	0	2361
4	212	562.8	0	212
5	56	140.7	0	56
6	9	35.2	0	9
7	7	8.8	0	7
26	1	0.0	1	1
35	1	0.0	1	0 1
50	1	0.0	1	0 1
74	1	0.0	1	1
78	1	0.0	1	1
79	2	0.0	1	2
81	2	0.0	1	1 1
82	4	0.0	1	4
84	2	0.0	1	2
85	1	0.0	1	1
86	1	0.0	1	1
90	1	0.0	1	1
91	1	0.0	1	1
93	2	0.0	1	2
94	3	0.0	1	3
96	2	0.0	1	2
97	1	0.0	1	1
102	1	0.0	1	1
103	1	0.0	1	1
104	2	0.0	1	2
107	1	0.0	1	1
108	1	0.0	1	1
110	2	0.0	1	2
112	2	0.0	1	2
113	1	0.0	1	1
117	1	0.0	1	1
118	2	0.0	1	2
119	1	0.0	1	1
121	1	0.0	1	1
122	1	0.0	1	1
125	1	0.0	1	1
131	1	0.0	1	1
132	2	0.0	1	2
135	1	0.0	1	1
139	1	0.0	1	1
140	1	0.0	1	1
141	2	0.0	1	2
143	1	0.0	1	1
146	1	0.0	1	1
147	1	0.0	1	1
148	1	0.0	1	1
151	1	0.0	1	1
152	2	0.0	1	2
153	2	0.0	1	2
155	1	0.0	1	1
157	1	0.0	1	1
158	2	0.0	1	2
160	1	0.0	1	1
161	3	0.0	1	3
162	1	0.0	1	1
165	1	0.0	1	0 1
166	2	0.0	1	2
168	1	0.0	1	1
169	1	0.0	1	1
170	1	0.0	1	1
171	1	0.0	1	1
173	1	0.0	1	1
175	1	0.0	1	1
178	1	0.0	1	1
179	1	0.0	1	1
181	1	0.0	1	1
183	2	0.0	1	1 1
186	1	0.0	1	1
187	1	0.0	1	1
190	2	0.0	1	2
191	1	0.0	1	1
192	1	0.0	1	1
195	1	0.0	1	1
199	1	0.0	1	1
200	2	0.0	1	2
201	2	0.0	1	2
202	1	0.0	1	1
203	2	0.0	1	2
206	5	0.0	1	5
207	1	0.0	1	1
211	1	0.0	1	1
212	1	0.0	1	1
214	1	0.0	1	1
215	2	0.0	1	2
216	3	0.0	1	3
217	1	0.0	1	1
218	3	0.0	1	3
219	1	0.0	1	1
221	1	0.0	1	1
222	1	0.0	1	1
224	1	0.0	1	1
226	2	0.0	1	2
227	1	0.0	1	1
228	1	0.0	1	1
229	2	0.0	1	2
230	2	0.0	1	1 1
232	2	0.0	1	2
235	1	0.0	1	1
236	3	0.0	1	3
238	1	0.0	1	1
239	1	0.0	1	1
240	1	0.0	1	1
241	1	0.0	1	1
245	2	0.0	1	2
246	1	0.0	1	1
248	1	0.0	1	1
249	1	0.0	1	1
263	1	0.0	1	1
266	1	0.0	1	1
272	1	0.0	1	1
274	2	0.0	1	1 1
275	2	0.0	1	2
282	1	0.0	1	1
285	1	0.0	1	1
286	2	0.0	1	2
288	2	0.0	1	2
289	1	0.0	1	1
290	2	0.0	1	2
291	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/E-8_1.fastq.gz
=============================================
144065 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-8_trimgalore/E-8_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-8_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to E-8_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-8_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-8_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.626 s (4.348 µs/read; 13.80 M reads/minute).

=== Summary ===

Total reads processed:                 144,065
Reads with adapters:                    97,447 (67.6%)
Reads written (passing filters):       144,065 (100.0%)

Total basepairs processed:    43,363,565 bp
Quality-trimmed:               3,563,427 bp (8.2%)
Total written (filtered):     39,674,694 bp (91.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 97447 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.6%
  C: 57.4%
  G: 27.2%
  T: 3.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	90569	36016.2	0	90569
2	4986	9004.1	0	4986
3	1540	2251.0	0	1540
4	125	562.8	0	125
5	55	140.7	0	55
6	18	35.2	0	18
7	1	8.8	0	1
26	1	0.0	1	0 1
35	1	0.0	1	1
50	1	0.0	1	1
75	1	0.0	1	1
83	4	0.0	1	3 1
84	6	0.0	1	5 1
85	3	0.0	1	3
86	7	0.0	1	6 1
87	2	0.0	1	1 1
88	9	0.0	1	9
89	6	0.0	1	4 2
90	1	0.0	1	1
91	4	0.0	1	4
92	4	0.0	1	4
93	4	0.0	1	4
96	4	0.0	1	4
97	1	0.0	1	1
98	1	0.0	1	1
99	1	0.0	1	0 1
102	1	0.0	1	1
103	2	0.0	1	1 1
106	4	0.0	1	3 1
107	4	0.0	1	4
108	1	0.0	1	1
109	2	0.0	1	2
110	1	0.0	1	1
111	1	0.0	1	1
112	3	0.0	1	3
114	1	0.0	1	1
117	2	0.0	1	2
119	2	0.0	1	2
120	4	0.0	1	4
121	2	0.0	1	2
123	1	0.0	1	1
124	2	0.0	1	2
125	1	0.0	1	1
126	1	0.0	1	1
128	1	0.0	1	1
130	1	0.0	1	1
131	2	0.0	1	2
134	1	0.0	1	1
135	2	0.0	1	2
139	2	0.0	1	2
140	1	0.0	1	1
143	2	0.0	1	1 1
145	1	0.0	1	1
146	1	0.0	1	1
148	1	0.0	1	1
149	1	0.0	1	1
150	1	0.0	1	1
151	1	0.0	1	1
152	1	0.0	1	1
155	2	0.0	1	2
159	1	0.0	1	1
161	1	0.0	1	1
162	1	0.0	1	1
165	2	0.0	1	2
166	2	0.0	1	2
167	2	0.0	1	1 1
168	1	0.0	1	1
169	1	0.0	1	1
170	1	0.0	1	1
179	1	0.0	1	1
180	3	0.0	1	3
185	1	0.0	1	0 1
188	1	0.0	1	1
190	1	0.0	1	1
191	1	0.0	1	1
196	1	0.0	1	1
200	1	0.0	1	1
201	2	0.0	1	2
204	1	0.0	1	1
206	1	0.0	1	1
207	1	0.0	1	1
214	1	0.0	1	1
217	1	0.0	1	1
218	1	0.0	1	1
222	1	0.0	1	0 1
287	1	0.0	1	1
288	1	0.0	1	1
290	2	0.0	1	2
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/E-8_2.fastq.gz
=============================================
144065 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E-8_1_trimmed.fq.gz and E-8_2_trimmed.fq.gz
file_1: E-8_1_trimmed.fq.gz, file_2: E-8_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E-8_1_trimmed.fq.gz and E-8_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E-8_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E-8_2_val_2.fq.gz

Total number of sequences analysed: 144065

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 25057 (17.39%)


  >>> Now running FastQC on the validated data E-8_1_val_1.fq.gz<<<

Started analysis of E-8_1_val_1.fq.gz
Approx 5% complete for E-8_1_val_1.fq.gz
Approx 10% complete for E-8_1_val_1.fq.gz
Approx 15% complete for E-8_1_val_1.fq.gz
Approx 20% complete for E-8_1_val_1.fq.gz
Approx 25% complete for E-8_1_val_1.fq.gz
Approx 30% complete for E-8_1_val_1.fq.gz
Approx 35% complete for E-8_1_val_1.fq.gz
Approx 40% complete for E-8_1_val_1.fq.gz
Approx 45% complete for E-8_1_val_1.fq.gz
Approx 50% complete for E-8_1_val_1.fq.gz
Approx 55% complete for E-8_1_val_1.fq.gz
Approx 60% complete for E-8_1_val_1.fq.gz
Approx 65% complete for E-8_1_val_1.fq.gz
Approx 70% complete for E-8_1_val_1.fq.gz
Approx 75% complete for E-8_1_val_1.fq.gz
Approx 80% complete for E-8_1_val_1.fq.gz
Approx 85% complete for E-8_1_val_1.fq.gz
Approx 90% complete for E-8_1_val_1.fq.gz
Approx 95% complete for E-8_1_val_1.fq.gz
Analysis complete for E-8_1_val_1.fq.gz

  >>> Now running FastQC on the validated data E-8_2_val_2.fq.gz<<<

Started analysis of E-8_2_val_2.fq.gz
Approx 5% complete for E-8_2_val_2.fq.gz
Approx 10% complete for E-8_2_val_2.fq.gz
Approx 15% complete for E-8_2_val_2.fq.gz
Approx 20% complete for E-8_2_val_2.fq.gz
Approx 25% complete for E-8_2_val_2.fq.gz
Approx 30% complete for E-8_2_val_2.fq.gz
Approx 35% complete for E-8_2_val_2.fq.gz
Approx 40% complete for E-8_2_val_2.fq.gz
Approx 45% complete for E-8_2_val_2.fq.gz
Approx 50% complete for E-8_2_val_2.fq.gz
Approx 55% complete for E-8_2_val_2.fq.gz
Approx 60% complete for E-8_2_val_2.fq.gz
Approx 65% complete for E-8_2_val_2.fq.gz
Approx 70% complete for E-8_2_val_2.fq.gz
Approx 75% complete for E-8_2_val_2.fq.gz
Approx 80% complete for E-8_2_val_2.fq.gz
Approx 85% complete for E-8_2_val_2.fq.gz
Approx 90% complete for E-8_2_val_2.fq.gz
Approx 95% complete for E-8_2_val_2.fq.gz
Approx 100% complete for E-8_2_val_2.fq.gz
Analysis complete for E-8_2_val_2.fq.gz
Deleting both intermediate output files E-8_1_trimmed.fq.gz and E-8_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to E-9 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/E-9_1.fastq.gz data/E-9_2.fastq.gz -o results/02.trimgalore/E-9_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/E-9_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-9_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/E-9_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	79	CTGTCTCTTATA	196019	0.04
Illumina	1	AGATCGGAAGAGC	196019	0.00
smallRNA	0	TGGAATTCTCGG	196019	0.00
Using Nextera adapter for trimming (count: 79). Second best hit was Illumina (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-9_trimgalore/E-9_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-9_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to E-9_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-9_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-9_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.797 s (4.066 µs/read; 14.76 M reads/minute).

=== Summary ===

Total reads processed:                 196,019
Reads with adapters:                     5,793 (3.0%)
Reads written (passing filters):       196,019 (100.0%)

Total basepairs processed:    59,001,719 bp
Quality-trimmed:                 278,799 bp (0.5%)
Total written (filtered):     58,702,652 bp (99.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 5793 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 51.2%
  C: 12.7%
  G: 25.8%
  T: 10.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3163	49004.8	0	3163
2	1136	12251.2	0	1136
3	1300	3062.8	0	1300
4	90	765.7	0	90
5	15	191.4	0	15
6	4	47.9	0	4
7	1	12.0	0	1
36	1	0.0	1	0 1
56	1	0.0	1	0 1
65	1	0.0	1	1
66	1	0.0	1	1
74	1	0.0	1	1
75	2	0.0	1	2
77	2	0.0	1	1 1
78	19	0.0	1	19
79	7	0.0	1	6 1
81	2	0.0	1	2
82	1	0.0	1	1
83	3	0.0	1	3
86	2	0.0	1	2
88	4	0.0	1	4
89	1	0.0	1	1
92	3	0.0	1	3
95	1	0.0	1	1
97	1	0.0	1	1
98	1	0.0	1	1
115	1	0.0	1	1
125	1	0.0	1	1
126	1	0.0	1	1
145	1	0.0	1	1
146	1	0.0	1	1
154	1	0.0	1	1
157	1	0.0	1	1
167	1	0.0	1	1
171	1	0.0	1	0 1
179	2	0.0	1	2
187	1	0.0	1	1
195	1	0.0	1	1
199	1	0.0	1	1
203	1	0.0	1	1
213	1	0.0	1	1
214	1	0.0	1	1
216	1	0.0	1	1
218	1	0.0	1	1
219	1	0.0	1	1
235	1	0.0	1	1
238	1	0.0	1	1
251	1	0.0	1	1
252	1	0.0	1	1
255	1	0.0	1	1
263	1	0.0	1	1
276	1	0.0	1	1
283	1	0.0	1	1
288	1	0.0	1	1
290	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/E-9_1.fastq.gz
=============================================
196019 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/E-9_trimgalore/E-9_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/E-9_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to E-9_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/E-9_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/E-9_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.783 s (3.997 µs/read; 15.01 M reads/minute).

=== Summary ===

Total reads processed:                 196,019
Reads with adapters:                   132,897 (67.8%)
Reads written (passing filters):       196,019 (100.0%)

Total basepairs processed:    59,001,719 bp
Quality-trimmed:               4,818,107 bp (8.2%)
Total written (filtered):     54,030,715 bp (91.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 132897 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.2%
  C: 57.2%
  G: 27.9%
  T: 3.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	123246	49004.8	0	123246
2	6988	12251.2	0	6988
3	2251	3062.8	0	2251
4	145	765.7	0	145
5	134	191.4	0	134
6	56	47.9	0	56
22	1	0.0	1	1
29	1	0.0	1	1
30	2	0.0	1	1 1
31	3	0.0	1	1 2
33	1	0.0	1	1
34	3	0.0	1	3
38	2	0.0	1	2
39	4	0.0	1	3 1
40	1	0.0	1	0 1
42	2	0.0	1	1 1
44	2	0.0	1	2
45	1	0.0	1	1
47	1	0.0	1	1
48	3	0.0	1	3
51	1	0.0	1	0 1
55	2	0.0	1	1 1
57	1	0.0	1	1
80	1	0.0	1	1
82	3	0.0	1	3
83	1	0.0	1	1
84	2	0.0	1	2
85	4	0.0	1	4
86	2	0.0	1	2
87	1	0.0	1	1
95	1	0.0	1	0 1
98	2	0.0	1	2
108	1	0.0	1	1
109	1	0.0	1	1
111	1	0.0	1	1
113	2	0.0	1	2
116	1	0.0	1	1
121	1	0.0	1	1
126	2	0.0	1	2
130	2	0.0	1	1 1
139	1	0.0	1	1
144	1	0.0	1	1
145	1	0.0	1	1
149	1	0.0	1	0 1
152	1	0.0	1	1
153	1	0.0	1	1
155	1	0.0	1	1
158	1	0.0	1	1
169	1	0.0	1	1
171	1	0.0	1	0 1
192	1	0.0	1	1
193	2	0.0	1	1 1
201	1	0.0	1	1
209	1	0.0	1	1
224	1	0.0	1	0 1
290	1	0.0	1	1
292	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: data/E-9_2.fastq.gz
=============================================
196019 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E-9_1_trimmed.fq.gz and E-9_2_trimmed.fq.gz
file_1: E-9_1_trimmed.fq.gz, file_2: E-9_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E-9_1_trimmed.fq.gz and E-9_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E-9_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E-9_2_val_2.fq.gz

Total number of sequences analysed: 196019

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 34754 (17.73%)


  >>> Now running FastQC on the validated data E-9_1_val_1.fq.gz<<<

Started analysis of E-9_1_val_1.fq.gz
Approx 5% complete for E-9_1_val_1.fq.gz
Approx 10% complete for E-9_1_val_1.fq.gz
Approx 15% complete for E-9_1_val_1.fq.gz
Approx 20% complete for E-9_1_val_1.fq.gz
Approx 25% complete for E-9_1_val_1.fq.gz
Approx 30% complete for E-9_1_val_1.fq.gz
Approx 35% complete for E-9_1_val_1.fq.gz
Approx 40% complete for E-9_1_val_1.fq.gz
Approx 45% complete for E-9_1_val_1.fq.gz
Approx 50% complete for E-9_1_val_1.fq.gz
Approx 55% complete for E-9_1_val_1.fq.gz
Approx 60% complete for E-9_1_val_1.fq.gz
Approx 65% complete for E-9_1_val_1.fq.gz
Approx 70% complete for E-9_1_val_1.fq.gz
Approx 75% complete for E-9_1_val_1.fq.gz
Approx 80% complete for E-9_1_val_1.fq.gz
Approx 85% complete for E-9_1_val_1.fq.gz
Approx 90% complete for E-9_1_val_1.fq.gz
Approx 95% complete for E-9_1_val_1.fq.gz
Analysis complete for E-9_1_val_1.fq.gz

  >>> Now running FastQC on the validated data E-9_2_val_2.fq.gz<<<

Started analysis of E-9_2_val_2.fq.gz
Approx 5% complete for E-9_2_val_2.fq.gz
Approx 10% complete for E-9_2_val_2.fq.gz
Approx 15% complete for E-9_2_val_2.fq.gz
Approx 20% complete for E-9_2_val_2.fq.gz
Approx 25% complete for E-9_2_val_2.fq.gz
Approx 30% complete for E-9_2_val_2.fq.gz
Approx 35% complete for E-9_2_val_2.fq.gz
Approx 40% complete for E-9_2_val_2.fq.gz
Approx 45% complete for E-9_2_val_2.fq.gz
Approx 50% complete for E-9_2_val_2.fq.gz
Approx 55% complete for E-9_2_val_2.fq.gz
Approx 60% complete for E-9_2_val_2.fq.gz
Approx 65% complete for E-9_2_val_2.fq.gz
Approx 70% complete for E-9_2_val_2.fq.gz
Approx 75% complete for E-9_2_val_2.fq.gz
Approx 80% complete for E-9_2_val_2.fq.gz
Approx 85% complete for E-9_2_val_2.fq.gz
Approx 90% complete for E-9_2_val_2.fq.gz
Approx 95% complete for E-9_2_val_2.fq.gz
Analysis complete for E-9_2_val_2.fq.gz
Deleting both intermediate output files E-9_1_trimmed.fq.gz and E-9_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to H-1 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/H-1_1.fastq.gz data/H-1_2.fastq.gz -o results/02.trimgalore/H-1_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/H-1_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-1_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/H-1_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	112	CTGTCTCTTATA	229919	0.05
smallRNA	0	TGGAATTCTCGG	229919	0.00
Illumina	0	AGATCGGAAGAGC	229919	0.00
Using Nextera adapter for trimming (count: 112). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-1_trimgalore/H-1_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-1_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to H-1_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-1_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-1_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.914 s (3.975 µs/read; 15.09 M reads/minute).

=== Summary ===

Total reads processed:                 229,919
Reads with adapters:                    15,882 (6.9%)
Reads written (passing filters):       229,919 (100.0%)

Total basepairs processed:    69,205,619 bp
Quality-trimmed:                 423,743 bp (0.6%)
Total written (filtered):     68,737,189 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 15882 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 43.7%
  C: 13.0%
  G: 24.4%
  T: 18.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	8733	57479.8	0	8733
2	3230	14369.9	0	3230
3	3586	3592.5	0	3586
4	179	898.1	0	179
5	25	224.5	0	25
6	8	56.1	0	8
7	2	14.0	0	2
13	1	0.0	1	1
22	1	0.0	1	1
23	1	0.0	1	1
29	2	0.0	1	2
76	1	0.0	1	0 1
77	1	0.0	1	1
78	3	0.0	1	3
79	3	0.0	1	3
80	4	0.0	1	4
81	2	0.0	1	2
82	3	0.0	1	2 1
83	4	0.0	1	4
85	1	0.0	1	1
86	3	0.0	1	3
87	1	0.0	1	0 1
88	1	0.0	1	1
89	3	0.0	1	3
90	2	0.0	1	2
91	1	0.0	1	1
92	2	0.0	1	2
93	2	0.0	1	2
95	1	0.0	1	1
96	1	0.0	1	1
99	1	0.0	1	1
102	1	0.0	1	1
103	1	0.0	1	1
107	1	0.0	1	1
121	1	0.0	1	1
123	1	0.0	1	1
125	2	0.0	1	2
129	2	0.0	1	1 1
130	1	0.0	1	1
131	1	0.0	1	1
132	1	0.0	1	0 1
134	1	0.0	1	1
140	1	0.0	1	1
141	2	0.0	1	1 1
142	1	0.0	1	1
147	2	0.0	1	1 1
148	2	0.0	1	2
150	1	0.0	1	1
151	1	0.0	1	1
153	1	0.0	1	1
154	1	0.0	1	1
159	1	0.0	1	1
165	1	0.0	1	1
167	1	0.0	1	1
168	1	0.0	1	1
170	1	0.0	1	1
175	2	0.0	1	2
176	1	0.0	1	1
177	1	0.0	1	1
187	1	0.0	1	1
188	1	0.0	1	1
189	1	0.0	1	1
191	1	0.0	1	1
195	1	0.0	1	1
196	1	0.0	1	1
198	1	0.0	1	1
199	1	0.0	1	1
205	1	0.0	1	1
206	2	0.0	1	2
207	1	0.0	1	1
215	1	0.0	1	1
217	2	0.0	1	2
218	1	0.0	1	1
223	1	0.0	1	1
228	1	0.0	1	1
229	1	0.0	1	1
230	1	0.0	1	1
233	1	0.0	1	1
240	3	0.0	1	3
243	1	0.0	1	1
245	1	0.0	1	1
249	1	0.0	1	1
250	1	0.0	1	1
255	1	0.0	1	1
262	1	0.0	1	1
270	1	0.0	1	1
272	1	0.0	1	1
277	1	0.0	1	1
278	1	0.0	1	1
286	1	0.0	1	1
287	1	0.0	1	1
289	1	0.0	1	1
290	1	0.0	1	1
291	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/H-1_1.fastq.gz
=============================================
229919 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-1_trimgalore/H-1_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-1_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to H-1_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-1_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-1_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.938 s (4.078 µs/read; 14.71 M reads/minute).

=== Summary ===

Total reads processed:                 229,919
Reads with adapters:                   155,258 (67.5%)
Reads written (passing filters):       229,919 (100.0%)

Total basepairs processed:    69,205,619 bp
Quality-trimmed:               5,576,849 bp (8.1%)
Total written (filtered):     63,446,894 bp (91.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 155258 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.8%
  C: 58.0%
  G: 26.8%
  T: 3.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	144740	57479.8	0	144740
2	7822	14369.9	0	7822
3	2278	3592.5	0	2278
4	159	898.1	0	159
5	102	224.5	0	102
6	43	56.1	0	43
7	1	14.0	0	1
24	1	0.0	1	0 1
34	1	0.0	1	1
35	1	0.0	1	1
40	1	0.0	1	1
45	1	0.0	1	1
49	1	0.0	1	1
65	1	0.0	1	1
73	1	0.0	1	0 1
77	1	0.0	1	1
79	1	0.0	1	1
80	1	0.0	1	1
82	7	0.0	1	5 2
83	6	0.0	1	6
84	10	0.0	1	10
85	2	0.0	1	1 1
86	2	0.0	1	2
87	2	0.0	1	2
88	1	0.0	1	0 1
89	2	0.0	1	1 1
90	1	0.0	1	1
92	4	0.0	1	3 1
93	1	0.0	1	1
95	1	0.0	1	1
98	1	0.0	1	0 1
102	1	0.0	1	1
103	1	0.0	1	1
108	3	0.0	1	3
109	1	0.0	1	1
111	1	0.0	1	0 1
112	1	0.0	1	1
113	4	0.0	1	4
115	1	0.0	1	1
116	1	0.0	1	1
119	1	0.0	1	1
120	2	0.0	1	2
123	2	0.0	1	2
125	2	0.0	1	2
127	1	0.0	1	1
129	1	0.0	1	1
132	2	0.0	1	2
133	2	0.0	1	1 1
135	2	0.0	1	2
137	1	0.0	1	0 1
138	1	0.0	1	0 1
139	1	0.0	1	1
140	2	0.0	1	2
144	2	0.0	1	1 1
150	1	0.0	1	1
154	1	0.0	1	1
156	1	0.0	1	0 1
157	1	0.0	1	1
158	1	0.0	1	1
159	2	0.0	1	2
160	1	0.0	1	1
161	1	0.0	1	1
162	1	0.0	1	1
163	1	0.0	1	1
169	1	0.0	1	1
172	1	0.0	1	1
177	1	0.0	1	1
181	1	0.0	1	1
184	1	0.0	1	1
188	2	0.0	1	2
190	1	0.0	1	1
192	1	0.0	1	1
199	1	0.0	1	1
203	1	0.0	1	1
204	1	0.0	1	1
205	1	0.0	1	1
290	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/H-1_2.fastq.gz
=============================================
229919 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files H-1_1_trimmed.fq.gz and H-1_2_trimmed.fq.gz
file_1: H-1_1_trimmed.fq.gz, file_2: H-1_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: H-1_1_trimmed.fq.gz and H-1_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to H-1_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to H-1_2_val_2.fq.gz

Total number of sequences analysed: 229919

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 38612 (16.79%)


  >>> Now running FastQC on the validated data H-1_1_val_1.fq.gz<<<

Started analysis of H-1_1_val_1.fq.gz
Approx 5% complete for H-1_1_val_1.fq.gz
Approx 10% complete for H-1_1_val_1.fq.gz
Approx 15% complete for H-1_1_val_1.fq.gz
Approx 20% complete for H-1_1_val_1.fq.gz
Approx 25% complete for H-1_1_val_1.fq.gz
Approx 30% complete for H-1_1_val_1.fq.gz
Approx 35% complete for H-1_1_val_1.fq.gz
Approx 40% complete for H-1_1_val_1.fq.gz
Approx 45% complete for H-1_1_val_1.fq.gz
Approx 50% complete for H-1_1_val_1.fq.gz
Approx 55% complete for H-1_1_val_1.fq.gz
Approx 60% complete for H-1_1_val_1.fq.gz
Approx 65% complete for H-1_1_val_1.fq.gz
Approx 70% complete for H-1_1_val_1.fq.gz
Approx 75% complete for H-1_1_val_1.fq.gz
Approx 80% complete for H-1_1_val_1.fq.gz
Approx 85% complete for H-1_1_val_1.fq.gz
Approx 90% complete for H-1_1_val_1.fq.gz
Approx 95% complete for H-1_1_val_1.fq.gz
Analysis complete for H-1_1_val_1.fq.gz

  >>> Now running FastQC on the validated data H-1_2_val_2.fq.gz<<<

Started analysis of H-1_2_val_2.fq.gz
Approx 5% complete for H-1_2_val_2.fq.gz
Approx 10% complete for H-1_2_val_2.fq.gz
Approx 15% complete for H-1_2_val_2.fq.gz
Approx 20% complete for H-1_2_val_2.fq.gz
Approx 25% complete for H-1_2_val_2.fq.gz
Approx 30% complete for H-1_2_val_2.fq.gz
Approx 35% complete for H-1_2_val_2.fq.gz
Approx 40% complete for H-1_2_val_2.fq.gz
Approx 45% complete for H-1_2_val_2.fq.gz
Approx 50% complete for H-1_2_val_2.fq.gz
Approx 55% complete for H-1_2_val_2.fq.gz
Approx 60% complete for H-1_2_val_2.fq.gz
Approx 65% complete for H-1_2_val_2.fq.gz
Approx 70% complete for H-1_2_val_2.fq.gz
Approx 75% complete for H-1_2_val_2.fq.gz
Approx 80% complete for H-1_2_val_2.fq.gz
Approx 85% complete for H-1_2_val_2.fq.gz
Approx 90% complete for H-1_2_val_2.fq.gz
Approx 95% complete for H-1_2_val_2.fq.gz
Analysis complete for H-1_2_val_2.fq.gz
Deleting both intermediate output files H-1_1_trimmed.fq.gz and H-1_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to H-10 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/H-10_1.fastq.gz data/H-10_2.fastq.gz -o results/02.trimgalore/H-10_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/H-10_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-10_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/H-10_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	78	CTGTCTCTTATA	247156	0.03
smallRNA	1	TGGAATTCTCGG	247156	0.00
Illumina	0	AGATCGGAAGAGC	247156	0.00
Using Nextera adapter for trimming (count: 78). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-10_trimgalore/H-10_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-10_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to H-10_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-10_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-10_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.902 s (3.649 µs/read; 16.44 M reads/minute).

=== Summary ===

Total reads processed:                 247,156
Reads with adapters:                     7,256 (2.9%)
Reads written (passing filters):       247,156 (100.0%)

Total basepairs processed:    74,393,956 bp
Quality-trimmed:                 250,962 bp (0.3%)
Total written (filtered):     74,121,115 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 7256 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 34.1%
  C: 13.8%
  G: 21.4%
  T: 30.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	5273	61789.0	0	5273
2	904	15447.2	0	904
3	941	3861.8	0	941
4	38	965.5	0	38
5	15	241.4	0	15
6	1	60.3	0	1
25	1	0.0	1	1
26	1	0.0	1	1
27	1	0.0	1	1
29	1	0.0	1	1
43	1	0.0	1	1
66	1	0.0	1	1
69	1	0.0	1	1
74	1	0.0	1	0 1
78	9	0.0	1	8 1
79	3	0.0	1	2 1
80	4	0.0	1	4
81	1	0.0	1	1
82	2	0.0	1	2
84	1	0.0	1	1
86	1	0.0	1	1
87	1	0.0	1	1
89	1	0.0	1	1
90	1	0.0	1	1
91	1	0.0	1	0 1
98	3	0.0	1	3
102	1	0.0	1	1
104	2	0.0	1	2
106	1	0.0	1	1
107	1	0.0	1	1
116	1	0.0	1	1
118	1	0.0	1	1
120	1	0.0	1	1
131	1	0.0	1	1
138	1	0.0	1	1
145	1	0.0	1	1
147	1	0.0	1	0 1
150	1	0.0	1	1
151	2	0.0	1	2
153	1	0.0	1	1
162	1	0.0	1	1
166	1	0.0	1	1
167	2	0.0	1	2
170	1	0.0	1	1
187	1	0.0	1	1
189	1	0.0	1	1
191	1	0.0	1	1
192	1	0.0	1	1
195	1	0.0	1	1
199	1	0.0	1	1
205	1	0.0	1	0 1
207	2	0.0	1	2
208	1	0.0	1	1
211	1	0.0	1	1
213	1	0.0	1	1
214	1	0.0	1	1
221	1	0.0	1	1
227	3	0.0	1	3
234	1	0.0	1	1
241	2	0.0	1	2
247	1	0.0	1	1
269	1	0.0	1	1
274	1	0.0	1	1
287	1	0.0	1	1
289	1	0.0	1	1
290	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-10_1.fastq.gz
=============================================
247156 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-10_trimgalore/H-10_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-10_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to H-10_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-10_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-10_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.978 s (3.958 µs/read; 15.16 M reads/minute).

=== Summary ===

Total reads processed:                 247,156
Reads with adapters:                   165,921 (67.1%)
Reads written (passing filters):       247,156 (100.0%)

Total basepairs processed:    74,393,956 bp
Quality-trimmed:               5,352,652 bp (7.2%)
Total written (filtered):     68,852,281 bp (92.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 165921 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 10.2%
  C: 57.6%
  G: 29.8%
  T: 2.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	155319	61789.0	0	155319
2	7203	15447.2	0	7203
3	3090	3861.8	0	3090
4	145	965.5	0	145
5	74	241.4	0	74
6	2	60.3	0	2
22	1	0.0	1	1
23	1	0.0	1	1
25	1	0.0	1	1
27	1	0.0	1	0 1
36	2	0.0	1	2
38	1	0.0	1	1
40	1	0.0	1	1
41	1	0.0	1	1
43	1	0.0	1	1
45	1	0.0	1	1
47	2	0.0	1	0 2
48	1	0.0	1	1
50	1	0.0	1	0 1
55	1	0.0	1	1
58	2	0.0	1	1 1
71	1	0.0	1	0 1
72	1	0.0	1	0 1
81	1	0.0	1	1
82	2	0.0	1	2
83	1	0.0	1	1
84	1	0.0	1	1
85	3	0.0	1	2 1
86	2	0.0	1	2
87	4	0.0	1	3 1
88	3	0.0	1	3
89	2	0.0	1	2
90	1	0.0	1	1
92	2	0.0	1	2
94	1	0.0	1	1
95	3	0.0	1	2 1
96	2	0.0	1	2
97	1	0.0	1	0 1
98	1	0.0	1	1
101	2	0.0	1	2
106	2	0.0	1	2
113	1	0.0	1	1
120	1	0.0	1	1
124	1	0.0	1	1
125	3	0.0	1	2 1
126	1	0.0	1	1
127	1	0.0	1	1
128	1	0.0	1	1
129	1	0.0	1	1
133	1	0.0	1	1
134	1	0.0	1	1
137	1	0.0	1	1
138	1	0.0	1	0 1
141	1	0.0	1	1
143	1	0.0	1	1
144	2	0.0	1	2
146	1	0.0	1	1
147	1	0.0	1	1
157	1	0.0	1	1
160	1	0.0	1	1
161	1	0.0	1	1
171	1	0.0	1	1
174	1	0.0	1	1
175	2	0.0	1	1 1
176	1	0.0	1	1
177	1	0.0	1	1
179	2	0.0	1	2
189	2	0.0	1	2
190	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-10_2.fastq.gz
=============================================
247156 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files H-10_1_trimmed.fq.gz and H-10_2_trimmed.fq.gz
file_1: H-10_1_trimmed.fq.gz, file_2: H-10_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: H-10_1_trimmed.fq.gz and H-10_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to H-10_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to H-10_2_val_2.fq.gz

Total number of sequences analysed: 247156

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 35505 (14.37%)


  >>> Now running FastQC on the validated data H-10_1_val_1.fq.gz<<<

Started analysis of H-10_1_val_1.fq.gz
Approx 5% complete for H-10_1_val_1.fq.gz
Approx 10% complete for H-10_1_val_1.fq.gz
Approx 15% complete for H-10_1_val_1.fq.gz
Approx 20% complete for H-10_1_val_1.fq.gz
Approx 25% complete for H-10_1_val_1.fq.gz
Approx 30% complete for H-10_1_val_1.fq.gz
Approx 35% complete for H-10_1_val_1.fq.gz
Approx 40% complete for H-10_1_val_1.fq.gz
Approx 45% complete for H-10_1_val_1.fq.gz
Approx 50% complete for H-10_1_val_1.fq.gz
Approx 55% complete for H-10_1_val_1.fq.gz
Approx 60% complete for H-10_1_val_1.fq.gz
Approx 65% complete for H-10_1_val_1.fq.gz
Approx 70% complete for H-10_1_val_1.fq.gz
Approx 75% complete for H-10_1_val_1.fq.gz
Approx 80% complete for H-10_1_val_1.fq.gz
Approx 85% complete for H-10_1_val_1.fq.gz
Approx 90% complete for H-10_1_val_1.fq.gz
Approx 95% complete for H-10_1_val_1.fq.gz
Analysis complete for H-10_1_val_1.fq.gz

  >>> Now running FastQC on the validated data H-10_2_val_2.fq.gz<<<

Started analysis of H-10_2_val_2.fq.gz
Approx 5% complete for H-10_2_val_2.fq.gz
Approx 10% complete for H-10_2_val_2.fq.gz
Approx 15% complete for H-10_2_val_2.fq.gz
Approx 20% complete for H-10_2_val_2.fq.gz
Approx 25% complete for H-10_2_val_2.fq.gz
Approx 30% complete for H-10_2_val_2.fq.gz
Approx 35% complete for H-10_2_val_2.fq.gz
Approx 40% complete for H-10_2_val_2.fq.gz
Approx 45% complete for H-10_2_val_2.fq.gz
Approx 50% complete for H-10_2_val_2.fq.gz
Approx 55% complete for H-10_2_val_2.fq.gz
Approx 60% complete for H-10_2_val_2.fq.gz
Approx 65% complete for H-10_2_val_2.fq.gz
Approx 70% complete for H-10_2_val_2.fq.gz
Approx 75% complete for H-10_2_val_2.fq.gz
Approx 80% complete for H-10_2_val_2.fq.gz
Approx 85% complete for H-10_2_val_2.fq.gz
Approx 90% complete for H-10_2_val_2.fq.gz
Approx 95% complete for H-10_2_val_2.fq.gz
Analysis complete for H-10_2_val_2.fq.gz
Deleting both intermediate output files H-10_1_trimmed.fq.gz and H-10_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to H-2 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/H-2_1.fastq.gz data/H-2_2.fastq.gz -o results/02.trimgalore/H-2_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/H-2_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-2_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/H-2_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	119	CTGTCTCTTATA	251464	0.05
smallRNA	2	TGGAATTCTCGG	251464	0.00
Illumina	0	AGATCGGAAGAGC	251464	0.00
Using Nextera adapter for trimming (count: 119). Second best hit was smallRNA (count: 2)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-2_trimgalore/H-2_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-2_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to H-2_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-2_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-2_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.973 s (3.869 µs/read; 15.51 M reads/minute).

=== Summary ===

Total reads processed:                 251,464
Reads with adapters:                    13,466 (5.4%)
Reads written (passing filters):       251,464 (100.0%)

Total basepairs processed:    75,690,664 bp
Quality-trimmed:                 491,020 bp (0.6%)
Total written (filtered):     75,157,595 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 13466 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 37.4%
  C: 17.6%
  G: 24.9%
  T: 20.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	8131	62866.0	0	8131
2	2357	15716.5	0	2357
3	2643	3929.1	0	2643
4	170	982.3	0	170
5	26	245.6	0	26
6	8	61.4	0	8
7	2	15.3	0	2
21	1	0.0	1	0 1
23	1	0.0	1	0 1
29	2	0.0	1	2
30	2	0.0	1	2
36	1	0.0	1	0 1
41	1	0.0	1	0 1
56	1	0.0	1	0 1
78	8	0.0	1	8
79	5	0.0	1	5
80	1	0.0	1	1
81	3	0.0	1	2 1
82	1	0.0	1	1
83	1	0.0	1	1
85	1	0.0	1	1
86	2	0.0	1	2
88	1	0.0	1	1
89	2	0.0	1	2
90	1	0.0	1	1
91	2	0.0	1	2
92	1	0.0	1	1
94	1	0.0	1	1
95	2	0.0	1	2
96	1	0.0	1	1
97	1	0.0	1	1
99	1	0.0	1	1
102	2	0.0	1	2
111	2	0.0	1	2
116	1	0.0	1	1
120	2	0.0	1	2
128	2	0.0	1	2
129	1	0.0	1	1
131	1	0.0	1	1
135	1	0.0	1	1
136	1	0.0	1	1
139	1	0.0	1	1
140	1	0.0	1	1
142	1	0.0	1	1
143	1	0.0	1	1
144	1	0.0	1	1
146	1	0.0	1	1
147	1	0.0	1	1
150	1	0.0	1	1
152	2	0.0	1	2
154	2	0.0	1	2
160	1	0.0	1	1
163	1	0.0	1	1
166	1	0.0	1	1
167	1	0.0	1	1
168	1	0.0	1	1
170	1	0.0	1	1
172	1	0.0	1	1
175	1	0.0	1	1
178	1	0.0	1	1
180	2	0.0	1	1 1
185	1	0.0	1	0 1
186	2	0.0	1	2
188	1	0.0	1	1
190	1	0.0	1	1
196	1	0.0	1	1
198	1	0.0	1	1
199	1	0.0	1	1
201	1	0.0	1	1
202	1	0.0	1	1
204	3	0.0	1	3
205	1	0.0	1	1
216	1	0.0	1	1
220	1	0.0	1	1
223	1	0.0	1	1
224	1	0.0	1	1
226	1	0.0	1	1
227	1	0.0	1	1
229	2	0.0	1	2
231	1	0.0	1	1
240	1	0.0	1	1
242	1	0.0	1	1
243	1	0.0	1	1
250	1	0.0	1	1
256	1	0.0	1	1
259	1	0.0	1	1
260	1	0.0	1	0 1
262	1	0.0	1	1
264	1	0.0	1	1
273	1	0.0	1	1
275	1	0.0	1	0 1
283	1	0.0	1	1
284	1	0.0	1	1
285	1	0.0	1	1
287	1	0.0	1	1
288	1	0.0	1	1
290	7	0.0	1	7
291	3	0.0	1	3

RUN STATISTICS FOR INPUT FILE: data/H-2_1.fastq.gz
=============================================
251464 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-2_trimgalore/H-2_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-2_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to H-2_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-2_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-2_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.993 s (3.950 µs/read; 15.19 M reads/minute).

=== Summary ===

Total reads processed:                 251,464
Reads with adapters:                   168,609 (67.1%)
Reads written (passing filters):       251,464 (100.0%)

Total basepairs processed:    75,690,664 bp
Quality-trimmed:               6,750,192 bp (8.9%)
Total written (filtered):     68,742,979 bp (90.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 168609 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.0%
  C: 56.8%
  G: 26.6%
  T: 3.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	156572	62866.0	0	156572
2	9018	15716.5	0	9018
3	2584	3929.1	0	2584
4	179	982.3	0	179
5	112	245.6	0	112
6	28	61.4	0	28
16	1	0.0	1	0 1
24	1	0.0	1	0 1
29	1	0.0	1	1
35	1	0.0	1	1
40	1	0.0	1	1
42	3	0.0	1	2 1
45	1	0.0	1	0 1
52	1	0.0	1	0 1
77	1	0.0	1	0 1
80	1	0.0	1	1
81	1	0.0	1	0 1
82	7	0.0	1	7
83	10	0.0	1	9 1
84	4	0.0	1	4
85	3	0.0	1	2 1
87	1	0.0	1	1
88	2	0.0	1	2
89	3	0.0	1	3
90	2	0.0	1	2
91	2	0.0	1	2
93	2	0.0	1	2
97	2	0.0	1	2
98	2	0.0	1	2
99	2	0.0	1	2
103	2	0.0	1	2
104	1	0.0	1	1
108	2	0.0	1	2
109	1	0.0	1	1
112	1	0.0	1	1
114	2	0.0	1	2
116	1	0.0	1	1
119	1	0.0	1	1
121	1	0.0	1	1
123	2	0.0	1	2
130	2	0.0	1	2
131	2	0.0	1	2
133	1	0.0	1	1
135	1	0.0	1	1
138	1	0.0	1	1
139	2	0.0	1	2
141	2	0.0	1	2
143	1	0.0	1	1
144	2	0.0	1	2
145	1	0.0	1	0 1
148	3	0.0	1	3
149	1	0.0	1	1
152	2	0.0	1	2
157	2	0.0	1	2
158	1	0.0	1	1
160	1	0.0	1	1
161	1	0.0	1	1
162	1	0.0	1	1
163	1	0.0	1	0 1
166	2	0.0	1	1 1
172	2	0.0	1	2
174	1	0.0	1	0 1
175	1	0.0	1	1
176	1	0.0	1	1
180	1	0.0	1	1
181	1	0.0	1	1
182	1	0.0	1	1
191	1	0.0	1	1
192	2	0.0	1	2
202	1	0.0	1	1
209	1	0.0	1	1
221	1	0.0	1	1
237	1	0.0	1	0 1
289	1	0.0	1	1
290	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-2_2.fastq.gz
=============================================
251464 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files H-2_1_trimmed.fq.gz and H-2_2_trimmed.fq.gz
file_1: H-2_1_trimmed.fq.gz, file_2: H-2_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: H-2_1_trimmed.fq.gz and H-2_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to H-2_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to H-2_2_val_2.fq.gz

Total number of sequences analysed: 251464

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 48644 (19.34%)


  >>> Now running FastQC on the validated data H-2_1_val_1.fq.gz<<<

Started analysis of H-2_1_val_1.fq.gz
Approx 5% complete for H-2_1_val_1.fq.gz
Approx 10% complete for H-2_1_val_1.fq.gz
Approx 15% complete for H-2_1_val_1.fq.gz
Approx 20% complete for H-2_1_val_1.fq.gz
Approx 25% complete for H-2_1_val_1.fq.gz
Approx 30% complete for H-2_1_val_1.fq.gz
Approx 35% complete for H-2_1_val_1.fq.gz
Approx 40% complete for H-2_1_val_1.fq.gz
Approx 45% complete for H-2_1_val_1.fq.gz
Approx 50% complete for H-2_1_val_1.fq.gz
Approx 55% complete for H-2_1_val_1.fq.gz
Approx 60% complete for H-2_1_val_1.fq.gz
Approx 65% complete for H-2_1_val_1.fq.gz
Approx 70% complete for H-2_1_val_1.fq.gz
Approx 75% complete for H-2_1_val_1.fq.gz
Approx 80% complete for H-2_1_val_1.fq.gz
Approx 85% complete for H-2_1_val_1.fq.gz
Approx 90% complete for H-2_1_val_1.fq.gz
Approx 95% complete for H-2_1_val_1.fq.gz
Analysis complete for H-2_1_val_1.fq.gz

  >>> Now running FastQC on the validated data H-2_2_val_2.fq.gz<<<

Started analysis of H-2_2_val_2.fq.gz
Approx 5% complete for H-2_2_val_2.fq.gz
Approx 10% complete for H-2_2_val_2.fq.gz
Approx 15% complete for H-2_2_val_2.fq.gz
Approx 20% complete for H-2_2_val_2.fq.gz
Approx 25% complete for H-2_2_val_2.fq.gz
Approx 30% complete for H-2_2_val_2.fq.gz
Approx 35% complete for H-2_2_val_2.fq.gz
Approx 40% complete for H-2_2_val_2.fq.gz
Approx 45% complete for H-2_2_val_2.fq.gz
Approx 50% complete for H-2_2_val_2.fq.gz
Approx 55% complete for H-2_2_val_2.fq.gz
Approx 60% complete for H-2_2_val_2.fq.gz
Approx 65% complete for H-2_2_val_2.fq.gz
Approx 70% complete for H-2_2_val_2.fq.gz
Approx 75% complete for H-2_2_val_2.fq.gz
Approx 80% complete for H-2_2_val_2.fq.gz
Approx 85% complete for H-2_2_val_2.fq.gz
Approx 90% complete for H-2_2_val_2.fq.gz
Approx 95% complete for H-2_2_val_2.fq.gz
Analysis complete for H-2_2_val_2.fq.gz
Deleting both intermediate output files H-2_1_trimmed.fq.gz and H-2_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to H-3 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/H-3_1.fastq.gz data/H-3_2.fastq.gz -o results/02.trimgalore/H-3_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/H-3_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-3_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/H-3_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	84	CTGTCTCTTATA	123686	0.07
smallRNA	1	TGGAATTCTCGG	123686	0.00
Illumina	0	AGATCGGAAGAGC	123686	0.00
Using Nextera adapter for trimming (count: 84). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-3_trimgalore/H-3_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-3_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to H-3_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-3_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-3_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.563 s (4.553 µs/read; 13.18 M reads/minute).

=== Summary ===

Total reads processed:                 123,686
Reads with adapters:                     8,350 (6.8%)
Reads written (passing filters):       123,686 (100.0%)

Total basepairs processed:    37,229,486 bp
Quality-trimmed:                 277,196 bp (0.7%)
Total written (filtered):     36,923,961 bp (99.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 8350 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 39.6%
  C: 13.9%
  G: 32.5%
  T: 14.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4946	30921.5	0	4946
2	1672	7730.4	0	1672
3	1487	1932.6	0	1487
4	135	483.1	0	135
5	15	120.8	0	15
6	1	30.2	0	1
12	1	0.0	1	0 1
36	1	0.0	1	0 1
44	1	0.0	1	0 1
70	1	0.0	1	1
75	1	0.0	1	0 1
78	3	0.0	1	3
79	2	0.0	1	2
80	2	0.0	1	2
81	3	0.0	1	3
83	1	0.0	1	0 1
84	1	0.0	1	1
85	2	0.0	1	2
86	2	0.0	1	1 1
90	1	0.0	1	1
93	1	0.0	1	1
97	1	0.0	1	1
98	1	0.0	1	1
101	3	0.0	1	3
102	2	0.0	1	2
104	1	0.0	1	1
105	1	0.0	1	1
115	2	0.0	1	2
117	1	0.0	1	1
125	1	0.0	1	1
126	1	0.0	1	1
128	1	0.0	1	1
129	3	0.0	1	3
134	2	0.0	1	2
148	2	0.0	1	2
149	1	0.0	1	0 1
150	3	0.0	1	3
161	1	0.0	1	1
164	1	0.0	1	1
168	1	0.0	1	1
170	1	0.0	1	1
171	1	0.0	1	1
174	1	0.0	1	1
175	1	0.0	1	1
176	1	0.0	1	1
180	1	0.0	1	1
182	1	0.0	1	1
184	1	0.0	1	1
185	2	0.0	1	1 1
186	1	0.0	1	1
190	1	0.0	1	1
194	1	0.0	1	1
196	1	0.0	1	1
199	1	0.0	1	1
206	1	0.0	1	1
208	1	0.0	1	1
213	1	0.0	1	1
221	2	0.0	1	1 1
225	1	0.0	1	1
226	1	0.0	1	1
230	1	0.0	1	1
232	1	0.0	1	1
233	1	0.0	1	1
234	1	0.0	1	1
235	1	0.0	1	1
253	1	0.0	1	1
255	1	0.0	1	0 1
256	1	0.0	1	1
257	1	0.0	1	1
259	1	0.0	1	1
270	1	0.0	1	1
275	1	0.0	1	1
279	1	0.0	1	1
283	1	0.0	1	1
285	1	0.0	1	1
289	1	0.0	1	1
290	3	0.0	1	3
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-3_1.fastq.gz
=============================================
123686 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-3_trimgalore/H-3_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-3_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to H-3_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-3_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-3_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.555 s (4.487 µs/read; 13.37 M reads/minute).

=== Summary ===

Total reads processed:                 123,686
Reads with adapters:                    77,508 (62.7%)
Reads written (passing filters):       123,686 (100.0%)

Total basepairs processed:    37,229,486 bp
Quality-trimmed:               4,741,747 bp (12.7%)
Total written (filtered):     32,391,265 bp (87.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 77508 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 17.4%
  C: 50.5%
  G: 26.8%
  T: 5.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	70926	30921.5	0	70926
2	5093	7730.4	0	5093
3	1177	1932.6	0	1177
4	137	483.1	0	137
5	61	120.8	0	61
6	18	30.2	0	18
7	2	7.5	0	2
9	1	0.5	0	1
10	1	0.1	1	0 1
12	1	0.0	1	0 1
33	1	0.0	1	0 1
35	1	0.0	1	0 1
36	1	0.0	1	1
42	1	0.0	1	0 1
46	2	0.0	1	2
53	1	0.0	1	0 1
65	1	0.0	1	0 1
79	1	0.0	1	1
82	2	0.0	1	2
83	2	0.0	1	2
84	3	0.0	1	3
85	1	0.0	1	1
86	6	0.0	1	5 1
87	7	0.0	1	7
88	2	0.0	1	2
89	1	0.0	1	1
90	2	0.0	1	1 1
91	2	0.0	1	2
94	1	0.0	1	1
96	3	0.0	1	2 1
98	2	0.0	1	2
100	1	0.0	1	1
106	1	0.0	1	1
107	1	0.0	1	1
108	1	0.0	1	1
111	1	0.0	1	1
113	1	0.0	1	1
114	1	0.0	1	0 1
117	1	0.0	1	1
120	1	0.0	1	1
121	2	0.0	1	2
122	1	0.0	1	1
125	1	0.0	1	1
126	2	0.0	1	2
130	1	0.0	1	1
132	1	0.0	1	1
133	1	0.0	1	1
134	1	0.0	1	1
138	1	0.0	1	1
139	1	0.0	1	1
141	1	0.0	1	1
144	1	0.0	1	1
147	1	0.0	1	1
148	1	0.0	1	1
151	2	0.0	1	2
152	1	0.0	1	1
154	1	0.0	1	1
156	2	0.0	1	2
157	1	0.0	1	1
159	1	0.0	1	1
164	1	0.0	1	1
169	1	0.0	1	1
170	1	0.0	1	1
175	1	0.0	1	1
178	1	0.0	1	1
181	1	0.0	1	1
186	1	0.0	1	1
187	1	0.0	1	1
192	1	0.0	1	1
195	1	0.0	1	1
209	1	0.0	1	1
215	1	0.0	1	0 1
239	1	0.0	1	1
287	2	0.0	1	1 1

RUN STATISTICS FOR INPUT FILE: data/H-3_2.fastq.gz
=============================================
123686 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files H-3_1_trimmed.fq.gz and H-3_2_trimmed.fq.gz
file_1: H-3_1_trimmed.fq.gz, file_2: H-3_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: H-3_1_trimmed.fq.gz and H-3_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to H-3_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to H-3_2_val_2.fq.gz

Total number of sequences analysed: 123686

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 41662 (33.68%)


  >>> Now running FastQC on the validated data H-3_1_val_1.fq.gz<<<

Started analysis of H-3_1_val_1.fq.gz
Approx 5% complete for H-3_1_val_1.fq.gz
Approx 10% complete for H-3_1_val_1.fq.gz
Approx 15% complete for H-3_1_val_1.fq.gz
Approx 20% complete for H-3_1_val_1.fq.gz
Approx 25% complete for H-3_1_val_1.fq.gz
Approx 30% complete for H-3_1_val_1.fq.gz
Approx 35% complete for H-3_1_val_1.fq.gz
Approx 40% complete for H-3_1_val_1.fq.gz
Approx 45% complete for H-3_1_val_1.fq.gz
Approx 50% complete for H-3_1_val_1.fq.gz
Approx 55% complete for H-3_1_val_1.fq.gz
Approx 60% complete for H-3_1_val_1.fq.gz
Approx 65% complete for H-3_1_val_1.fq.gz
Approx 70% complete for H-3_1_val_1.fq.gz
Approx 75% complete for H-3_1_val_1.fq.gz
Approx 80% complete for H-3_1_val_1.fq.gz
Approx 85% complete for H-3_1_val_1.fq.gz
Approx 90% complete for H-3_1_val_1.fq.gz
Approx 95% complete for H-3_1_val_1.fq.gz
Analysis complete for H-3_1_val_1.fq.gz

  >>> Now running FastQC on the validated data H-3_2_val_2.fq.gz<<<

Started analysis of H-3_2_val_2.fq.gz
Approx 5% complete for H-3_2_val_2.fq.gz
Approx 10% complete for H-3_2_val_2.fq.gz
Approx 15% complete for H-3_2_val_2.fq.gz
Approx 20% complete for H-3_2_val_2.fq.gz
Approx 25% complete for H-3_2_val_2.fq.gz
Approx 30% complete for H-3_2_val_2.fq.gz
Approx 35% complete for H-3_2_val_2.fq.gz
Approx 40% complete for H-3_2_val_2.fq.gz
Approx 45% complete for H-3_2_val_2.fq.gz
Approx 50% complete for H-3_2_val_2.fq.gz
Approx 55% complete for H-3_2_val_2.fq.gz
Approx 60% complete for H-3_2_val_2.fq.gz
Approx 65% complete for H-3_2_val_2.fq.gz
Approx 70% complete for H-3_2_val_2.fq.gz
Approx 75% complete for H-3_2_val_2.fq.gz
Approx 80% complete for H-3_2_val_2.fq.gz
Approx 85% complete for H-3_2_val_2.fq.gz
Approx 90% complete for H-3_2_val_2.fq.gz
Approx 95% complete for H-3_2_val_2.fq.gz
Analysis complete for H-3_2_val_2.fq.gz
Deleting both intermediate output files H-3_1_trimmed.fq.gz and H-3_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to H-4 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/H-4_1.fastq.gz data/H-4_2.fastq.gz -o results/02.trimgalore/H-4_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/H-4_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-4_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/H-4_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	27	CTGTCTCTTATA	165146	0.02
Illumina	0	AGATCGGAAGAGC	165146	0.00
smallRNA	0	TGGAATTCTCGG	165146	0.00
Using Nextera adapter for trimming (count: 27). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-4_trimgalore/H-4_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-4_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to H-4_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-4_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-4_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.653 s (3.954 µs/read; 15.18 M reads/minute).

=== Summary ===

Total reads processed:                 165,146
Reads with adapters:                     7,210 (4.4%)
Reads written (passing filters):       165,146 (100.0%)

Total basepairs processed:    49,708,946 bp
Quality-trimmed:                 205,677 bp (0.4%)
Total written (filtered):     49,485,310 bp (99.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 7210 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 44.6%
  C: 13.5%
  G: 27.3%
  T: 14.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4176	41286.5	0	4176
2	1434	10321.6	0	1434
3	1478	2580.4	0	1478
4	70	645.1	0	70
5	13	161.3	0	13
6	1	40.3	0	1
17	1	0.0	1	0 1
36	2	0.0	1	0 2
54	1	0.0	1	0 1
56	1	0.0	1	0 1
79	2	0.0	1	2
81	1	0.0	1	1
91	1	0.0	1	1
93	1	0.0	1	1
106	1	0.0	1	1
110	1	0.0	1	1
113	1	0.0	1	1
120	1	0.0	1	1
147	1	0.0	1	1
160	1	0.0	1	0 1
170	1	0.0	1	1
172	1	0.0	1	1
181	1	0.0	1	0 1
184	1	0.0	1	0 1
185	2	0.0	1	1 1
194	1	0.0	1	1
196	1	0.0	1	1
199	1	0.0	1	1
201	1	0.0	1	1
208	2	0.0	1	0 2
213	1	0.0	1	1
216	1	0.0	1	1
226	1	0.0	1	1
227	1	0.0	1	1
243	1	0.0	1	1
262	1	0.0	1	1
263	1	0.0	1	1
264	1	0.0	1	1
274	1	0.0	1	1
281	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-4_1.fastq.gz
=============================================
165146 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-4_trimgalore/H-4_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-4_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to H-4_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-4_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-4_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.712 s (4.311 µs/read; 13.92 M reads/minute).

=== Summary ===

Total reads processed:                 165,146
Reads with adapters:                   111,033 (67.2%)
Reads written (passing filters):       165,146 (100.0%)

Total basepairs processed:    49,708,946 bp
Quality-trimmed:               4,448,949 bp (8.9%)
Total written (filtered):     45,135,576 bp (90.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 111033 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.3%
  C: 56.5%
  G: 26.3%
  T: 3.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	103317	41286.5	0	103317
2	5866	10321.6	0	5866
3	1604	2580.4	0	1604
4	146	645.1	0	146
5	60	161.3	0	60
6	8	40.3	0	8
7	1	10.1	0	1
8	1	2.5	0	1
18	1	0.0	1	1
23	1	0.0	1	0 1
45	1	0.0	1	1
76	1	0.0	1	0 1
81	1	0.0	1	1
87	1	0.0	1	1
88	1	0.0	1	1
89	3	0.0	1	3
90	1	0.0	1	1
91	1	0.0	1	0 1
93	1	0.0	1	1
100	1	0.0	1	1
101	1	0.0	1	1
106	1	0.0	1	1
119	1	0.0	1	1
120	1	0.0	1	1
127	1	0.0	1	1
138	1	0.0	1	1
140	1	0.0	1	0 1
148	1	0.0	1	1
149	1	0.0	1	1
153	1	0.0	1	1
179	1	0.0	1	1
181	1	0.0	1	1
183	1	0.0	1	1
203	1	0.0	1	1
219	1	0.0	1	1
288	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-4_2.fastq.gz
=============================================
165146 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files H-4_1_trimmed.fq.gz and H-4_2_trimmed.fq.gz
file_1: H-4_1_trimmed.fq.gz, file_2: H-4_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: H-4_1_trimmed.fq.gz and H-4_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to H-4_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to H-4_2_val_2.fq.gz

Total number of sequences analysed: 165146

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 33531 (20.30%)


  >>> Now running FastQC on the validated data H-4_1_val_1.fq.gz<<<

Started analysis of H-4_1_val_1.fq.gz
Approx 5% complete for H-4_1_val_1.fq.gz
Approx 10% complete for H-4_1_val_1.fq.gz
Approx 15% complete for H-4_1_val_1.fq.gz
Approx 20% complete for H-4_1_val_1.fq.gz
Approx 25% complete for H-4_1_val_1.fq.gz
Approx 30% complete for H-4_1_val_1.fq.gz
Approx 35% complete for H-4_1_val_1.fq.gz
Approx 40% complete for H-4_1_val_1.fq.gz
Approx 45% complete for H-4_1_val_1.fq.gz
Approx 50% complete for H-4_1_val_1.fq.gz
Approx 55% complete for H-4_1_val_1.fq.gz
Approx 60% complete for H-4_1_val_1.fq.gz
Approx 65% complete for H-4_1_val_1.fq.gz
Approx 70% complete for H-4_1_val_1.fq.gz
Approx 75% complete for H-4_1_val_1.fq.gz
Approx 80% complete for H-4_1_val_1.fq.gz
Approx 85% complete for H-4_1_val_1.fq.gz
Approx 90% complete for H-4_1_val_1.fq.gz
Approx 95% complete for H-4_1_val_1.fq.gz
Analysis complete for H-4_1_val_1.fq.gz

  >>> Now running FastQC on the validated data H-4_2_val_2.fq.gz<<<

Started analysis of H-4_2_val_2.fq.gz
Approx 5% complete for H-4_2_val_2.fq.gz
Approx 10% complete for H-4_2_val_2.fq.gz
Approx 15% complete for H-4_2_val_2.fq.gz
Approx 20% complete for H-4_2_val_2.fq.gz
Approx 25% complete for H-4_2_val_2.fq.gz
Approx 30% complete for H-4_2_val_2.fq.gz
Approx 35% complete for H-4_2_val_2.fq.gz
Approx 40% complete for H-4_2_val_2.fq.gz
Approx 45% complete for H-4_2_val_2.fq.gz
Approx 50% complete for H-4_2_val_2.fq.gz
Approx 55% complete for H-4_2_val_2.fq.gz
Approx 60% complete for H-4_2_val_2.fq.gz
Approx 65% complete for H-4_2_val_2.fq.gz
Approx 70% complete for H-4_2_val_2.fq.gz
Approx 75% complete for H-4_2_val_2.fq.gz
Approx 80% complete for H-4_2_val_2.fq.gz
Approx 85% complete for H-4_2_val_2.fq.gz
Approx 90% complete for H-4_2_val_2.fq.gz
Approx 95% complete for H-4_2_val_2.fq.gz
Analysis complete for H-4_2_val_2.fq.gz
Deleting both intermediate output files H-4_1_trimmed.fq.gz and H-4_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to H-5 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/H-5_1.fastq.gz data/H-5_2.fastq.gz -o results/02.trimgalore/H-5_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/H-5_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-5_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/H-5_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	90	CTGTCTCTTATA	157553	0.06
smallRNA	0	TGGAATTCTCGG	157553	0.00
Illumina	0	AGATCGGAAGAGC	157553	0.00
Using Nextera adapter for trimming (count: 90). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-5_trimgalore/H-5_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-5_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to H-5_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-5_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-5_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.620 s (3.938 µs/read; 15.24 M reads/minute).

=== Summary ===

Total reads processed:                 157,553
Reads with adapters:                     6,866 (4.4%)
Reads written (passing filters):       157,553 (100.0%)

Total basepairs processed:    47,423,453 bp
Quality-trimmed:                 265,941 bp (0.6%)
Total written (filtered):     47,130,157 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 6866 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 40.6%
  C: 15.3%
  G: 29.0%
  T: 15.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4264	39388.2	0	4264
2	1329	9847.1	0	1329
3	1074	2461.8	0	1074
4	87	615.4	0	87
5	6	153.9	0	6
6	2	38.5	0	2
10	1	0.2	1	0 1
14	1	0.0	1	0 1
16	1	0.0	1	0 1
30	1	0.0	1	1
36	1	0.0	1	0 1
56	1	0.0	1	0 1
58	1	0.0	1	0 1
76	1	0.0	1	1
77	1	0.0	1	1
78	3	0.0	1	3
79	4	0.0	1	4
80	2	0.0	1	2
83	1	0.0	1	0 1
85	1	0.0	1	1
87	1	0.0	1	1
89	4	0.0	1	3 1
90	1	0.0	1	1
92	2	0.0	1	2
93	1	0.0	1	1
94	1	0.0	1	0 1
95	1	0.0	1	1
100	1	0.0	1	1
104	1	0.0	1	0 1
106	1	0.0	1	1
112	1	0.0	1	1
114	1	0.0	1	1
115	1	0.0	1	1
116	1	0.0	1	1
120	1	0.0	1	1
122	1	0.0	1	1
126	1	0.0	1	1
132	1	0.0	1	1
134	1	0.0	1	1
135	1	0.0	1	1
147	1	0.0	1	1
152	1	0.0	1	1
153	1	0.0	1	1
161	1	0.0	1	1
163	2	0.0	1	2
165	1	0.0	1	1
168	1	0.0	1	1
169	1	0.0	1	1
171	1	0.0	1	1
172	1	0.0	1	1
174	1	0.0	1	1
179	1	0.0	1	1
180	1	0.0	1	1
184	2	0.0	1	1 1
185	2	0.0	1	2
186	1	0.0	1	1
188	2	0.0	1	2
196	1	0.0	1	1
202	1	0.0	1	1
203	1	0.0	1	1
206	3	0.0	1	3
207	1	0.0	1	1
210	2	0.0	1	2
211	1	0.0	1	1
214	1	0.0	1	1
217	1	0.0	1	1
218	2	0.0	1	2
219	1	0.0	1	1
223	1	0.0	1	1
224	1	0.0	1	1
225	2	0.0	1	1 1
226	1	0.0	1	1
231	1	0.0	1	1
232	1	0.0	1	0 1
235	1	0.0	1	1
238	1	0.0	1	1
257	1	0.0	1	1
267	1	0.0	1	1
272	1	0.0	1	1
276	2	0.0	1	2
280	2	0.0	1	2
288	6	0.0	1	6
290	2	0.0	1	1 1

RUN STATISTICS FOR INPUT FILE: data/H-5_1.fastq.gz
=============================================
157553 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-5_trimgalore/H-5_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-5_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to H-5_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-5_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-5_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.677 s (4.295 µs/read; 13.97 M reads/minute).

=== Summary ===

Total reads processed:                 157,553
Reads with adapters:                   104,738 (66.5%)
Reads written (passing filters):       157,553 (100.0%)

Total basepairs processed:    47,423,453 bp
Quality-trimmed:               3,957,191 bp (8.3%)
Total written (filtered):     43,340,722 bp (91.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 104738 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.4%
  C: 55.1%
  G: 29.2%
  T: 3.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	97028	39388.2	0	97028
2	5531	9847.1	0	5531
3	1902	2461.8	0	1902
4	98	615.4	0	98
5	69	153.9	0	69
6	14	38.5	0	14
7	1	9.6	0	1
15	1	0.0	1	0 1
22	1	0.0	1	1
32	1	0.0	1	0 1
36	1	0.0	1	1
42	1	0.0	1	0 1
54	1	0.0	1	1
77	1	0.0	1	0 1
78	1	0.0	1	1
79	2	0.0	1	2
82	4	0.0	1	4
83	8	0.0	1	8
84	6	0.0	1	6
85	3	0.0	1	3
86	1	0.0	1	1
87	2	0.0	1	2
88	1	0.0	1	1
89	3	0.0	1	3
91	2	0.0	1	2
92	3	0.0	1	3
93	1	0.0	1	1
94	1	0.0	1	1
96	1	0.0	1	1
97	2	0.0	1	2
98	3	0.0	1	3
99	3	0.0	1	3
103	1	0.0	1	1
110	2	0.0	1	1 1
111	1	0.0	1	1
112	1	0.0	1	1
114	1	0.0	1	1
119	1	0.0	1	1
122	1	0.0	1	1
128	1	0.0	1	1
129	1	0.0	1	1
134	1	0.0	1	1
135	1	0.0	1	1
136	1	0.0	1	1
137	1	0.0	1	1
139	1	0.0	1	1
144	2	0.0	1	2
146	1	0.0	1	1
151	1	0.0	1	1
152	1	0.0	1	1
154	1	0.0	1	1
155	1	0.0	1	0 1
156	3	0.0	1	3
157	2	0.0	1	2
168	1	0.0	1	1
169	1	0.0	1	1
171	1	0.0	1	1
172	1	0.0	1	1
177	1	0.0	1	1
179	1	0.0	1	1
180	1	0.0	1	1
185	1	0.0	1	1
186	1	0.0	1	1
189	1	0.0	1	1
204	1	0.0	1	1
286	1	0.0	1	0 1
287	1	0.0	1	1
290	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-5_2.fastq.gz
=============================================
157553 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files H-5_1_trimmed.fq.gz and H-5_2_trimmed.fq.gz
file_1: H-5_1_trimmed.fq.gz, file_2: H-5_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: H-5_1_trimmed.fq.gz and H-5_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to H-5_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to H-5_2_val_2.fq.gz

Total number of sequences analysed: 157553

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 28071 (17.82%)


  >>> Now running FastQC on the validated data H-5_1_val_1.fq.gz<<<

Started analysis of H-5_1_val_1.fq.gz
Approx 5% complete for H-5_1_val_1.fq.gz
Approx 10% complete for H-5_1_val_1.fq.gz
Approx 15% complete for H-5_1_val_1.fq.gz
Approx 20% complete for H-5_1_val_1.fq.gz
Approx 25% complete for H-5_1_val_1.fq.gz
Approx 30% complete for H-5_1_val_1.fq.gz
Approx 35% complete for H-5_1_val_1.fq.gz
Approx 40% complete for H-5_1_val_1.fq.gz
Approx 45% complete for H-5_1_val_1.fq.gz
Approx 50% complete for H-5_1_val_1.fq.gz
Approx 55% complete for H-5_1_val_1.fq.gz
Approx 60% complete for H-5_1_val_1.fq.gz
Approx 65% complete for H-5_1_val_1.fq.gz
Approx 70% complete for H-5_1_val_1.fq.gz
Approx 75% complete for H-5_1_val_1.fq.gz
Approx 80% complete for H-5_1_val_1.fq.gz
Approx 85% complete for H-5_1_val_1.fq.gz
Approx 90% complete for H-5_1_val_1.fq.gz
Approx 95% complete for H-5_1_val_1.fq.gz
Analysis complete for H-5_1_val_1.fq.gz

  >>> Now running FastQC on the validated data H-5_2_val_2.fq.gz<<<

Started analysis of H-5_2_val_2.fq.gz
Approx 5% complete for H-5_2_val_2.fq.gz
Approx 10% complete for H-5_2_val_2.fq.gz
Approx 15% complete for H-5_2_val_2.fq.gz
Approx 20% complete for H-5_2_val_2.fq.gz
Approx 25% complete for H-5_2_val_2.fq.gz
Approx 30% complete for H-5_2_val_2.fq.gz
Approx 35% complete for H-5_2_val_2.fq.gz
Approx 40% complete for H-5_2_val_2.fq.gz
Approx 45% complete for H-5_2_val_2.fq.gz
Approx 50% complete for H-5_2_val_2.fq.gz
Approx 55% complete for H-5_2_val_2.fq.gz
Approx 60% complete for H-5_2_val_2.fq.gz
Approx 65% complete for H-5_2_val_2.fq.gz
Approx 70% complete for H-5_2_val_2.fq.gz
Approx 75% complete for H-5_2_val_2.fq.gz
Approx 80% complete for H-5_2_val_2.fq.gz
Approx 85% complete for H-5_2_val_2.fq.gz
Approx 90% complete for H-5_2_val_2.fq.gz
Approx 95% complete for H-5_2_val_2.fq.gz
Analysis complete for H-5_2_val_2.fq.gz
Deleting both intermediate output files H-5_1_trimmed.fq.gz and H-5_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to H-6 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/H-6_1.fastq.gz data/H-6_2.fastq.gz -o results/02.trimgalore/H-6_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/H-6_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-6_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/H-6_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	119	CTGTCTCTTATA	183969	0.06
smallRNA	0	TGGAATTCTCGG	183969	0.00
Illumina	0	AGATCGGAAGAGC	183969	0.00
Using Nextera adapter for trimming (count: 119). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-6_trimgalore/H-6_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-6_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to H-6_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-6_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-6_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.714 s (3.882 µs/read; 15.46 M reads/minute).

=== Summary ===

Total reads processed:                 183,969
Reads with adapters:                    13,248 (7.2%)
Reads written (passing filters):       183,969 (100.0%)

Total basepairs processed:    55,374,669 bp
Quality-trimmed:                 322,595 bp (0.6%)
Total written (filtered):     55,008,187 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 13248 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 49.4%
  C: 12.5%
  G: 20.6%
  T: 17.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	6978	45992.2	0	6978
2	2537	11498.1	0	2537
3	3424	2874.5	0	3424
4	134	718.6	0	134
5	38	179.7	0	38
6	5	44.9	0	5
7	6	11.2	0	6
35	1	0.0	1	1
55	1	0.0	1	0 1
78	4	0.0	1	4
79	2	0.0	1	2
81	2	0.0	1	0 2
82	2	0.0	1	2
83	4	0.0	1	4
85	2	0.0	1	2
87	1	0.0	1	1
88	2	0.0	1	2
90	1	0.0	1	1
92	1	0.0	1	1
93	1	0.0	1	1
94	2	0.0	1	2
95	1	0.0	1	1
97	1	0.0	1	1
98	1	0.0	1	1
99	2	0.0	1	2
101	3	0.0	1	3
104	1	0.0	1	1
106	1	0.0	1	1
107	1	0.0	1	1
110	1	0.0	1	1
112	1	0.0	1	1
113	1	0.0	1	1
114	1	0.0	1	1
116	1	0.0	1	1
122	1	0.0	1	0 1
126	1	0.0	1	1
129	1	0.0	1	1
133	2	0.0	1	2
135	2	0.0	1	2
136	1	0.0	1	1
139	1	0.0	1	1
140	1	0.0	1	1
141	1	0.0	1	1
143	1	0.0	1	1
144	1	0.0	1	1
145	1	0.0	1	1
146	3	0.0	1	2 1
147	1	0.0	1	1
158	1	0.0	1	1
159	2	0.0	1	2
163	1	0.0	1	1
165	1	0.0	1	1
170	1	0.0	1	1
171	1	0.0	1	1
175	1	0.0	1	1
178	1	0.0	1	1
180	1	0.0	1	1
181	1	0.0	1	1
184	2	0.0	1	1 1
185	2	0.0	1	1 1
186	1	0.0	1	1
189	1	0.0	1	1
191	1	0.0	1	1
193	1	0.0	1	1
195	1	0.0	1	1
196	1	0.0	1	1
197	1	0.0	1	1
200	1	0.0	1	1
202	2	0.0	1	2
203	1	0.0	1	1
208	2	0.0	1	2
209	1	0.0	1	1
212	1	0.0	1	1
215	1	0.0	1	1
217	1	0.0	1	1
218	2	0.0	1	2
219	1	0.0	1	1
221	1	0.0	1	1
223	2	0.0	1	2
224	1	0.0	1	1
225	1	0.0	1	1
227	1	0.0	1	1
228	2	0.0	1	2
229	2	0.0	1	2
233	1	0.0	1	1
234	1	0.0	1	1
235	1	0.0	1	1
241	1	0.0	1	1
243	1	0.0	1	1
250	1	0.0	1	1
257	1	0.0	1	1
259	1	0.0	1	1
260	2	0.0	1	2
267	1	0.0	1	1
268	1	0.0	1	0 1
269	1	0.0	1	1
274	1	0.0	1	1
285	2	0.0	1	2
287	2	0.0	1	2
288	2	0.0	1	2
290	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-6_1.fastq.gz
=============================================
183969 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-6_trimgalore/H-6_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-6_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to H-6_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-6_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-6_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.787 s (4.279 µs/read; 14.02 M reads/minute).

=== Summary ===

Total reads processed:                 183,969
Reads with adapters:                   124,165 (67.5%)
Reads written (passing filters):       183,969 (100.0%)

Total basepairs processed:    55,374,669 bp
Quality-trimmed:               4,450,515 bp (8.0%)
Total written (filtered):     50,774,488 bp (91.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 124165 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.8%
  C: 57.9%
  G: 26.9%
  T: 3.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	115833	45992.2	0	115833
2	6113	11498.1	0	6113
3	1884	2874.5	0	1884
4	143	718.6	0	143
5	53	179.7	0	53
6	17	44.9	0	17
31	1	0.0	1	1
32	1	0.0	1	0 1
35	1	0.0	1	0 1
44	3	0.0	1	3
45	1	0.0	1	1
58	1	0.0	1	0 1
79	1	0.0	1	1
82	2	0.0	1	2
83	5	0.0	1	5
84	2	0.0	1	2
85	4	0.0	1	4
86	8	0.0	1	8
87	5	0.0	1	4 1
88	3	0.0	1	3
89	3	0.0	1	3
90	2	0.0	1	1 1
91	2	0.0	1	1 1
92	1	0.0	1	1
95	1	0.0	1	1
96	3	0.0	1	3
97	1	0.0	1	1
101	1	0.0	1	1
102	2	0.0	1	2
104	3	0.0	1	3
105	1	0.0	1	0 1
108	1	0.0	1	1
110	1	0.0	1	1
114	2	0.0	1	1 1
116	2	0.0	1	2
119	1	0.0	1	1
121	1	0.0	1	1
122	1	0.0	1	1
123	3	0.0	1	3
125	1	0.0	1	1
130	2	0.0	1	2
134	1	0.0	1	1
135	2	0.0	1	2
136	3	0.0	1	3
137	1	0.0	1	1
138	1	0.0	1	1
142	1	0.0	1	0 1
143	1	0.0	1	1
144	1	0.0	1	1
146	2	0.0	1	2
147	1	0.0	1	1
148	1	0.0	1	1
149	1	0.0	1	1
150	1	0.0	1	1
151	1	0.0	1	1
154	2	0.0	1	2
155	1	0.0	1	1
157	1	0.0	1	1
160	1	0.0	1	1
161	1	0.0	1	1
162	2	0.0	1	1 1
165	1	0.0	1	1
168	1	0.0	1	1
169	2	0.0	1	2
172	2	0.0	1	2
173	1	0.0	1	0 1
175	1	0.0	1	1
177	4	0.0	1	4
178	1	0.0	1	1
198	1	0.0	1	1
209	1	0.0	1	1
211	1	0.0	1	1
212	1	0.0	1	1
213	1	0.0	1	1
225	1	0.0	1	1
230	1	0.0	1	1
274	1	0.0	1	1
287	2	0.0	1	1 1

RUN STATISTICS FOR INPUT FILE: data/H-6_2.fastq.gz
=============================================
183969 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files H-6_1_trimmed.fq.gz and H-6_2_trimmed.fq.gz
file_1: H-6_1_trimmed.fq.gz, file_2: H-6_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: H-6_1_trimmed.fq.gz and H-6_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to H-6_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to H-6_2_val_2.fq.gz

Total number of sequences analysed: 183969

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 30620 (16.64%)


  >>> Now running FastQC on the validated data H-6_1_val_1.fq.gz<<<

Started analysis of H-6_1_val_1.fq.gz
Approx 5% complete for H-6_1_val_1.fq.gz
Approx 10% complete for H-6_1_val_1.fq.gz
Approx 15% complete for H-6_1_val_1.fq.gz
Approx 20% complete for H-6_1_val_1.fq.gz
Approx 25% complete for H-6_1_val_1.fq.gz
Approx 30% complete for H-6_1_val_1.fq.gz
Approx 35% complete for H-6_1_val_1.fq.gz
Approx 40% complete for H-6_1_val_1.fq.gz
Approx 45% complete for H-6_1_val_1.fq.gz
Approx 50% complete for H-6_1_val_1.fq.gz
Approx 55% complete for H-6_1_val_1.fq.gz
Approx 60% complete for H-6_1_val_1.fq.gz
Approx 65% complete for H-6_1_val_1.fq.gz
Approx 70% complete for H-6_1_val_1.fq.gz
Approx 75% complete for H-6_1_val_1.fq.gz
Approx 80% complete for H-6_1_val_1.fq.gz
Approx 85% complete for H-6_1_val_1.fq.gz
Approx 90% complete for H-6_1_val_1.fq.gz
Approx 95% complete for H-6_1_val_1.fq.gz
Analysis complete for H-6_1_val_1.fq.gz

  >>> Now running FastQC on the validated data H-6_2_val_2.fq.gz<<<

Started analysis of H-6_2_val_2.fq.gz
Approx 5% complete for H-6_2_val_2.fq.gz
Approx 10% complete for H-6_2_val_2.fq.gz
Approx 15% complete for H-6_2_val_2.fq.gz
Approx 20% complete for H-6_2_val_2.fq.gz
Approx 25% complete for H-6_2_val_2.fq.gz
Approx 30% complete for H-6_2_val_2.fq.gz
Approx 35% complete for H-6_2_val_2.fq.gz
Approx 40% complete for H-6_2_val_2.fq.gz
Approx 45% complete for H-6_2_val_2.fq.gz
Approx 50% complete for H-6_2_val_2.fq.gz
Approx 55% complete for H-6_2_val_2.fq.gz
Approx 60% complete for H-6_2_val_2.fq.gz
Approx 65% complete for H-6_2_val_2.fq.gz
Approx 70% complete for H-6_2_val_2.fq.gz
Approx 75% complete for H-6_2_val_2.fq.gz
Approx 80% complete for H-6_2_val_2.fq.gz
Approx 85% complete for H-6_2_val_2.fq.gz
Approx 90% complete for H-6_2_val_2.fq.gz
Approx 95% complete for H-6_2_val_2.fq.gz
Analysis complete for H-6_2_val_2.fq.gz
Deleting both intermediate output files H-6_1_trimmed.fq.gz and H-6_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to H-7 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/H-7_1.fastq.gz data/H-7_2.fastq.gz -o results/02.trimgalore/H-7_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/H-7_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-7_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/H-7_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	67	CTGTCTCTTATA	196519	0.03
smallRNA	3	TGGAATTCTCGG	196519	0.00
Illumina	0	AGATCGGAAGAGC	196519	0.00
Using Nextera adapter for trimming (count: 67). Second best hit was smallRNA (count: 3)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-7_trimgalore/H-7_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-7_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to H-7_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-7_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-7_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.756 s (3.848 µs/read; 15.59 M reads/minute).

=== Summary ===

Total reads processed:                 196,519
Reads with adapters:                    17,633 (9.0%)
Reads written (passing filters):       196,519 (100.0%)

Total basepairs processed:    59,152,219 bp
Quality-trimmed:                 314,661 bp (0.5%)
Total written (filtered):     58,789,985 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17633 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 67.8%
  C: 7.5%
  G: 15.4%
  T: 9.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	6376	49129.8	0	6376
2	3221	12282.4	0	3221
3	7102	3070.6	0	7102
4	807	767.7	0	807
5	34	191.9	0	34
6	14	48.0	0	14
7	9	12.0	0	9
30	1	0.0	1	0 1
34	1	0.0	1	0 1
74	1	0.0	1	1
77	1	0.0	1	1
78	11	0.0	1	11
79	3	0.0	1	3
81	1	0.0	1	1
84	1	0.0	1	1
86	1	0.0	1	1
87	2	0.0	1	2
88	1	0.0	1	1
91	2	0.0	1	2
94	1	0.0	1	1
95	1	0.0	1	1
99	2	0.0	1	2
100	2	0.0	1	2
101	1	0.0	1	1
104	1	0.0	1	1
106	1	0.0	1	1
110	1	0.0	1	1
111	1	0.0	1	1
133	1	0.0	1	1
134	1	0.0	1	1
140	1	0.0	1	1
143	1	0.0	1	1
157	1	0.0	1	1
160	1	0.0	1	1
172	1	0.0	1	1
177	1	0.0	1	1
182	1	0.0	1	1
183	1	0.0	1	1
186	1	0.0	1	1
189	1	0.0	1	1
190	1	0.0	1	1
192	1	0.0	1	1
196	1	0.0	1	1
202	1	0.0	1	1
203	1	0.0	1	1
209	1	0.0	1	1
213	2	0.0	1	2
214	1	0.0	1	1
217	1	0.0	1	1
221	1	0.0	1	1
225	1	0.0	1	1
227	1	0.0	1	1
230	1	0.0	1	1
231	1	0.0	1	0 1
244	1	0.0	1	1
269	1	0.0	1	1
274	1	0.0	1	1
276	1	0.0	1	1
288	1	0.0	1	1
290	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-7_1.fastq.gz
=============================================
196519 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-7_trimgalore/H-7_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-7_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to H-7_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-7_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-7_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.809 s (4.115 µs/read; 14.58 M reads/minute).

=== Summary ===

Total reads processed:                 196,519
Reads with adapters:                   130,073 (66.2%)
Reads written (passing filters):       196,519 (100.0%)

Total basepairs processed:    59,152,219 bp
Quality-trimmed:               5,160,147 bp (8.7%)
Total written (filtered):     53,843,050 bp (91.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 130073 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.5%
  C: 55.9%
  G: 28.0%
  T: 3.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	120740	49129.8	0	120740
2	6794	12282.4	0	6794
3	2147	3070.6	0	2147
4	193	767.7	0	193
5	109	191.9	0	109
6	20	48.0	0	20
7	1	12.0	0	1
10	1	0.2	1	0 1
18	1	0.0	1	0 1
22	1	0.0	1	1
29	2	0.0	1	0 2
31	1	0.0	1	1
34	1	0.0	1	1
35	1	0.0	1	0 1
41	1	0.0	1	0 1
44	1	0.0	1	1
45	1	0.0	1	0 1
48	1	0.0	1	1
50	1	0.0	1	1
52	1	0.0	1	1
55	1	0.0	1	1
56	1	0.0	1	1
75	1	0.0	1	1
82	3	0.0	1	2 1
83	3	0.0	1	3
84	2	0.0	1	2
85	3	0.0	1	3
86	1	0.0	1	1
87	2	0.0	1	2
88	1	0.0	1	1
89	2	0.0	1	2
90	2	0.0	1	2
91	1	0.0	1	1
95	1	0.0	1	0 1
100	1	0.0	1	1
102	3	0.0	1	2 1
103	1	0.0	1	1
104	1	0.0	1	1
105	1	0.0	1	1
107	1	0.0	1	1
109	1	0.0	1	1
111	1	0.0	1	0 1
113	1	0.0	1	0 1
118	1	0.0	1	1
121	1	0.0	1	0 1
124	1	0.0	1	1
135	1	0.0	1	1
141	1	0.0	1	1
143	1	0.0	1	1
144	1	0.0	1	1
154	3	0.0	1	3
159	1	0.0	1	1
165	1	0.0	1	1
170	1	0.0	1	1
173	1	0.0	1	1
177	1	0.0	1	1
179	1	0.0	1	1
182	1	0.0	1	1
187	1	0.0	1	1
190	1	0.0	1	1
197	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-7_2.fastq.gz
=============================================
196519 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files H-7_1_trimmed.fq.gz and H-7_2_trimmed.fq.gz
file_1: H-7_1_trimmed.fq.gz, file_2: H-7_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: H-7_1_trimmed.fq.gz and H-7_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to H-7_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to H-7_2_val_2.fq.gz

Total number of sequences analysed: 196519

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 37661 (19.16%)


  >>> Now running FastQC on the validated data H-7_1_val_1.fq.gz<<<

Started analysis of H-7_1_val_1.fq.gz
Approx 5% complete for H-7_1_val_1.fq.gz
Approx 10% complete for H-7_1_val_1.fq.gz
Approx 15% complete for H-7_1_val_1.fq.gz
Approx 20% complete for H-7_1_val_1.fq.gz
Approx 25% complete for H-7_1_val_1.fq.gz
Approx 30% complete for H-7_1_val_1.fq.gz
Approx 35% complete for H-7_1_val_1.fq.gz
Approx 40% complete for H-7_1_val_1.fq.gz
Approx 45% complete for H-7_1_val_1.fq.gz
Approx 50% complete for H-7_1_val_1.fq.gz
Approx 55% complete for H-7_1_val_1.fq.gz
Approx 60% complete for H-7_1_val_1.fq.gz
Approx 65% complete for H-7_1_val_1.fq.gz
Approx 70% complete for H-7_1_val_1.fq.gz
Approx 75% complete for H-7_1_val_1.fq.gz
Approx 80% complete for H-7_1_val_1.fq.gz
Approx 85% complete for H-7_1_val_1.fq.gz
Approx 90% complete for H-7_1_val_1.fq.gz
Approx 95% complete for H-7_1_val_1.fq.gz
Analysis complete for H-7_1_val_1.fq.gz

  >>> Now running FastQC on the validated data H-7_2_val_2.fq.gz<<<

Started analysis of H-7_2_val_2.fq.gz
Approx 5% complete for H-7_2_val_2.fq.gz
Approx 10% complete for H-7_2_val_2.fq.gz
Approx 15% complete for H-7_2_val_2.fq.gz
Approx 20% complete for H-7_2_val_2.fq.gz
Approx 25% complete for H-7_2_val_2.fq.gz
Approx 30% complete for H-7_2_val_2.fq.gz
Approx 35% complete for H-7_2_val_2.fq.gz
Approx 40% complete for H-7_2_val_2.fq.gz
Approx 45% complete for H-7_2_val_2.fq.gz
Approx 50% complete for H-7_2_val_2.fq.gz
Approx 55% complete for H-7_2_val_2.fq.gz
Approx 60% complete for H-7_2_val_2.fq.gz
Approx 65% complete for H-7_2_val_2.fq.gz
Approx 70% complete for H-7_2_val_2.fq.gz
Approx 75% complete for H-7_2_val_2.fq.gz
Approx 80% complete for H-7_2_val_2.fq.gz
Approx 85% complete for H-7_2_val_2.fq.gz
Approx 90% complete for H-7_2_val_2.fq.gz
Approx 95% complete for H-7_2_val_2.fq.gz
Analysis complete for H-7_2_val_2.fq.gz
Deleting both intermediate output files H-7_1_trimmed.fq.gz and H-7_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to H-8 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/H-8_1.fastq.gz data/H-8_2.fastq.gz -o results/02.trimgalore/H-8_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/H-8_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-8_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/H-8_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	68	CTGTCTCTTATA	188798	0.04
Illumina	2	AGATCGGAAGAGC	188798	0.00
smallRNA	1	TGGAATTCTCGG	188798	0.00
Using Nextera adapter for trimming (count: 68). Second best hit was Illumina (count: 2)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-8_trimgalore/H-8_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-8_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to H-8_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-8_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-8_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.737 s (3.905 µs/read; 15.36 M reads/minute).

=== Summary ===

Total reads processed:                 188,798
Reads with adapters:                    14,568 (7.7%)
Reads written (passing filters):       188,798 (100.0%)

Total basepairs processed:    56,828,198 bp
Quality-trimmed:                 413,616 bp (0.7%)
Total written (filtered):     56,377,641 bp (99.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 14568 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 47.9%
  C: 14.2%
  G: 22.4%
  T: 15.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	7846	47199.5	0	7846
2	2858	11799.9	0	2858
3	3361	2950.0	0	3361
4	281	737.5	0	281
5	131	184.4	0	131
6	7	46.1	0	7
7	9	11.5	0	9
22	1	0.0	1	0 1
27	1	0.0	1	0 1
78	4	0.0	1	4
79	5	0.0	1	3 2
80	1	0.0	1	1
81	1	0.0	1	1
82	1	0.0	1	1
85	1	0.0	1	0 1
86	3	0.0	1	3
88	2	0.0	1	2
89	2	0.0	1	2
90	1	0.0	1	1
93	1	0.0	1	1
94	1	0.0	1	1
104	1	0.0	1	1
105	1	0.0	1	1
111	1	0.0	1	1
112	1	0.0	1	1
114	1	0.0	1	1
118	2	0.0	1	2
121	1	0.0	1	1
128	1	0.0	1	1
137	1	0.0	1	1
142	1	0.0	1	1
143	1	0.0	1	1
147	1	0.0	1	1
152	2	0.0	1	2
158	1	0.0	1	1
161	1	0.0	1	1
164	1	0.0	1	0 1
167	1	0.0	1	1
171	1	0.0	1	1
172	1	0.0	1	1
183	1	0.0	1	1
185	1	0.0	1	1
186	2	0.0	1	2
188	2	0.0	1	2
191	2	0.0	1	2
193	1	0.0	1	1
199	1	0.0	1	1
207	1	0.0	1	1
209	2	0.0	1	2
220	2	0.0	1	2
221	2	0.0	1	2
229	1	0.0	1	1
231	1	0.0	1	1
238	1	0.0	1	1
240	1	0.0	1	1
251	1	0.0	1	1
269	1	0.0	1	1
274	2	0.0	1	2
282	1	0.0	1	1
284	1	0.0	1	0 1
286	1	0.0	1	1
287	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-8_1.fastq.gz
=============================================
188798 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-8_trimgalore/H-8_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-8_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to H-8_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-8_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-8_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.821 s (4.351 µs/read; 13.79 M reads/minute).

=== Summary ===

Total reads processed:                 188,798
Reads with adapters:                   130,018 (68.9%)
Reads written (passing filters):       188,798 (100.0%)

Total basepairs processed:    56,828,198 bp
Quality-trimmed:               4,467,587 bp (7.9%)
Total written (filtered):     52,211,430 bp (91.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 130018 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 11.4%
  C: 59.1%
  G: 25.8%
  T: 3.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	121427	47199.5	0	121427
2	6418	11799.9	0	6418
3	1876	2950.0	0	1876
4	139	737.5	0	139
5	67	184.4	0	67
6	16	46.1	0	16
7	1	11.5	0	1
10	1	0.2	1	0 1
30	1	0.0	1	0 1
38	1	0.0	1	1
39	1	0.0	1	0 1
40	2	0.0	1	1 1
44	1	0.0	1	1
49	1	0.0	1	1
50	1	0.0	1	1
51	1	0.0	1	1
82	1	0.0	1	1
83	2	0.0	1	2
84	1	0.0	1	0 1
85	4	0.0	1	4
86	3	0.0	1	2 1
87	2	0.0	1	2
88	2	0.0	1	2
89	3	0.0	1	3
90	1	0.0	1	1
91	1	0.0	1	1
92	2	0.0	1	2
94	3	0.0	1	3
95	2	0.0	1	2
101	2	0.0	1	2
105	2	0.0	1	2
106	1	0.0	1	1
119	1	0.0	1	1
127	2	0.0	1	2
129	3	0.0	1	3
133	1	0.0	1	1
134	1	0.0	1	1
135	1	0.0	1	1
140	1	0.0	1	0 1
142	2	0.0	1	2
143	1	0.0	1	1
150	2	0.0	1	2
151	1	0.0	1	1
154	1	0.0	1	1
155	1	0.0	1	1
157	2	0.0	1	2
161	1	0.0	1	1
162	1	0.0	1	1
163	1	0.0	1	1
167	2	0.0	1	1 1
172	1	0.0	1	1
176	1	0.0	1	1
177	1	0.0	1	1
182	1	0.0	1	1
183	1	0.0	1	1
200	1	0.0	1	1
290	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-8_2.fastq.gz
=============================================
188798 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files H-8_1_trimmed.fq.gz and H-8_2_trimmed.fq.gz
file_1: H-8_1_trimmed.fq.gz, file_2: H-8_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: H-8_1_trimmed.fq.gz and H-8_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to H-8_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to H-8_2_val_2.fq.gz

Total number of sequences analysed: 188798

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 30812 (16.32%)


  >>> Now running FastQC on the validated data H-8_1_val_1.fq.gz<<<

Started analysis of H-8_1_val_1.fq.gz
Approx 5% complete for H-8_1_val_1.fq.gz
Approx 10% complete for H-8_1_val_1.fq.gz
Approx 15% complete for H-8_1_val_1.fq.gz
Approx 20% complete for H-8_1_val_1.fq.gz
Approx 25% complete for H-8_1_val_1.fq.gz
Approx 30% complete for H-8_1_val_1.fq.gz
Approx 35% complete for H-8_1_val_1.fq.gz
Approx 40% complete for H-8_1_val_1.fq.gz
Approx 45% complete for H-8_1_val_1.fq.gz
Approx 50% complete for H-8_1_val_1.fq.gz
Approx 55% complete for H-8_1_val_1.fq.gz
Approx 60% complete for H-8_1_val_1.fq.gz
Approx 65% complete for H-8_1_val_1.fq.gz
Approx 70% complete for H-8_1_val_1.fq.gz
Approx 75% complete for H-8_1_val_1.fq.gz
Approx 80% complete for H-8_1_val_1.fq.gz
Approx 85% complete for H-8_1_val_1.fq.gz
Approx 90% complete for H-8_1_val_1.fq.gz
Approx 95% complete for H-8_1_val_1.fq.gz
Analysis complete for H-8_1_val_1.fq.gz

  >>> Now running FastQC on the validated data H-8_2_val_2.fq.gz<<<

Started analysis of H-8_2_val_2.fq.gz
Approx 5% complete for H-8_2_val_2.fq.gz
Approx 10% complete for H-8_2_val_2.fq.gz
Approx 15% complete for H-8_2_val_2.fq.gz
Approx 20% complete for H-8_2_val_2.fq.gz
Approx 25% complete for H-8_2_val_2.fq.gz
Approx 30% complete for H-8_2_val_2.fq.gz
Approx 35% complete for H-8_2_val_2.fq.gz
Approx 40% complete for H-8_2_val_2.fq.gz
Approx 45% complete for H-8_2_val_2.fq.gz
Approx 50% complete for H-8_2_val_2.fq.gz
Approx 55% complete for H-8_2_val_2.fq.gz
Approx 60% complete for H-8_2_val_2.fq.gz
Approx 65% complete for H-8_2_val_2.fq.gz
Approx 70% complete for H-8_2_val_2.fq.gz
Approx 75% complete for H-8_2_val_2.fq.gz
Approx 80% complete for H-8_2_val_2.fq.gz
Approx 85% complete for H-8_2_val_2.fq.gz
Approx 90% complete for H-8_2_val_2.fq.gz
Approx 95% complete for H-8_2_val_2.fq.gz
Analysis complete for H-8_2_val_2.fq.gz
Deleting both intermediate output files H-8_1_trimmed.fq.gz and H-8_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to H-9 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/H-9_1.fastq.gz data/H-9_2.fastq.gz -o results/02.trimgalore/H-9_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/H-9_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-9_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/H-9_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	47	CTGTCTCTTATA	188855	0.02
smallRNA	0	TGGAATTCTCGG	188855	0.00
Illumina	0	AGATCGGAAGAGC	188855	0.00
Using Nextera adapter for trimming (count: 47). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-9_trimgalore/H-9_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-9_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to H-9_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-9_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-9_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.713 s (3.775 µs/read; 15.90 M reads/minute).

=== Summary ===

Total reads processed:                 188,855
Reads with adapters:                    10,560 (5.6%)
Reads written (passing filters):       188,855 (100.0%)

Total basepairs processed:    56,845,355 bp
Quality-trimmed:                 309,169 bp (0.5%)
Total written (filtered):     56,508,797 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 10560 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 62.4%
  C: 9.7%
  G: 17.3%
  T: 10.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4602	47213.8	0	4602
2	2600	11803.4	0	2600
3	3179	2950.9	0	3179
4	82	737.7	0	82
5	18	184.4	0	18
6	25	46.1	0	25
12	1	0.0	1	1
26	1	0.0	1	1
36	1	0.0	1	0 1
78	7	0.0	1	7
79	1	0.0	1	1
80	1	0.0	1	1
82	3	0.0	1	3
85	1	0.0	1	1
86	1	0.0	1	1
87	1	0.0	1	1
89	1	0.0	1	1
94	2	0.0	1	2
99	1	0.0	1	1
100	1	0.0	1	1
104	1	0.0	1	1
105	2	0.0	1	2
117	1	0.0	1	1
130	1	0.0	1	1
137	1	0.0	1	0 1
139	1	0.0	1	1
141	1	0.0	1	1
156	1	0.0	1	1
161	1	0.0	1	1
162	1	0.0	1	1
167	1	0.0	1	0 1
173	1	0.0	1	1
174	1	0.0	1	1
180	1	0.0	1	1
188	1	0.0	1	1
191	1	0.0	1	1
197	1	0.0	1	0 1
203	1	0.0	1	1
205	1	0.0	1	1
207	1	0.0	1	1
209	1	0.0	1	1
218	1	0.0	1	1
219	1	0.0	1	0 1
225	1	0.0	1	0 1
226	1	0.0	1	1
235	1	0.0	1	1
240	1	0.0	1	1
244	1	0.0	1	1
277	1	0.0	1	1
288	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: data/H-9_1.fastq.gz
=============================================
188855 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/H-9_trimgalore/H-9_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/H-9_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to H-9_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/H-9_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/H-9_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.739 s (3.913 µs/read; 15.33 M reads/minute).

=== Summary ===

Total reads processed:                 188,855
Reads with adapters:                   123,993 (65.7%)
Reads written (passing filters):       188,855 (100.0%)

Total basepairs processed:    56,845,355 bp
Quality-trimmed:               5,192,975 bp (9.1%)
Total written (filtered):     51,509,705 bp (90.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 123993 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.1%
  C: 53.7%
  G: 29.2%
  T: 4.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	114100	47213.8	0	114100
2	7164	11803.4	0	7164
3	2351	2950.9	0	2351
4	167	737.7	0	167
5	125	184.4	0	125
6	27	46.1	0	27
7	2	11.5	0	2
10	1	0.2	1	0 1
11	1	0.0	1	0 1
14	1	0.0	1	1
29	1	0.0	1	1
31	1	0.0	1	0 1
32	1	0.0	1	1
35	1	0.0	1	1
40	1	0.0	1	1
45	1	0.0	1	0 1
51	1	0.0	1	1
65	1	0.0	1	1
77	1	0.0	1	0 1
80	1	0.0	1	1
82	5	0.0	1	3 2
83	2	0.0	1	1 1
84	2	0.0	1	2
85	2	0.0	1	1 1
86	1	0.0	1	1
87	1	0.0	1	1
88	1	0.0	1	1
91	1	0.0	1	1
92	1	0.0	1	1
93	1	0.0	1	1
95	1	0.0	1	1
101	1	0.0	1	0 1
102	1	0.0	1	1
104	1	0.0	1	1
105	1	0.0	1	1
114	2	0.0	1	1 1
115	1	0.0	1	0 1
120	2	0.0	1	2
125	2	0.0	1	2
130	1	0.0	1	1
140	1	0.0	1	1
142	1	0.0	1	1
144	1	0.0	1	1
145	1	0.0	1	1
146	1	0.0	1	1
149	1	0.0	1	1
154	1	0.0	1	1
156	1	0.0	1	1
159	1	0.0	1	1
161	1	0.0	1	1
176	1	0.0	1	0 1
192	1	0.0	1	1
198	1	0.0	1	0 1
222	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/H-9_2.fastq.gz
=============================================
188855 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files H-9_1_trimmed.fq.gz and H-9_2_trimmed.fq.gz
file_1: H-9_1_trimmed.fq.gz, file_2: H-9_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: H-9_1_trimmed.fq.gz and H-9_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to H-9_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to H-9_2_val_2.fq.gz

Total number of sequences analysed: 188855

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 38150 (20.20%)


  >>> Now running FastQC on the validated data H-9_1_val_1.fq.gz<<<

Started analysis of H-9_1_val_1.fq.gz
Approx 5% complete for H-9_1_val_1.fq.gz
Approx 10% complete for H-9_1_val_1.fq.gz
Approx 15% complete for H-9_1_val_1.fq.gz
Approx 20% complete for H-9_1_val_1.fq.gz
Approx 25% complete for H-9_1_val_1.fq.gz
Approx 30% complete for H-9_1_val_1.fq.gz
Approx 35% complete for H-9_1_val_1.fq.gz
Approx 40% complete for H-9_1_val_1.fq.gz
Approx 45% complete for H-9_1_val_1.fq.gz
Approx 50% complete for H-9_1_val_1.fq.gz
Approx 55% complete for H-9_1_val_1.fq.gz
Approx 60% complete for H-9_1_val_1.fq.gz
Approx 65% complete for H-9_1_val_1.fq.gz
Approx 70% complete for H-9_1_val_1.fq.gz
Approx 75% complete for H-9_1_val_1.fq.gz
Approx 80% complete for H-9_1_val_1.fq.gz
Approx 85% complete for H-9_1_val_1.fq.gz
Approx 90% complete for H-9_1_val_1.fq.gz
Approx 95% complete for H-9_1_val_1.fq.gz
Analysis complete for H-9_1_val_1.fq.gz

  >>> Now running FastQC on the validated data H-9_2_val_2.fq.gz<<<

Started analysis of H-9_2_val_2.fq.gz
Approx 5% complete for H-9_2_val_2.fq.gz
Approx 10% complete for H-9_2_val_2.fq.gz
Approx 15% complete for H-9_2_val_2.fq.gz
Approx 20% complete for H-9_2_val_2.fq.gz
Approx 25% complete for H-9_2_val_2.fq.gz
Approx 30% complete for H-9_2_val_2.fq.gz
Approx 35% complete for H-9_2_val_2.fq.gz
Approx 40% complete for H-9_2_val_2.fq.gz
Approx 45% complete for H-9_2_val_2.fq.gz
Approx 50% complete for H-9_2_val_2.fq.gz
Approx 55% complete for H-9_2_val_2.fq.gz
Approx 60% complete for H-9_2_val_2.fq.gz
Approx 65% complete for H-9_2_val_2.fq.gz
Approx 70% complete for H-9_2_val_2.fq.gz
Approx 75% complete for H-9_2_val_2.fq.gz
Approx 80% complete for H-9_2_val_2.fq.gz
Approx 85% complete for H-9_2_val_2.fq.gz
Approx 90% complete for H-9_2_val_2.fq.gz
Approx 95% complete for H-9_2_val_2.fq.gz
Analysis complete for H-9_2_val_2.fq.gz
Deleting both intermediate output files H-9_1_trimmed.fq.gz and H-9_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to SAH-1 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/SAH-1_1.fastq.gz data/SAH-1_2.fastq.gz -o results/02.trimgalore/SAH-1_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/SAH-1_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-1_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/SAH-1_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	77	CTGTCTCTTATA	193171	0.04
smallRNA	0	TGGAATTCTCGG	193171	0.00
Illumina	0	AGATCGGAAGAGC	193171	0.00
Using Nextera adapter for trimming (count: 77). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-1_trimgalore/SAH-1_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-1_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to SAH-1_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-1_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-1_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.821 s (4.251 µs/read; 14.11 M reads/minute).

=== Summary ===

Total reads processed:                 193,171
Reads with adapters:                    14,376 (7.4%)
Reads written (passing filters):       193,171 (100.0%)

Total basepairs processed:    58,144,471 bp
Quality-trimmed:                 353,947 bp (0.6%)
Total written (filtered):     57,750,984 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 14376 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 40.9%
  C: 13.1%
  G: 25.2%
  T: 20.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	7705	48292.8	0	7705
2	2944	12073.2	0	2944
3	3400	3018.3	0	3400
4	209	754.6	0	209
5	27	188.6	0	27
6	4	47.2	0	4
7	1	11.8	0	1
20	1	0.0	1	1
25	1	0.0	1	1
30	1	0.0	1	1
78	4	0.0	1	4
79	1	0.0	1	1
80	1	0.0	1	1
81	2	0.0	1	2
83	1	0.0	1	1
84	1	0.0	1	1
85	1	0.0	1	1
95	1	0.0	1	1
96	1	0.0	1	0 1
98	2	0.0	1	1 1
101	1	0.0	1	1
104	2	0.0	1	0 2
106	1	0.0	1	1
107	1	0.0	1	1
109	1	0.0	1	1
111	1	0.0	1	1
113	1	0.0	1	1
119	2	0.0	1	2
121	1	0.0	1	0 1
124	1	0.0	1	1
126	1	0.0	1	1
130	1	0.0	1	1
133	1	0.0	1	1
134	1	0.0	1	1
139	1	0.0	1	1
142	1	0.0	1	1
144	1	0.0	1	1
145	1	0.0	1	1
149	1	0.0	1	1
158	1	0.0	1	1
159	1	0.0	1	1
164	1	0.0	1	1
177	1	0.0	1	0 1
178	1	0.0	1	1
181	1	0.0	1	1
184	1	0.0	1	0 1
189	1	0.0	1	1
190	1	0.0	1	1
194	1	0.0	1	1
197	1	0.0	1	1
200	1	0.0	1	1
201	1	0.0	1	1
205	1	0.0	1	1
212	1	0.0	1	1
214	1	0.0	1	0 1
216	1	0.0	1	1
217	1	0.0	1	1
221	1	0.0	1	1
223	1	0.0	1	1
224	3	0.0	1	3
225	1	0.0	1	1
226	1	0.0	1	1
228	1	0.0	1	1
234	1	0.0	1	1
239	1	0.0	1	1
243	2	0.0	1	2
244	1	0.0	1	1
251	1	0.0	1	1
253	2	0.0	1	2
262	1	0.0	1	1
263	1	0.0	1	1
267	1	0.0	1	1
274	2	0.0	1	2
278	1	0.0	1	1
279	1	0.0	1	1
284	1	0.0	1	0 1
288	2	0.0	1	2
289	1	0.0	1	1
290	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/SAH-1_1.fastq.gz
=============================================
193171 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-1_trimgalore/SAH-1_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-1_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to SAH-1_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-1_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-1_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.783 s (4.052 µs/read; 14.81 M reads/minute).

=== Summary ===

Total reads processed:                 193,171
Reads with adapters:                   131,961 (68.3%)
Reads written (passing filters):       193,171 (100.0%)

Total basepairs processed:    58,144,471 bp
Quality-trimmed:               4,733,278 bp (8.1%)
Total written (filtered):     53,257,722 bp (91.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 131961 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.0%
  C: 58.9%
  G: 25.7%
  T: 3.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	123303	48292.8	0	123303
2	6465	12073.2	0	6465
3	1861	3018.3	0	1861
4	163	754.6	0	163
5	64	188.6	0	64
6	19	47.2	0	19
9	1	0.7	0	0 1
15	1	0.0	1	0 1
30	1	0.0	1	1
37	1	0.0	1	1
41	1	0.0	1	1
43	1	0.0	1	0 1
44	1	0.0	1	1
52	2	0.0	1	2
58	1	0.0	1	1
59	1	0.0	1	1
60	1	0.0	1	1
75	1	0.0	1	0 1
80	1	0.0	1	1
81	1	0.0	1	1
82	4	0.0	1	3 1
83	2	0.0	1	2
84	2	0.0	1	1 1
85	2	0.0	1	2
86	1	0.0	1	1
87	1	0.0	1	1
88	1	0.0	1	1
89	2	0.0	1	2
90	2	0.0	1	1 1
91	1	0.0	1	1
92	1	0.0	1	1
93	2	0.0	1	1 1
94	1	0.0	1	0 1
98	1	0.0	1	1
100	1	0.0	1	1
102	2	0.0	1	1 1
105	1	0.0	1	1
107	1	0.0	1	1
108	1	0.0	1	1
111	1	0.0	1	1
114	1	0.0	1	1
123	1	0.0	1	1
126	1	0.0	1	1
130	2	0.0	1	2
131	1	0.0	1	1
139	2	0.0	1	2
148	2	0.0	1	2
149	1	0.0	1	1
152	1	0.0	1	1
155	1	0.0	1	1
162	1	0.0	1	1
164	1	0.0	1	1
165	2	0.0	1	2
168	2	0.0	1	2
169	1	0.0	1	1
176	2	0.0	1	1 1
177	1	0.0	1	0 1
180	2	0.0	1	2
181	1	0.0	1	1
182	1	0.0	1	0 1
185	2	0.0	1	2
186	1	0.0	1	1
187	1	0.0	1	1
190	3	0.0	1	3
196	1	0.0	1	1
197	2	0.0	1	2
202	1	0.0	1	1
204	1	0.0	1	0 1
290	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/SAH-1_2.fastq.gz
=============================================
193171 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SAH-1_1_trimmed.fq.gz and SAH-1_2_trimmed.fq.gz
file_1: SAH-1_1_trimmed.fq.gz, file_2: SAH-1_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SAH-1_1_trimmed.fq.gz and SAH-1_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SAH-1_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SAH-1_2_val_2.fq.gz

Total number of sequences analysed: 193171

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 32988 (17.08%)


  >>> Now running FastQC on the validated data SAH-1_1_val_1.fq.gz<<<

Started analysis of SAH-1_1_val_1.fq.gz
Approx 5% complete for SAH-1_1_val_1.fq.gz
Approx 10% complete for SAH-1_1_val_1.fq.gz
Approx 15% complete for SAH-1_1_val_1.fq.gz
Approx 20% complete for SAH-1_1_val_1.fq.gz
Approx 25% complete for SAH-1_1_val_1.fq.gz
Approx 30% complete for SAH-1_1_val_1.fq.gz
Approx 35% complete for SAH-1_1_val_1.fq.gz
Approx 40% complete for SAH-1_1_val_1.fq.gz
Approx 45% complete for SAH-1_1_val_1.fq.gz
Approx 50% complete for SAH-1_1_val_1.fq.gz
Approx 55% complete for SAH-1_1_val_1.fq.gz
Approx 60% complete for SAH-1_1_val_1.fq.gz
Approx 65% complete for SAH-1_1_val_1.fq.gz
Approx 70% complete for SAH-1_1_val_1.fq.gz
Approx 75% complete for SAH-1_1_val_1.fq.gz
Approx 80% complete for SAH-1_1_val_1.fq.gz
Approx 85% complete for SAH-1_1_val_1.fq.gz
Approx 90% complete for SAH-1_1_val_1.fq.gz
Approx 95% complete for SAH-1_1_val_1.fq.gz
Analysis complete for SAH-1_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SAH-1_2_val_2.fq.gz<<<

Started analysis of SAH-1_2_val_2.fq.gz
Approx 5% complete for SAH-1_2_val_2.fq.gz
Approx 10% complete for SAH-1_2_val_2.fq.gz
Approx 15% complete for SAH-1_2_val_2.fq.gz
Approx 20% complete for SAH-1_2_val_2.fq.gz
Approx 25% complete for SAH-1_2_val_2.fq.gz
Approx 30% complete for SAH-1_2_val_2.fq.gz
Approx 35% complete for SAH-1_2_val_2.fq.gz
Approx 40% complete for SAH-1_2_val_2.fq.gz
Approx 45% complete for SAH-1_2_val_2.fq.gz
Approx 50% complete for SAH-1_2_val_2.fq.gz
Approx 55% complete for SAH-1_2_val_2.fq.gz
Approx 60% complete for SAH-1_2_val_2.fq.gz
Approx 65% complete for SAH-1_2_val_2.fq.gz
Approx 70% complete for SAH-1_2_val_2.fq.gz
Approx 75% complete for SAH-1_2_val_2.fq.gz
Approx 80% complete for SAH-1_2_val_2.fq.gz
Approx 85% complete for SAH-1_2_val_2.fq.gz
Approx 90% complete for SAH-1_2_val_2.fq.gz
Approx 95% complete for SAH-1_2_val_2.fq.gz
Analysis complete for SAH-1_2_val_2.fq.gz
Deleting both intermediate output files SAH-1_1_trimmed.fq.gz and SAH-1_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to SAH-10 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/SAH-10_1.fastq.gz data/SAH-10_2.fastq.gz -o results/02.trimgalore/SAH-10_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/SAH-10_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-10_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/SAH-10_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	91	CTGTCTCTTATA	198421	0.05
Illumina	0	AGATCGGAAGAGC	198421	0.00
smallRNA	0	TGGAATTCTCGG	198421	0.00
Using Nextera adapter for trimming (count: 91). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-10_trimgalore/SAH-10_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-10_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to SAH-10_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-10_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-10_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.799 s (4.027 µs/read; 14.90 M reads/minute).

=== Summary ===

Total reads processed:                 198,421
Reads with adapters:                    13,709 (6.9%)
Reads written (passing filters):       198,421 (100.0%)

Total basepairs processed:    59,724,721 bp
Quality-trimmed:                 460,279 bp (0.8%)
Total written (filtered):     59,227,264 bp (99.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 13709 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 44.1%
  C: 15.7%
  G: 24.4%
  T: 15.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	7908	49605.2	0	7908
2	2598	12401.3	0	2598
3	2856	3100.3	0	2856
4	194	775.1	0	194
5	48	193.8	0	48
6	2	48.4	0	2
7	4	12.1	0	4
29	2	0.0	1	2
36	1	0.0	1	0 1
37	1	0.0	1	0 1
57	2	0.0	1	0 2
77	1	0.0	1	0 1
78	6	0.0	1	6
79	2	0.0	1	2
80	5	0.0	1	5
81	1	0.0	1	1
82	1	0.0	1	1
83	6	0.0	1	6
84	2	0.0	1	2
85	1	0.0	1	1
90	2	0.0	1	2
91	1	0.0	1	1
92	2	0.0	1	2
93	2	0.0	1	2
95	2	0.0	1	2
100	1	0.0	1	1
104	2	0.0	1	2
105	2	0.0	1	2
107	1	0.0	1	1
109	1	0.0	1	1
124	1	0.0	1	1
135	1	0.0	1	1
140	1	0.0	1	1
141	1	0.0	1	1
146	1	0.0	1	1
148	1	0.0	1	1
153	1	0.0	1	1
159	1	0.0	1	1
160	1	0.0	1	1
161	1	0.0	1	0 1
164	2	0.0	1	2
166	1	0.0	1	1
167	1	0.0	1	1
169	1	0.0	1	1
173	1	0.0	1	1
174	1	0.0	1	1
178	1	0.0	1	1
181	1	0.0	1	1
185	1	0.0	1	1
187	2	0.0	1	2
189	1	0.0	1	1
191	1	0.0	1	1
197	1	0.0	1	1
201	1	0.0	1	1
203	1	0.0	1	1
206	3	0.0	1	2 1
209	1	0.0	1	1
210	1	0.0	1	1
213	1	0.0	1	1
216	1	0.0	1	1
217	1	0.0	1	1
219	1	0.0	1	1
223	1	0.0	1	1
226	1	0.0	1	1
228	1	0.0	1	1
244	1	0.0	1	1
245	1	0.0	1	1
247	1	0.0	1	1
249	1	0.0	1	1
254	1	0.0	1	1
272	1	0.0	1	1
274	1	0.0	1	1
278	1	0.0	1	1
279	1	0.0	1	1
289	1	0.0	1	1
290	3	0.0	1	2 1

RUN STATISTICS FOR INPUT FILE: data/SAH-10_1.fastq.gz
=============================================
198421 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-10_trimgalore/SAH-10_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-10_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to SAH-10_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-10_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-10_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.826 s (4.161 µs/read; 14.42 M reads/minute).

=== Summary ===

Total reads processed:                 198,421
Reads with adapters:                   133,519 (67.3%)
Reads written (passing filters):       198,421 (100.0%)

Total basepairs processed:    59,724,721 bp
Quality-trimmed:               4,878,571 bp (8.2%)
Total written (filtered):     54,690,915 bp (91.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 133519 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.4%
  C: 57.3%
  G: 27.0%
  T: 3.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	124438	49605.2	0	124438
2	6685	12401.3	0	6685
3	2087	3100.3	0	2087
4	140	775.1	0	140
5	65	193.8	0	65
6	8	48.4	0	8
8	1	3.0	0	1
10	1	0.2	1	0 1
28	1	0.0	1	0 1
31	1	0.0	1	1
32	2	0.0	1	2
34	1	0.0	1	1
39	1	0.0	1	1
44	2	0.0	1	2
45	2	0.0	1	1 1
47	1	0.0	1	1
48	2	0.0	1	2
54	1	0.0	1	1
55	1	0.0	1	1
56	1	0.0	1	1
77	1	0.0	1	0 1
81	1	0.0	1	1
83	2	0.0	1	2
84	4	0.0	1	4
85	1	0.0	1	1
86	3	0.0	1	3
87	5	0.0	1	5
88	3	0.0	1	3
89	2	0.0	1	2
90	6	0.0	1	6
91	2	0.0	1	2
92	3	0.0	1	2 1
94	1	0.0	1	1
95	2	0.0	1	2
97	2	0.0	1	2
100	1	0.0	1	1
103	1	0.0	1	1
105	2	0.0	1	2
106	1	0.0	1	1
111	2	0.0	1	2
116	1	0.0	1	1
120	1	0.0	1	0 1
124	1	0.0	1	1
128	1	0.0	1	1
133	1	0.0	1	1
134	1	0.0	1	1
136	1	0.0	1	1
142	2	0.0	1	2
144	3	0.0	1	3
148	1	0.0	1	0 1
151	1	0.0	1	1
159	2	0.0	1	2
163	1	0.0	1	1
166	2	0.0	1	2
170	1	0.0	1	1
173	1	0.0	1	1
175	1	0.0	1	1
176	1	0.0	1	1
179	1	0.0	1	0 1
183	1	0.0	1	0 1
187	1	0.0	1	1
192	1	0.0	1	1
193	2	0.0	1	2
195	1	0.0	1	1
196	1	0.0	1	1
215	1	0.0	1	1
290	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/SAH-10_2.fastq.gz
=============================================
198421 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SAH-10_1_trimmed.fq.gz and SAH-10_2_trimmed.fq.gz
file_1: SAH-10_1_trimmed.fq.gz, file_2: SAH-10_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SAH-10_1_trimmed.fq.gz and SAH-10_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SAH-10_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SAH-10_2_val_2.fq.gz

Total number of sequences analysed: 198421

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 34115 (17.19%)


  >>> Now running FastQC on the validated data SAH-10_1_val_1.fq.gz<<<

Started analysis of SAH-10_1_val_1.fq.gz
Approx 5% complete for SAH-10_1_val_1.fq.gz
Approx 10% complete for SAH-10_1_val_1.fq.gz
Approx 15% complete for SAH-10_1_val_1.fq.gz
Approx 20% complete for SAH-10_1_val_1.fq.gz
Approx 25% complete for SAH-10_1_val_1.fq.gz
Approx 30% complete for SAH-10_1_val_1.fq.gz
Approx 35% complete for SAH-10_1_val_1.fq.gz
Approx 40% complete for SAH-10_1_val_1.fq.gz
Approx 45% complete for SAH-10_1_val_1.fq.gz
Approx 50% complete for SAH-10_1_val_1.fq.gz
Approx 55% complete for SAH-10_1_val_1.fq.gz
Approx 60% complete for SAH-10_1_val_1.fq.gz
Approx 65% complete for SAH-10_1_val_1.fq.gz
Approx 70% complete for SAH-10_1_val_1.fq.gz
Approx 75% complete for SAH-10_1_val_1.fq.gz
Approx 80% complete for SAH-10_1_val_1.fq.gz
Approx 85% complete for SAH-10_1_val_1.fq.gz
Approx 90% complete for SAH-10_1_val_1.fq.gz
Approx 95% complete for SAH-10_1_val_1.fq.gz
Analysis complete for SAH-10_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SAH-10_2_val_2.fq.gz<<<

Started analysis of SAH-10_2_val_2.fq.gz
Approx 5% complete for SAH-10_2_val_2.fq.gz
Approx 10% complete for SAH-10_2_val_2.fq.gz
Approx 15% complete for SAH-10_2_val_2.fq.gz
Approx 20% complete for SAH-10_2_val_2.fq.gz
Approx 25% complete for SAH-10_2_val_2.fq.gz
Approx 30% complete for SAH-10_2_val_2.fq.gz
Approx 35% complete for SAH-10_2_val_2.fq.gz
Approx 40% complete for SAH-10_2_val_2.fq.gz
Approx 45% complete for SAH-10_2_val_2.fq.gz
Approx 50% complete for SAH-10_2_val_2.fq.gz
Approx 55% complete for SAH-10_2_val_2.fq.gz
Approx 60% complete for SAH-10_2_val_2.fq.gz
Approx 65% complete for SAH-10_2_val_2.fq.gz
Approx 70% complete for SAH-10_2_val_2.fq.gz
Approx 75% complete for SAH-10_2_val_2.fq.gz
Approx 80% complete for SAH-10_2_val_2.fq.gz
Approx 85% complete for SAH-10_2_val_2.fq.gz
Approx 90% complete for SAH-10_2_val_2.fq.gz
Approx 95% complete for SAH-10_2_val_2.fq.gz
Analysis complete for SAH-10_2_val_2.fq.gz
Deleting both intermediate output files SAH-10_1_trimmed.fq.gz and SAH-10_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to SAH-2 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/SAH-2_1.fastq.gz data/SAH-2_2.fastq.gz -o results/02.trimgalore/SAH-2_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/SAH-2_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-2_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/SAH-2_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	187	CTGTCTCTTATA	257751	0.07
Illumina	0	AGATCGGAAGAGC	257751	0.00
smallRNA	0	TGGAATTCTCGG	257751	0.00
Using Nextera adapter for trimming (count: 187). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-2_trimgalore/SAH-2_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-2_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to SAH-2_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-2_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-2_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 1.026 s (3.982 µs/read; 15.07 M reads/minute).

=== Summary ===

Total reads processed:                 257,751
Reads with adapters:                    16,582 (6.4%)
Reads written (passing filters):       257,751 (100.0%)

Total basepairs processed:    77,583,051 bp
Quality-trimmed:                 470,727 bp (0.6%)
Total written (filtered):     77,051,860 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 16582 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 43.5%
  C: 14.6%
  G: 23.8%
  T: 18.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	8928	64437.8	0	8928
2	3251	16109.4	0	3251
3	3762	4027.4	0	3762
4	385	1006.8	0	385
5	41	251.7	0	41
6	10	62.9	0	10
7	3	15.7	0	3
8	1	3.9	0	1
11	2	0.1	1	1 1
27	1	0.0	1	1
29	1	0.0	1	1
36	3	0.0	1	0 3
51	1	0.0	1	0 1
56	1	0.0	1	0 1
57	1	0.0	1	0 1
77	2	0.0	1	2
78	8	0.0	1	8
79	5	0.0	1	5
80	5	0.0	1	5
81	2	0.0	1	2
82	3	0.0	1	3
83	2	0.0	1	2
84	1	0.0	1	1
85	2	0.0	1	2
86	1	0.0	1	1
87	2	0.0	1	2
88	1	0.0	1	1
89	4	0.0	1	4
90	1	0.0	1	1
91	2	0.0	1	2
92	3	0.0	1	3
94	3	0.0	1	3
95	1	0.0	1	1
97	2	0.0	1	2
99	1	0.0	1	1
100	2	0.0	1	2
104	3	0.0	1	2 1
105	2	0.0	1	2
107	3	0.0	1	3
109	1	0.0	1	1
111	1	0.0	1	1
112	1	0.0	1	0 1
114	1	0.0	1	1
115	1	0.0	1	1
117	2	0.0	1	2
119	1	0.0	1	1
122	2	0.0	1	2
128	3	0.0	1	3
129	1	0.0	1	1
131	2	0.0	1	2
134	1	0.0	1	1
135	2	0.0	1	2
137	1	0.0	1	1
138	1	0.0	1	1
139	2	0.0	1	2
141	3	0.0	1	3
143	1	0.0	1	1
145	1	0.0	1	1
146	1	0.0	1	1
148	1	0.0	1	1
149	1	0.0	1	1
150	2	0.0	1	2
153	2	0.0	1	2
154	1	0.0	1	0 1
155	1	0.0	1	1
158	2	0.0	1	2
160	3	0.0	1	3
161	1	0.0	1	1
162	1	0.0	1	1
163	1	0.0	1	1
168	2	0.0	1	2
169	1	0.0	1	1
172	1	0.0	1	1
173	1	0.0	1	1
178	1	0.0	1	1
179	1	0.0	1	1
183	2	0.0	1	1 1
184	1	0.0	1	1
185	1	0.0	1	1
188	1	0.0	1	1
192	1	0.0	1	1
196	1	0.0	1	1
197	1	0.0	1	1
199	3	0.0	1	3
200	2	0.0	1	2
201	1	0.0	1	1
202	1	0.0	1	1
203	1	0.0	1	1
205	3	0.0	1	3
207	1	0.0	1	1
208	1	0.0	1	1
209	1	0.0	1	0 1
210	1	0.0	1	1
213	1	0.0	1	0 1
214	1	0.0	1	1
215	1	0.0	1	1
217	2	0.0	1	2
218	2	0.0	1	2
219	1	0.0	1	1
223	1	0.0	1	1
226	1	0.0	1	1
228	2	0.0	1	2
230	2	0.0	1	2
231	1	0.0	1	1
234	1	0.0	1	1
239	1	0.0	1	1
240	4	0.0	1	3 1
241	1	0.0	1	1
246	1	0.0	1	1
248	1	0.0	1	1
251	1	0.0	1	1
252	3	0.0	1	3
271	1	0.0	1	1
272	1	0.0	1	1
274	1	0.0	1	1
275	2	0.0	1	2
278	2	0.0	1	2
282	1	0.0	1	1
285	2	0.0	1	2
286	1	0.0	1	1
287	1	0.0	1	1
288	6	0.0	1	6
289	2	0.0	1	2
290	3	0.0	1	3
291	4	0.0	1	4

RUN STATISTICS FOR INPUT FILE: data/SAH-2_1.fastq.gz
=============================================
257751 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-2_trimgalore/SAH-2_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-2_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to SAH-2_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-2_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-2_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 1.065 s (4.133 µs/read; 14.52 M reads/minute).

=== Summary ===

Total reads processed:                 257,751
Reads with adapters:                   172,220 (66.8%)
Reads written (passing filters):       257,751 (100.0%)

Total basepairs processed:    77,583,051 bp
Quality-trimmed:               7,498,975 bp (9.7%)
Total written (filtered):     69,874,336 bp (90.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 172220 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 14.0%
  C: 56.4%
  G: 25.6%
  T: 4.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	159537	64437.8	0	159537
2	9731	16109.4	0	9731
3	2444	4027.4	0	2444
4	211	1006.8	0	211
5	88	251.7	0	88
6	18	62.9	0	18
7	2	15.7	0	2
16	1	0.0	1	0 1
17	1	0.0	1	0 1
21	1	0.0	1	0 1
24	1	0.0	1	0 1
29	1	0.0	1	1
30	1	0.0	1	1
31	3	0.0	1	2 1
32	1	0.0	1	1
35	2	0.0	1	2
37	2	0.0	1	2
40	1	0.0	1	1
43	2	0.0	1	2
54	1	0.0	1	1
60	1	0.0	1	1
63	1	0.0	1	1
76	1	0.0	1	0 1
77	1	0.0	1	0 1
80	2	0.0	1	2
81	4	0.0	1	4
82	7	0.0	1	6 1
83	8	0.0	1	8
84	5	0.0	1	5
85	7	0.0	1	5 2
86	4	0.0	1	3 1
87	1	0.0	1	1
88	6	0.0	1	6
89	5	0.0	1	5
90	2	0.0	1	2
91	4	0.0	1	4
92	3	0.0	1	3
93	4	0.0	1	2 2
94	1	0.0	1	1
95	1	0.0	1	1
96	5	0.0	1	5
97	1	0.0	1	1
99	1	0.0	1	1
102	2	0.0	1	2
104	1	0.0	1	1
105	1	0.0	1	1
106	1	0.0	1	1
108	3	0.0	1	3
109	1	0.0	1	1
111	1	0.0	1	1
112	2	0.0	1	1 1
114	1	0.0	1	1
115	1	0.0	1	1
116	1	0.0	1	1
118	1	0.0	1	1
120	1	0.0	1	1
123	4	0.0	1	4
124	1	0.0	1	1
125	3	0.0	1	2 1
126	1	0.0	1	1
127	1	0.0	1	0 1
129	3	0.0	1	3
130	1	0.0	1	1
131	1	0.0	1	1
132	1	0.0	1	1
134	2	0.0	1	1 1
135	1	0.0	1	1
137	1	0.0	1	1
138	1	0.0	1	1
139	1	0.0	1	1
140	2	0.0	1	2
141	1	0.0	1	1
142	1	0.0	1	1
143	1	0.0	1	1
144	1	0.0	1	0 1
146	1	0.0	1	1
150	1	0.0	1	1
151	1	0.0	1	1
152	2	0.0	1	2
154	1	0.0	1	1
155	1	0.0	1	1
157	1	0.0	1	1
158	1	0.0	1	1
161	1	0.0	1	1
164	4	0.0	1	4
165	1	0.0	1	1
168	1	0.0	1	1
169	1	0.0	1	1
170	1	0.0	1	1
171	2	0.0	1	2
172	2	0.0	1	2
173	2	0.0	1	2
177	1	0.0	1	1
180	2	0.0	1	1 1
181	3	0.0	1	3
182	1	0.0	1	1
185	1	0.0	1	1
189	3	0.0	1	3
190	3	0.0	1	3
192	2	0.0	1	2
195	2	0.0	1	2
200	1	0.0	1	1
206	1	0.0	1	1
210	2	0.0	1	2
213	1	0.0	1	1
221	1	0.0	1	1
288	1	0.0	1	1
290	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/SAH-2_2.fastq.gz
=============================================
257751 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SAH-2_1_trimmed.fq.gz and SAH-2_2_trimmed.fq.gz
file_1: SAH-2_1_trimmed.fq.gz, file_2: SAH-2_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SAH-2_1_trimmed.fq.gz and SAH-2_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SAH-2_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SAH-2_2_val_2.fq.gz

Total number of sequences analysed: 257751

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 56564 (21.95%)


  >>> Now running FastQC on the validated data SAH-2_1_val_1.fq.gz<<<

Started analysis of SAH-2_1_val_1.fq.gz
Approx 5% complete for SAH-2_1_val_1.fq.gz
Approx 10% complete for SAH-2_1_val_1.fq.gz
Approx 15% complete for SAH-2_1_val_1.fq.gz
Approx 20% complete for SAH-2_1_val_1.fq.gz
Approx 25% complete for SAH-2_1_val_1.fq.gz
Approx 30% complete for SAH-2_1_val_1.fq.gz
Approx 35% complete for SAH-2_1_val_1.fq.gz
Approx 40% complete for SAH-2_1_val_1.fq.gz
Approx 45% complete for SAH-2_1_val_1.fq.gz
Approx 50% complete for SAH-2_1_val_1.fq.gz
Approx 55% complete for SAH-2_1_val_1.fq.gz
Approx 60% complete for SAH-2_1_val_1.fq.gz
Approx 65% complete for SAH-2_1_val_1.fq.gz
Approx 70% complete for SAH-2_1_val_1.fq.gz
Approx 75% complete for SAH-2_1_val_1.fq.gz
Approx 80% complete for SAH-2_1_val_1.fq.gz
Approx 85% complete for SAH-2_1_val_1.fq.gz
Approx 90% complete for SAH-2_1_val_1.fq.gz
Approx 95% complete for SAH-2_1_val_1.fq.gz
Analysis complete for SAH-2_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SAH-2_2_val_2.fq.gz<<<

Started analysis of SAH-2_2_val_2.fq.gz
Approx 5% complete for SAH-2_2_val_2.fq.gz
Approx 10% complete for SAH-2_2_val_2.fq.gz
Approx 15% complete for SAH-2_2_val_2.fq.gz
Approx 20% complete for SAH-2_2_val_2.fq.gz
Approx 25% complete for SAH-2_2_val_2.fq.gz
Approx 30% complete for SAH-2_2_val_2.fq.gz
Approx 35% complete for SAH-2_2_val_2.fq.gz
Approx 40% complete for SAH-2_2_val_2.fq.gz
Approx 45% complete for SAH-2_2_val_2.fq.gz
Approx 50% complete for SAH-2_2_val_2.fq.gz
Approx 55% complete for SAH-2_2_val_2.fq.gz
Approx 60% complete for SAH-2_2_val_2.fq.gz
Approx 65% complete for SAH-2_2_val_2.fq.gz
Approx 70% complete for SAH-2_2_val_2.fq.gz
Approx 75% complete for SAH-2_2_val_2.fq.gz
Approx 80% complete for SAH-2_2_val_2.fq.gz
Approx 85% complete for SAH-2_2_val_2.fq.gz
Approx 90% complete for SAH-2_2_val_2.fq.gz
Approx 95% complete for SAH-2_2_val_2.fq.gz
Analysis complete for SAH-2_2_val_2.fq.gz
Deleting both intermediate output files SAH-2_1_trimmed.fq.gz and SAH-2_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to SAH-3 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/SAH-3_1.fastq.gz data/SAH-3_2.fastq.gz -o results/02.trimgalore/SAH-3_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/SAH-3_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-3_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/SAH-3_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	58	CTGTCTCTTATA	171572	0.03
Illumina	0	AGATCGGAAGAGC	171572	0.00
smallRNA	0	TGGAATTCTCGG	171572	0.00
Using Nextera adapter for trimming (count: 58). Second best hit was Illumina (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-3_trimgalore/SAH-3_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-3_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to SAH-3_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-3_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-3_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.722 s (4.206 µs/read; 14.26 M reads/minute).

=== Summary ===

Total reads processed:                 171,572
Reads with adapters:                    18,326 (10.7%)
Reads written (passing filters):       171,572 (100.0%)

Total basepairs processed:    51,643,172 bp
Quality-trimmed:                 717,906 bp (1.4%)
Total written (filtered):     50,883,524 bp (98.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 18326 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 40.4%
  C: 15.8%
  G: 28.7%
  T: 15.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	10499	42893.0	0	10499
2	3657	10723.2	0	3657
3	3638	2680.8	0	3638
4	406	670.2	0	406
5	46	167.6	0	46
6	11	41.9	0	11
7	2	10.5	0	2
28	1	0.0	1	0 1
36	2	0.0	1	0 2
73	1	0.0	1	1
78	4	0.0	1	4
80	1	0.0	1	1
83	1	0.0	1	1
84	2	0.0	1	2
86	1	0.0	1	1
88	1	0.0	1	1
92	1	0.0	1	1
97	2	0.0	1	2
98	1	0.0	1	1
100	1	0.0	1	0 1
102	1	0.0	1	1
104	1	0.0	1	1
114	1	0.0	1	1
121	1	0.0	1	1
124	1	0.0	1	1
143	1	0.0	1	1
151	1	0.0	1	1
158	2	0.0	1	1 1
160	1	0.0	1	1
166	2	0.0	1	2
170	1	0.0	1	1
173	1	0.0	1	1
179	1	0.0	1	1
185	2	0.0	1	2
187	2	0.0	1	1 1
189	1	0.0	1	1
191	1	0.0	1	0 1
192	1	0.0	1	1
197	1	0.0	1	1
200	3	0.0	1	3
202	1	0.0	1	1
205	2	0.0	1	1 1
208	1	0.0	1	0 1
214	1	0.0	1	1
217	1	0.0	1	1
220	1	0.0	1	1
221	1	0.0	1	1
224	1	0.0	1	1
225	1	0.0	1	1
228	1	0.0	1	1
237	1	0.0	1	1
238	1	0.0	1	1
250	2	0.0	1	2
262	1	0.0	1	1
271	1	0.0	1	1
273	1	0.0	1	1
287	1	0.0	1	1
288	1	0.0	1	1
290	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/SAH-3_1.fastq.gz
=============================================
171572 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-3_trimgalore/SAH-3_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-3_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to SAH-3_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-3_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-3_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.723 s (4.213 µs/read; 14.24 M reads/minute).

=== Summary ===

Total reads processed:                 171,572
Reads with adapters:                   116,069 (67.7%)
Reads written (passing filters):       171,572 (100.0%)

Total basepairs processed:    51,643,172 bp
Quality-trimmed:               4,418,916 bp (8.6%)
Total written (filtered):     47,091,127 bp (91.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 116069 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.7%
  C: 56.4%
  G: 26.8%
  T: 4.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	107965	42893.0	0	107965
2	6077	10723.2	0	6077
3	1708	2680.8	0	1708
4	164	670.2	0	164
5	75	167.6	0	75
6	20	41.9	0	20
7	1	10.5	0	1
28	1	0.0	1	1
32	1	0.0	1	0 1
36	1	0.0	1	1
39	1	0.0	1	1
40	1	0.0	1	0 1
44	1	0.0	1	1
48	1	0.0	1	1
82	3	0.0	1	3
83	2	0.0	1	2
84	3	0.0	1	3
86	4	0.0	1	3 1
87	1	0.0	1	1
88	2	0.0	1	2
89	2	0.0	1	2
90	1	0.0	1	1
91	3	0.0	1	3
92	1	0.0	1	1
94	1	0.0	1	1
99	1	0.0	1	1
103	1	0.0	1	1
112	1	0.0	1	1
113	1	0.0	1	1
115	1	0.0	1	1
117	1	0.0	1	0 1
119	1	0.0	1	1
123	3	0.0	1	2 1
125	1	0.0	1	1
138	2	0.0	1	2
142	1	0.0	1	1
147	1	0.0	1	1
149	1	0.0	1	1
151	1	0.0	1	1
152	1	0.0	1	1
162	1	0.0	1	1
171	1	0.0	1	1
176	1	0.0	1	1
182	2	0.0	1	2
183	1	0.0	1	1
189	1	0.0	1	0 1
200	1	0.0	1	1
209	1	0.0	1	1
230	1	0.0	1	1
290	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/SAH-3_2.fastq.gz
=============================================
171572 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SAH-3_1_trimmed.fq.gz and SAH-3_2_trimmed.fq.gz
file_1: SAH-3_1_trimmed.fq.gz, file_2: SAH-3_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SAH-3_1_trimmed.fq.gz and SAH-3_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SAH-3_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SAH-3_2_val_2.fq.gz

Total number of sequences analysed: 171572

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 32601 (19.00%)


  >>> Now running FastQC on the validated data SAH-3_1_val_1.fq.gz<<<

Started analysis of SAH-3_1_val_1.fq.gz
Approx 5% complete for SAH-3_1_val_1.fq.gz
Approx 10% complete for SAH-3_1_val_1.fq.gz
Approx 15% complete for SAH-3_1_val_1.fq.gz
Approx 20% complete for SAH-3_1_val_1.fq.gz
Approx 25% complete for SAH-3_1_val_1.fq.gz
Approx 30% complete for SAH-3_1_val_1.fq.gz
Approx 35% complete for SAH-3_1_val_1.fq.gz
Approx 40% complete for SAH-3_1_val_1.fq.gz
Approx 45% complete for SAH-3_1_val_1.fq.gz
Approx 50% complete for SAH-3_1_val_1.fq.gz
Approx 55% complete for SAH-3_1_val_1.fq.gz
Approx 60% complete for SAH-3_1_val_1.fq.gz
Approx 65% complete for SAH-3_1_val_1.fq.gz
Approx 70% complete for SAH-3_1_val_1.fq.gz
Approx 75% complete for SAH-3_1_val_1.fq.gz
Approx 80% complete for SAH-3_1_val_1.fq.gz
Approx 85% complete for SAH-3_1_val_1.fq.gz
Approx 90% complete for SAH-3_1_val_1.fq.gz
Approx 95% complete for SAH-3_1_val_1.fq.gz
Analysis complete for SAH-3_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SAH-3_2_val_2.fq.gz<<<

Started analysis of SAH-3_2_val_2.fq.gz
Approx 5% complete for SAH-3_2_val_2.fq.gz
Approx 10% complete for SAH-3_2_val_2.fq.gz
Approx 15% complete for SAH-3_2_val_2.fq.gz
Approx 20% complete for SAH-3_2_val_2.fq.gz
Approx 25% complete for SAH-3_2_val_2.fq.gz
Approx 30% complete for SAH-3_2_val_2.fq.gz
Approx 35% complete for SAH-3_2_val_2.fq.gz
Approx 40% complete for SAH-3_2_val_2.fq.gz
Approx 45% complete for SAH-3_2_val_2.fq.gz
Approx 50% complete for SAH-3_2_val_2.fq.gz
Approx 55% complete for SAH-3_2_val_2.fq.gz
Approx 60% complete for SAH-3_2_val_2.fq.gz
Approx 65% complete for SAH-3_2_val_2.fq.gz
Approx 70% complete for SAH-3_2_val_2.fq.gz
Approx 75% complete for SAH-3_2_val_2.fq.gz
Approx 80% complete for SAH-3_2_val_2.fq.gz
Approx 85% complete for SAH-3_2_val_2.fq.gz
Approx 90% complete for SAH-3_2_val_2.fq.gz
Approx 95% complete for SAH-3_2_val_2.fq.gz
Analysis complete for SAH-3_2_val_2.fq.gz
Deleting both intermediate output files SAH-3_1_trimmed.fq.gz and SAH-3_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to SAH-4 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/SAH-4_1.fastq.gz data/SAH-4_2.fastq.gz -o results/02.trimgalore/SAH-4_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/SAH-4_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-4_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/SAH-4_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	93	CTGTCTCTTATA	210513	0.04
smallRNA	1	TGGAATTCTCGG	210513	0.00
Illumina	0	AGATCGGAAGAGC	210513	0.00
Using Nextera adapter for trimming (count: 93). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-4_trimgalore/SAH-4_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-4_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to SAH-4_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-4_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-4_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.809 s (3.841 µs/read; 15.62 M reads/minute).

=== Summary ===

Total reads processed:                 210,513
Reads with adapters:                    15,044 (7.1%)
Reads written (passing filters):       210,513 (100.0%)

Total basepairs processed:    63,364,413 bp
Quality-trimmed:                 419,882 bp (0.7%)
Total written (filtered):     62,903,055 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 15044 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 36.7%
  C: 14.9%
  G: 33.7%
  T: 14.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	8482	52628.2	0	8482
2	3533	13157.1	0	3533
3	2729	3289.3	0	2729
4	168	822.3	0	168
5	19	205.6	0	19
6	5	51.4	0	5
7	2	12.8	0	2
20	1	0.0	1	1
26	1	0.0	1	1
29	2	0.0	1	2
35	1	0.0	1	0 1
36	2	0.0	1	0 2
37	1	0.0	1	0 1
39	1	0.0	1	0 1
56	1	0.0	1	0 1
64	1	0.0	1	0 1
73	1	0.0	1	1
78	4	0.0	1	4
79	5	0.0	1	5
80	1	0.0	1	1
81	2	0.0	1	2
90	3	0.0	1	2 1
93	2	0.0	1	2
95	3	0.0	1	3
100	1	0.0	1	1
102	1	0.0	1	1
103	1	0.0	1	0 1
105	1	0.0	1	1
106	3	0.0	1	3
109	1	0.0	1	1
118	1	0.0	1	1
121	1	0.0	1	1
124	1	0.0	1	1
126	1	0.0	1	1
128	2	0.0	1	2
130	1	0.0	1	1
132	1	0.0	1	1
139	2	0.0	1	2
143	1	0.0	1	1
149	1	0.0	1	1
151	1	0.0	1	1
157	1	0.0	1	1
158	2	0.0	1	2
170	1	0.0	1	1
173	1	0.0	1	1
183	1	0.0	1	1
184	1	0.0	1	1
185	1	0.0	1	0 1
186	1	0.0	1	1
191	1	0.0	1	1
192	1	0.0	1	1
202	2	0.0	1	2
204	1	0.0	1	1
205	2	0.0	1	1 1
206	1	0.0	1	1
212	1	0.0	1	1
217	2	0.0	1	2
219	2	0.0	1	2
220	1	0.0	1	1
222	1	0.0	1	1
223	2	0.0	1	2
224	1	0.0	1	1
225	1	0.0	1	1
226	1	0.0	1	1
231	1	0.0	1	0 1
233	1	0.0	1	1
237	1	0.0	1	1
238	1	0.0	1	1
239	1	0.0	1	0 1
241	1	0.0	1	1
244	1	0.0	1	1
248	1	0.0	1	1
250	1	0.0	1	1
263	1	0.0	1	1
265	1	0.0	1	1
274	1	0.0	1	1
278	1	0.0	1	1
281	1	0.0	1	1
282	1	0.0	1	1
283	2	0.0	1	2
285	1	0.0	1	1
287	2	0.0	1	2
288	1	0.0	1	1
290	3	0.0	1	3

RUN STATISTICS FOR INPUT FILE: data/SAH-4_1.fastq.gz
=============================================
210513 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-4_trimgalore/SAH-4_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-4_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to SAH-4_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-4_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-4_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.835 s (3.964 µs/read; 15.14 M reads/minute).

=== Summary ===

Total reads processed:                 210,513
Reads with adapters:                   141,572 (67.3%)
Reads written (passing filters):       210,513 (100.0%)

Total basepairs processed:    63,364,413 bp
Quality-trimmed:               5,584,367 bp (8.8%)
Total written (filtered):     57,614,826 bp (90.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 141572 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.7%
  C: 56.3%
  G: 27.0%
  T: 4.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	131712	52628.2	0	131712
2	7415	13157.1	0	7415
3	2060	3289.3	0	2060
4	205	822.3	0	205
5	73	205.6	0	73
6	13	51.4	0	13
9	1	0.8	0	0 1
17	1	0.0	1	0 1
30	2	0.0	1	2
33	1	0.0	1	1
35	1	0.0	1	0 1
43	2	0.0	1	2
56	1	0.0	1	1
80	1	0.0	1	1
82	7	0.0	1	6 1
83	4	0.0	1	4
84	4	0.0	1	4
85	3	0.0	1	3
86	2	0.0	1	2
87	1	0.0	1	1
88	2	0.0	1	2
89	1	0.0	1	1
90	2	0.0	1	2
91	2	0.0	1	2
93	2	0.0	1	2
95	1	0.0	1	1
97	2	0.0	1	1 1
103	1	0.0	1	0 1
104	1	0.0	1	1
105	2	0.0	1	1 1
107	1	0.0	1	1
111	1	0.0	1	1
113	1	0.0	1	0 1
118	2	0.0	1	2
119	1	0.0	1	1
120	1	0.0	1	1
121	1	0.0	1	1
122	1	0.0	1	1
123	1	0.0	1	1
126	1	0.0	1	0 1
130	2	0.0	1	2
131	1	0.0	1	1
132	3	0.0	1	3
136	1	0.0	1	1
141	1	0.0	1	1
144	1	0.0	1	1
145	1	0.0	1	1
150	1	0.0	1	1
152	2	0.0	1	2
156	1	0.0	1	0 1
157	1	0.0	1	1
158	1	0.0	1	1
159	2	0.0	1	2
166	1	0.0	1	1
170	1	0.0	1	1
171	1	0.0	1	1
173	1	0.0	1	1
176	2	0.0	1	2
179	1	0.0	1	1
187	1	0.0	1	1
188	1	0.0	1	1
190	1	0.0	1	1
200	1	0.0	1	1
201	1	0.0	1	1
206	1	0.0	1	1
219	1	0.0	1	1
220	1	0.0	1	1
286	1	0.0	1	1
290	1	0.0	1	1
292	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: data/SAH-4_2.fastq.gz
=============================================
210513 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SAH-4_1_trimmed.fq.gz and SAH-4_2_trimmed.fq.gz
file_1: SAH-4_1_trimmed.fq.gz, file_2: SAH-4_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SAH-4_1_trimmed.fq.gz and SAH-4_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SAH-4_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SAH-4_2_val_2.fq.gz

Total number of sequences analysed: 210513

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 40612 (19.29%)


  >>> Now running FastQC on the validated data SAH-4_1_val_1.fq.gz<<<

Started analysis of SAH-4_1_val_1.fq.gz
Approx 5% complete for SAH-4_1_val_1.fq.gz
Approx 10% complete for SAH-4_1_val_1.fq.gz
Approx 15% complete for SAH-4_1_val_1.fq.gz
Approx 20% complete for SAH-4_1_val_1.fq.gz
Approx 25% complete for SAH-4_1_val_1.fq.gz
Approx 30% complete for SAH-4_1_val_1.fq.gz
Approx 35% complete for SAH-4_1_val_1.fq.gz
Approx 40% complete for SAH-4_1_val_1.fq.gz
Approx 45% complete for SAH-4_1_val_1.fq.gz
Approx 50% complete for SAH-4_1_val_1.fq.gz
Approx 55% complete for SAH-4_1_val_1.fq.gz
Approx 60% complete for SAH-4_1_val_1.fq.gz
Approx 65% complete for SAH-4_1_val_1.fq.gz
Approx 70% complete for SAH-4_1_val_1.fq.gz
Approx 75% complete for SAH-4_1_val_1.fq.gz
Approx 80% complete for SAH-4_1_val_1.fq.gz
Approx 85% complete for SAH-4_1_val_1.fq.gz
Approx 90% complete for SAH-4_1_val_1.fq.gz
Approx 95% complete for SAH-4_1_val_1.fq.gz
Analysis complete for SAH-4_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SAH-4_2_val_2.fq.gz<<<

Started analysis of SAH-4_2_val_2.fq.gz
Approx 5% complete for SAH-4_2_val_2.fq.gz
Approx 10% complete for SAH-4_2_val_2.fq.gz
Approx 15% complete for SAH-4_2_val_2.fq.gz
Approx 20% complete for SAH-4_2_val_2.fq.gz
Approx 25% complete for SAH-4_2_val_2.fq.gz
Approx 30% complete for SAH-4_2_val_2.fq.gz
Approx 35% complete for SAH-4_2_val_2.fq.gz
Approx 40% complete for SAH-4_2_val_2.fq.gz
Approx 45% complete for SAH-4_2_val_2.fq.gz
Approx 50% complete for SAH-4_2_val_2.fq.gz
Approx 55% complete for SAH-4_2_val_2.fq.gz
Approx 60% complete for SAH-4_2_val_2.fq.gz
Approx 65% complete for SAH-4_2_val_2.fq.gz
Approx 70% complete for SAH-4_2_val_2.fq.gz
Approx 75% complete for SAH-4_2_val_2.fq.gz
Approx 80% complete for SAH-4_2_val_2.fq.gz
Approx 85% complete for SAH-4_2_val_2.fq.gz
Approx 90% complete for SAH-4_2_val_2.fq.gz
Approx 95% complete for SAH-4_2_val_2.fq.gz
Analysis complete for SAH-4_2_val_2.fq.gz
Deleting both intermediate output files SAH-4_1_trimmed.fq.gz and SAH-4_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to SAH-5 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/SAH-5_1.fastq.gz data/SAH-5_2.fastq.gz -o results/02.trimgalore/SAH-5_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/SAH-5_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-5_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/SAH-5_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	165	CTGTCTCTTATA	215796	0.08
smallRNA	2	TGGAATTCTCGG	215796	0.00
Illumina	1	AGATCGGAAGAGC	215796	0.00
Using Nextera adapter for trimming (count: 165). Second best hit was smallRNA (count: 2)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-5_trimgalore/SAH-5_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-5_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to SAH-5_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-5_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-5_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.857 s (3.970 µs/read; 15.11 M reads/minute).

=== Summary ===

Total reads processed:                 215,796
Reads with adapters:                    13,745 (6.4%)
Reads written (passing filters):       215,796 (100.0%)

Total basepairs processed:    64,954,596 bp
Quality-trimmed:                 368,222 bp (0.6%)
Total written (filtered):     64,536,577 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 13745 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 39.3%
  C: 13.6%
  G: 32.7%
  T: 14.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	7872	53949.0	0	7872
2	3208	13487.2	0	3208
3	2244	3371.8	0	2244
4	210	843.0	0	210
5	25	210.7	0	25
6	10	52.7	0	10
7	1	13.2	0	1
26	1	0.0	1	1
29	1	0.0	1	1
36	1	0.0	1	0 1
41	1	0.0	1	1
50	1	0.0	1	1
62	1	0.0	1	1
64	1	0.0	1	1
74	1	0.0	1	1
76	2	0.0	1	1 1
78	5	0.0	1	5
79	7	0.0	1	7
80	1	0.0	1	1
81	5	0.0	1	5
82	3	0.0	1	3
83	2	0.0	1	1 1
84	2	0.0	1	2
85	1	0.0	1	1
86	3	0.0	1	3
87	1	0.0	1	1
88	1	0.0	1	1
90	2	0.0	1	2
92	2	0.0	1	1 1
93	1	0.0	1	1
94	2	0.0	1	2
95	2	0.0	1	2
96	2	0.0	1	2
98	1	0.0	1	1
99	1	0.0	1	1
100	1	0.0	1	0 1
101	1	0.0	1	1
102	2	0.0	1	2
104	2	0.0	1	1 1
109	1	0.0	1	1
112	1	0.0	1	1
114	2	0.0	1	2
115	3	0.0	1	3
118	1	0.0	1	1
121	1	0.0	1	1
123	2	0.0	1	2
135	2	0.0	1	2
138	2	0.0	1	2
139	1	0.0	1	1
140	1	0.0	1	1
142	1	0.0	1	1
144	2	0.0	1	2
145	1	0.0	1	1
146	1	0.0	1	1
147	1	0.0	1	1
148	3	0.0	1	3
149	2	0.0	1	2
151	1	0.0	1	1
154	1	0.0	1	1
155	1	0.0	1	1
156	2	0.0	1	1 1
158	1	0.0	1	1
159	1	0.0	1	1
163	2	0.0	1	2
164	1	0.0	1	1
165	1	0.0	1	1
169	2	0.0	1	2
170	1	0.0	1	1
172	1	0.0	1	1
175	1	0.0	1	1
176	1	0.0	1	1
178	1	0.0	1	1
182	2	0.0	1	2
184	1	0.0	1	1
185	1	0.0	1	1
186	2	0.0	1	2
190	1	0.0	1	1
191	1	0.0	1	1
197	1	0.0	1	1
201	1	0.0	1	1
202	1	0.0	1	1
203	1	0.0	1	1
204	1	0.0	1	1
206	1	0.0	1	0 1
208	1	0.0	1	1
210	2	0.0	1	1 1
211	1	0.0	1	1
212	1	0.0	1	1
213	1	0.0	1	1
214	1	0.0	1	1
215	1	0.0	1	1
216	1	0.0	1	1
217	1	0.0	1	1
218	2	0.0	1	2
220	1	0.0	1	1
221	2	0.0	1	2
222	2	0.0	1	2
223	1	0.0	1	1
225	1	0.0	1	1
226	2	0.0	1	2
229	2	0.0	1	2
232	1	0.0	1	1
234	2	0.0	1	2
236	1	0.0	1	1
237	1	0.0	1	1
238	1	0.0	1	1
242	1	0.0	1	1
246	2	0.0	1	2
247	1	0.0	1	1
250	1	0.0	1	1
251	1	0.0	1	1
253	1	0.0	1	1
260	1	0.0	1	1
261	1	0.0	1	1
264	2	0.0	1	2
267	1	0.0	1	1
271	1	0.0	1	1
274	1	0.0	1	1
280	1	0.0	1	1
283	1	0.0	1	1
284	1	0.0	1	1
286	1	0.0	1	1
287	1	0.0	1	0 1
288	1	0.0	1	1
289	1	0.0	1	1
290	3	0.0	1	3
291	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/SAH-5_1.fastq.gz
=============================================
215796 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-5_trimgalore/SAH-5_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-5_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to SAH-5_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-5_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-5_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.850 s (3.937 µs/read; 15.24 M reads/minute).

=== Summary ===

Total reads processed:                 215,796
Reads with adapters:                   145,548 (67.4%)
Reads written (passing filters):       215,796 (100.0%)

Total basepairs processed:    64,954,596 bp
Quality-trimmed:               5,491,212 bp (8.5%)
Total written (filtered):     59,286,569 bp (91.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 145548 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.4%
  C: 57.3%
  G: 26.7%
  T: 3.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	135356	53949.0	0	135356
2	7512	13487.2	0	7512
3	2237	3371.8	0	2237
4	180	843.0	0	180
5	83	210.7	0	83
6	18	52.7	0	18
7	1	13.2	0	1
10	2	0.2	1	0 2
19	1	0.0	1	0 1
21	1	0.0	1	1
29	2	0.0	1	2
31	1	0.0	1	1
32	2	0.0	1	1 1
37	1	0.0	1	1
39	1	0.0	1	1
40	1	0.0	1	1
41	1	0.0	1	1
42	1	0.0	1	1
44	1	0.0	1	1
45	1	0.0	1	1
46	1	0.0	1	1
49	2	0.0	1	2
59	1	0.0	1	1
60	1	0.0	1	1
65	1	0.0	1	1
78	1	0.0	1	1
80	3	0.0	1	1 2
82	6	0.0	1	4 2
83	8	0.0	1	6 2
84	10	0.0	1	9 1
86	3	0.0	1	3
87	5	0.0	1	4 1
88	2	0.0	1	2
89	2	0.0	1	2
90	1	0.0	1	1
91	2	0.0	1	2
92	2	0.0	1	2
93	2	0.0	1	2
94	2	0.0	1	2
95	2	0.0	1	1 1
96	1	0.0	1	1
98	1	0.0	1	1
101	1	0.0	1	1
102	1	0.0	1	1
103	1	0.0	1	1
105	2	0.0	1	2
108	1	0.0	1	1
111	1	0.0	1	1
112	1	0.0	1	1
114	1	0.0	1	1
115	4	0.0	1	4
116	1	0.0	1	1
117	2	0.0	1	2
119	3	0.0	1	2 1
120	1	0.0	1	1
121	1	0.0	1	1
123	1	0.0	1	1
124	4	0.0	1	4
125	1	0.0	1	1
127	3	0.0	1	3
128	1	0.0	1	1
129	1	0.0	1	1
133	1	0.0	1	1
134	1	0.0	1	1
135	1	0.0	1	1
136	1	0.0	1	1
138	1	0.0	1	1
139	1	0.0	1	0 1
141	1	0.0	1	1
142	1	0.0	1	1
144	2	0.0	1	1 1
145	2	0.0	1	2
146	1	0.0	1	1
148	1	0.0	1	1
150	1	0.0	1	1
151	1	0.0	1	1
152	2	0.0	1	2
154	2	0.0	1	2
155	1	0.0	1	1
157	1	0.0	1	0 1
158	1	0.0	1	1
160	2	0.0	1	2
164	2	0.0	1	2
166	1	0.0	1	1
168	1	0.0	1	1
173	1	0.0	1	1
177	2	0.0	1	2
180	5	0.0	1	5
181	1	0.0	1	1
182	1	0.0	1	1
188	1	0.0	1	0 1
189	3	0.0	1	3
191	2	0.0	1	2
192	2	0.0	1	2
193	1	0.0	1	1
197	1	0.0	1	1
226	1	0.0	1	1
229	1	0.0	1	1
247	1	0.0	1	0 1
290	1	0.0	1	1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/SAH-5_2.fastq.gz
=============================================
215796 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SAH-5_1_trimmed.fq.gz and SAH-5_2_trimmed.fq.gz
file_1: SAH-5_1_trimmed.fq.gz, file_2: SAH-5_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SAH-5_1_trimmed.fq.gz and SAH-5_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SAH-5_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SAH-5_2_val_2.fq.gz

Total number of sequences analysed: 215796

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 38933 (18.04%)


  >>> Now running FastQC on the validated data SAH-5_1_val_1.fq.gz<<<

Started analysis of SAH-5_1_val_1.fq.gz
Approx 5% complete for SAH-5_1_val_1.fq.gz
Approx 10% complete for SAH-5_1_val_1.fq.gz
Approx 15% complete for SAH-5_1_val_1.fq.gz
Approx 20% complete for SAH-5_1_val_1.fq.gz
Approx 25% complete for SAH-5_1_val_1.fq.gz
Approx 30% complete for SAH-5_1_val_1.fq.gz
Approx 35% complete for SAH-5_1_val_1.fq.gz
Approx 40% complete for SAH-5_1_val_1.fq.gz
Approx 45% complete for SAH-5_1_val_1.fq.gz
Approx 50% complete for SAH-5_1_val_1.fq.gz
Approx 55% complete for SAH-5_1_val_1.fq.gz
Approx 60% complete for SAH-5_1_val_1.fq.gz
Approx 65% complete for SAH-5_1_val_1.fq.gz
Approx 70% complete for SAH-5_1_val_1.fq.gz
Approx 75% complete for SAH-5_1_val_1.fq.gz
Approx 80% complete for SAH-5_1_val_1.fq.gz
Approx 85% complete for SAH-5_1_val_1.fq.gz
Approx 90% complete for SAH-5_1_val_1.fq.gz
Approx 95% complete for SAH-5_1_val_1.fq.gz
Analysis complete for SAH-5_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SAH-5_2_val_2.fq.gz<<<

Started analysis of SAH-5_2_val_2.fq.gz
Approx 5% complete for SAH-5_2_val_2.fq.gz
Approx 10% complete for SAH-5_2_val_2.fq.gz
Approx 15% complete for SAH-5_2_val_2.fq.gz
Approx 20% complete for SAH-5_2_val_2.fq.gz
Approx 25% complete for SAH-5_2_val_2.fq.gz
Approx 30% complete for SAH-5_2_val_2.fq.gz
Approx 35% complete for SAH-5_2_val_2.fq.gz
Approx 40% complete for SAH-5_2_val_2.fq.gz
Approx 45% complete for SAH-5_2_val_2.fq.gz
Approx 50% complete for SAH-5_2_val_2.fq.gz
Approx 55% complete for SAH-5_2_val_2.fq.gz
Approx 60% complete for SAH-5_2_val_2.fq.gz
Approx 65% complete for SAH-5_2_val_2.fq.gz
Approx 70% complete for SAH-5_2_val_2.fq.gz
Approx 75% complete for SAH-5_2_val_2.fq.gz
Approx 80% complete for SAH-5_2_val_2.fq.gz
Approx 85% complete for SAH-5_2_val_2.fq.gz
Approx 90% complete for SAH-5_2_val_2.fq.gz
Approx 95% complete for SAH-5_2_val_2.fq.gz
Analysis complete for SAH-5_2_val_2.fq.gz
Deleting both intermediate output files SAH-5_1_trimmed.fq.gz and SAH-5_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to SAH-6 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/SAH-6_1.fastq.gz data/SAH-6_2.fastq.gz -o results/02.trimgalore/SAH-6_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/SAH-6_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-6_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/SAH-6_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	105	CTGTCTCTTATA	192530	0.05
smallRNA	0	TGGAATTCTCGG	192530	0.00
Illumina	0	AGATCGGAAGAGC	192530	0.00
Using Nextera adapter for trimming (count: 105). Second best hit was smallRNA (count: 0)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-6_trimgalore/SAH-6_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-6_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to SAH-6_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-6_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-6_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.804 s (4.178 µs/read; 14.36 M reads/minute).

=== Summary ===

Total reads processed:                 192,530
Reads with adapters:                    17,504 (9.1%)
Reads written (passing filters):       192,530 (100.0%)

Total basepairs processed:    57,951,530 bp
Quality-trimmed:                 437,525 bp (0.8%)
Total written (filtered):     57,466,267 bp (99.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 17504 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 45.4%
  C: 12.9%
  G: 22.2%
  T: 19.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	9496	48132.5	0	9496
2	3180	12033.1	0	3180
3	4408	3008.3	0	4408
4	218	752.1	0	218
5	66	188.0	0	66
6	10	47.0	0	10
7	12	11.8	0	12
11	1	0.0	1	0 1
29	1	0.0	1	1
54	1	0.0	1	0 1
56	1	0.0	1	0 1
70	1	0.0	1	1
73	1	0.0	1	1
78	5	0.0	1	5
79	2	0.0	1	2
80	1	0.0	1	1
81	3	0.0	1	3
82	2	0.0	1	2
83	5	0.0	1	4 1
86	1	0.0	1	1
87	2	0.0	1	2
89	4	0.0	1	4
91	1	0.0	1	1
92	1	0.0	1	1
94	3	0.0	1	3
95	2	0.0	1	2
97	1	0.0	1	1
100	1	0.0	1	1
101	1	0.0	1	0 1
103	1	0.0	1	1
107	1	0.0	1	1
113	1	0.0	1	1
115	1	0.0	1	0 1
117	1	0.0	1	0 1
118	1	0.0	1	1
119	1	0.0	1	1
120	1	0.0	1	1
121	1	0.0	1	1
125	1	0.0	1	1
130	1	0.0	1	1
134	1	0.0	1	1
141	1	0.0	1	1
146	2	0.0	1	0 2
148	1	0.0	1	1
149	1	0.0	1	1
152	2	0.0	1	2
155	1	0.0	1	1
156	1	0.0	1	1
157	1	0.0	1	1
161	2	0.0	1	2
165	1	0.0	1	1
166	1	0.0	1	1
172	1	0.0	1	1
173	1	0.0	1	1
174	1	0.0	1	1
176	1	0.0	1	1
177	3	0.0	1	3
178	1	0.0	1	1
181	1	0.0	1	1
183	1	0.0	1	1
186	1	0.0	1	1
189	1	0.0	1	1
190	2	0.0	1	2
192	1	0.0	1	1
199	1	0.0	1	1
203	1	0.0	1	1
205	1	0.0	1	1
206	1	0.0	1	1
208	1	0.0	1	1
210	1	0.0	1	1
211	1	0.0	1	1
212	1	0.0	1	1
216	1	0.0	1	1
217	1	0.0	1	1
218	1	0.0	1	1
219	1	0.0	1	1
220	1	0.0	1	1
225	1	0.0	1	1
232	1	0.0	1	1
235	1	0.0	1	1
239	1	0.0	1	1
243	1	0.0	1	1
245	1	0.0	1	1
247	1	0.0	1	1
251	1	0.0	1	1
252	1	0.0	1	1
254	1	0.0	1	1
264	1	0.0	1	1
271	1	0.0	1	1
282	1	0.0	1	1
283	1	0.0	1	1
284	1	0.0	1	1
287	1	0.0	1	1
290	3	0.0	1	3

RUN STATISTICS FOR INPUT FILE: data/SAH-6_1.fastq.gz
=============================================
192530 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-6_trimgalore/SAH-6_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-6_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to SAH-6_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-6_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-6_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.815 s (4.234 µs/read; 14.17 M reads/minute).

=== Summary ===

Total reads processed:                 192,530
Reads with adapters:                   128,169 (66.6%)
Reads written (passing filters):       192,530 (100.0%)

Total basepairs processed:    57,951,530 bp
Quality-trimmed:               5,271,963 bp (9.1%)
Total written (filtered):     52,527,627 bp (90.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 128169 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.0%
  C: 56.6%
  G: 26.6%
  T: 3.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	119226	48132.5	0	119226
2	6745	12033.1	0	6745
3	1829	3008.3	0	1829
4	164	752.1	0	164
5	79	188.0	0	79
6	17	47.0	0	17
9	1	0.7	0	0 1
22	2	0.0	1	2
26	1	0.0	1	0 1
33	1	0.0	1	1
35	2	0.0	1	1 1
51	1	0.0	1	1
52	1	0.0	1	1
66	1	0.0	1	1
81	1	0.0	1	1
82	11	0.0	1	9 2
83	5	0.0	1	5
84	5	0.0	1	4 1
85	6	0.0	1	4 2
86	4	0.0	1	4
87	2	0.0	1	2
88	1	0.0	1	1
89	1	0.0	1	1
91	3	0.0	1	3
92	1	0.0	1	1
93	1	0.0	1	1
96	1	0.0	1	1
98	1	0.0	1	0 1
100	1	0.0	1	1
103	1	0.0	1	1
105	4	0.0	1	3 1
106	1	0.0	1	1
109	1	0.0	1	1
111	2	0.0	1	2
115	2	0.0	1	2
118	2	0.0	1	2
120	2	0.0	1	1 1
121	1	0.0	1	1
124	1	0.0	1	1
130	3	0.0	1	3
131	1	0.0	1	1
135	2	0.0	1	1 1
138	1	0.0	1	1
139	1	0.0	1	1
144	2	0.0	1	1 1
147	1	0.0	1	1
151	2	0.0	1	2
153	1	0.0	1	1
156	1	0.0	1	0 1
157	1	0.0	1	1
164	1	0.0	1	1
165	2	0.0	1	2
166	1	0.0	1	1
169	1	0.0	1	1
171	2	0.0	1	2
176	2	0.0	1	2
178	1	0.0	1	1
180	2	0.0	1	2
183	2	0.0	1	2
190	2	0.0	1	2
191	1	0.0	1	1
193	1	0.0	1	1
214	1	0.0	1	1
290	2	0.0	1	1 1
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/SAH-6_2.fastq.gz
=============================================
192530 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SAH-6_1_trimmed.fq.gz and SAH-6_2_trimmed.fq.gz
file_1: SAH-6_1_trimmed.fq.gz, file_2: SAH-6_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SAH-6_1_trimmed.fq.gz and SAH-6_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SAH-6_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SAH-6_2_val_2.fq.gz

Total number of sequences analysed: 192530

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 38818 (20.16%)


  >>> Now running FastQC on the validated data SAH-6_1_val_1.fq.gz<<<

Started analysis of SAH-6_1_val_1.fq.gz
Approx 5% complete for SAH-6_1_val_1.fq.gz
Approx 10% complete for SAH-6_1_val_1.fq.gz
Approx 15% complete for SAH-6_1_val_1.fq.gz
Approx 20% complete for SAH-6_1_val_1.fq.gz
Approx 25% complete for SAH-6_1_val_1.fq.gz
Approx 30% complete for SAH-6_1_val_1.fq.gz
Approx 35% complete for SAH-6_1_val_1.fq.gz
Approx 40% complete for SAH-6_1_val_1.fq.gz
Approx 45% complete for SAH-6_1_val_1.fq.gz
Approx 50% complete for SAH-6_1_val_1.fq.gz
Approx 55% complete for SAH-6_1_val_1.fq.gz
Approx 60% complete for SAH-6_1_val_1.fq.gz
Approx 65% complete for SAH-6_1_val_1.fq.gz
Approx 70% complete for SAH-6_1_val_1.fq.gz
Approx 75% complete for SAH-6_1_val_1.fq.gz
Approx 80% complete for SAH-6_1_val_1.fq.gz
Approx 85% complete for SAH-6_1_val_1.fq.gz
Approx 90% complete for SAH-6_1_val_1.fq.gz
Approx 95% complete for SAH-6_1_val_1.fq.gz
Analysis complete for SAH-6_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SAH-6_2_val_2.fq.gz<<<

Started analysis of SAH-6_2_val_2.fq.gz
Approx 5% complete for SAH-6_2_val_2.fq.gz
Approx 10% complete for SAH-6_2_val_2.fq.gz
Approx 15% complete for SAH-6_2_val_2.fq.gz
Approx 20% complete for SAH-6_2_val_2.fq.gz
Approx 25% complete for SAH-6_2_val_2.fq.gz
Approx 30% complete for SAH-6_2_val_2.fq.gz
Approx 35% complete for SAH-6_2_val_2.fq.gz
Approx 40% complete for SAH-6_2_val_2.fq.gz
Approx 45% complete for SAH-6_2_val_2.fq.gz
Approx 50% complete for SAH-6_2_val_2.fq.gz
Approx 55% complete for SAH-6_2_val_2.fq.gz
Approx 60% complete for SAH-6_2_val_2.fq.gz
Approx 65% complete for SAH-6_2_val_2.fq.gz
Approx 70% complete for SAH-6_2_val_2.fq.gz
Approx 75% complete for SAH-6_2_val_2.fq.gz
Approx 80% complete for SAH-6_2_val_2.fq.gz
Approx 85% complete for SAH-6_2_val_2.fq.gz
Approx 90% complete for SAH-6_2_val_2.fq.gz
Approx 95% complete for SAH-6_2_val_2.fq.gz
Analysis complete for SAH-6_2_val_2.fq.gz
Deleting both intermediate output files SAH-6_1_trimmed.fq.gz and SAH-6_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to SAH-7 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/SAH-7_1.fastq.gz data/SAH-7_2.fastq.gz -o results/02.trimgalore/SAH-7_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/SAH-7_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-7_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/SAH-7_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	56	CTGTCTCTTATA	183624	0.03
smallRNA	1	TGGAATTCTCGG	183624	0.00
Illumina	0	AGATCGGAAGAGC	183624	0.00
Using Nextera adapter for trimming (count: 56). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-7_trimgalore/SAH-7_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-7_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to SAH-7_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-7_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-7_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.793 s (4.316 µs/read; 13.90 M reads/minute).

=== Summary ===

Total reads processed:                 183,624
Reads with adapters:                    21,466 (11.7%)
Reads written (passing filters):       183,624 (100.0%)

Total basepairs processed:    55,270,824 bp
Quality-trimmed:                 657,663 bp (1.2%)
Total written (filtered):     54,566,348 bp (98.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 21466 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 40.8%
  C: 13.4%
  G: 30.8%
  T: 15.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	11840	45906.0	0	11840
2	4601	11476.5	0	4601
3	4257	2869.1	0	4257
4	596	717.3	0	596
5	83	179.3	0	83
6	16	44.8	0	16
7	2	11.2	0	2
10	1	0.2	1	0 1
14	1	0.0	1	0 1
24	1	0.0	1	0 1
25	2	0.0	1	1 1
31	1	0.0	1	0 1
36	2	0.0	1	0 2
38	1	0.0	1	0 1
58	1	0.0	1	0 1
61	1	0.0	1	0 1
65	1	0.0	1	1
71	1	0.0	1	1
78	1	0.0	1	1
79	2	0.0	1	2
80	1	0.0	1	1
81	2	0.0	1	2
82	2	0.0	1	2
85	1	0.0	1	1
86	1	0.0	1	1
88	1	0.0	1	1
89	2	0.0	1	2
91	3	0.0	1	3
98	1	0.0	1	1
100	1	0.0	1	1
104	1	0.0	1	1
123	1	0.0	1	1
126	1	0.0	1	0 1
140	1	0.0	1	1
144	1	0.0	1	1
145	2	0.0	1	1 1
148	1	0.0	1	1
149	2	0.0	1	2
153	1	0.0	1	1
156	1	0.0	1	1
162	1	0.0	1	1
166	1	0.0	1	1
168	1	0.0	1	1
183	1	0.0	1	1
184	2	0.0	1	2
185	1	0.0	1	1
195	1	0.0	1	1
200	1	0.0	1	1
208	1	0.0	1	0 1
212	1	0.0	1	1
213	1	0.0	1	1
219	1	0.0	1	1
220	1	0.0	1	1
228	1	0.0	1	1
229	1	0.0	1	1
233	1	0.0	1	1
251	1	0.0	1	1
258	2	0.0	1	0 2
262	1	0.0	1	1
265	1	0.0	1	1
267	1	0.0	1	1
271	1	0.0	1	1
279	1	0.0	1	1
287	2	0.0	1	2
291	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/SAH-7_1.fastq.gz
=============================================
183624 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-7_trimgalore/SAH-7_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-7_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to SAH-7_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-7_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-7_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.815 s (4.438 µs/read; 13.52 M reads/minute).

=== Summary ===

Total reads processed:                 183,624
Reads with adapters:                   122,596 (66.8%)
Reads written (passing filters):       183,624 (100.0%)

Total basepairs processed:    55,270,824 bp
Quality-trimmed:               5,065,839 bp (9.2%)
Total written (filtered):     50,063,923 bp (90.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 122596 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 13.4%
  C: 55.5%
  G: 26.8%
  T: 4.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	113455	45906.0	0	113455
2	6875	11476.5	0	6875
3	1899	2869.1	0	1899
4	199	717.3	0	199
5	78	179.3	0	78
6	28	44.8	0	28
7	1	11.2	0	1
15	1	0.0	1	0 1
30	1	0.0	1	1
32	2	0.0	1	1 1
37	1	0.0	1	0 1
48	2	0.0	1	2
72	1	0.0	1	0 1
77	1	0.0	1	0 1
86	3	0.0	1	2 1
87	5	0.0	1	5
88	4	0.0	1	4
89	3	0.0	1	3
91	2	0.0	1	2
92	1	0.0	1	0 1
94	3	0.0	1	3
95	1	0.0	1	1
96	2	0.0	1	2
100	1	0.0	1	1
106	1	0.0	1	1
108	1	0.0	1	1
109	1	0.0	1	1
111	1	0.0	1	0 1
116	1	0.0	1	1
123	1	0.0	1	0 1
124	1	0.0	1	1
131	2	0.0	1	2
132	1	0.0	1	1
135	1	0.0	1	1
136	1	0.0	1	1
137	1	0.0	1	1
142	1	0.0	1	1
151	1	0.0	1	1
155	1	0.0	1	1
157	1	0.0	1	1
161	1	0.0	1	1
166	1	0.0	1	1
167	1	0.0	1	1
169	1	0.0	1	1
180	1	0.0	1	1
186	1	0.0	1	1
198	1	0.0	1	1
207	1	0.0	1	1
227	1	0.0	1	1
288	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/SAH-7_2.fastq.gz
=============================================
183624 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SAH-7_1_trimmed.fq.gz and SAH-7_2_trimmed.fq.gz
file_1: SAH-7_1_trimmed.fq.gz, file_2: SAH-7_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SAH-7_1_trimmed.fq.gz and SAH-7_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SAH-7_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SAH-7_2_val_2.fq.gz

Total number of sequences analysed: 183624

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 38228 (20.82%)


  >>> Now running FastQC on the validated data SAH-7_1_val_1.fq.gz<<<

Started analysis of SAH-7_1_val_1.fq.gz
Approx 5% complete for SAH-7_1_val_1.fq.gz
Approx 10% complete for SAH-7_1_val_1.fq.gz
Approx 15% complete for SAH-7_1_val_1.fq.gz
Approx 20% complete for SAH-7_1_val_1.fq.gz
Approx 25% complete for SAH-7_1_val_1.fq.gz
Approx 30% complete for SAH-7_1_val_1.fq.gz
Approx 35% complete for SAH-7_1_val_1.fq.gz
Approx 40% complete for SAH-7_1_val_1.fq.gz
Approx 45% complete for SAH-7_1_val_1.fq.gz
Approx 50% complete for SAH-7_1_val_1.fq.gz
Approx 55% complete for SAH-7_1_val_1.fq.gz
Approx 60% complete for SAH-7_1_val_1.fq.gz
Approx 65% complete for SAH-7_1_val_1.fq.gz
Approx 70% complete for SAH-7_1_val_1.fq.gz
Approx 75% complete for SAH-7_1_val_1.fq.gz
Approx 80% complete for SAH-7_1_val_1.fq.gz
Approx 85% complete for SAH-7_1_val_1.fq.gz
Approx 90% complete for SAH-7_1_val_1.fq.gz
Approx 95% complete for SAH-7_1_val_1.fq.gz
Analysis complete for SAH-7_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SAH-7_2_val_2.fq.gz<<<

Started analysis of SAH-7_2_val_2.fq.gz
Approx 5% complete for SAH-7_2_val_2.fq.gz
Approx 10% complete for SAH-7_2_val_2.fq.gz
Approx 15% complete for SAH-7_2_val_2.fq.gz
Approx 20% complete for SAH-7_2_val_2.fq.gz
Approx 25% complete for SAH-7_2_val_2.fq.gz
Approx 30% complete for SAH-7_2_val_2.fq.gz
Approx 35% complete for SAH-7_2_val_2.fq.gz
Approx 40% complete for SAH-7_2_val_2.fq.gz
Approx 45% complete for SAH-7_2_val_2.fq.gz
Approx 50% complete for SAH-7_2_val_2.fq.gz
Approx 55% complete for SAH-7_2_val_2.fq.gz
Approx 60% complete for SAH-7_2_val_2.fq.gz
Approx 65% complete for SAH-7_2_val_2.fq.gz
Approx 70% complete for SAH-7_2_val_2.fq.gz
Approx 75% complete for SAH-7_2_val_2.fq.gz
Approx 80% complete for SAH-7_2_val_2.fq.gz
Approx 85% complete for SAH-7_2_val_2.fq.gz
Approx 90% complete for SAH-7_2_val_2.fq.gz
Approx 95% complete for SAH-7_2_val_2.fq.gz
Analysis complete for SAH-7_2_val_2.fq.gz
Deleting both intermediate output files SAH-7_1_trimmed.fq.gz and SAH-7_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to SAH-8 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/SAH-8_1.fastq.gz data/SAH-8_2.fastq.gz -o results/02.trimgalore/SAH-8_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/SAH-8_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-8_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/SAH-8_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	80	CTGTCTCTTATA	241618	0.03
smallRNA	1	TGGAATTCTCGG	241618	0.00
Illumina	0	AGATCGGAAGAGC	241618	0.00
Using Nextera adapter for trimming (count: 80). Second best hit was smallRNA (count: 1)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-8_trimgalore/SAH-8_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-8_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to SAH-8_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-8_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-8_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.964 s (3.991 µs/read; 15.04 M reads/minute).

=== Summary ===

Total reads processed:                 241,618
Reads with adapters:                    29,600 (12.3%)
Reads written (passing filters):       241,618 (100.0%)

Total basepairs processed:    72,727,018 bp
Quality-trimmed:                 588,244 bp (0.8%)
Total written (filtered):     72,076,102 bp (99.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 29600 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 45.3%
  C: 11.7%
  G: 26.3%
  T: 16.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	16860	60404.5	0	16860
2	5456	15101.1	0	5456
3	6523	3775.3	0	6523
4	488	943.8	0	488
5	167	236.0	0	167
6	9	59.0	0	9
7	8	14.7	0	8
8	1	3.7	0	1
27	1	0.0	1	1
31	1	0.0	1	0 1
34	1	0.0	1	0 1
36	2	0.0	1	0 2
65	1	0.0	1	1
67	1	0.0	1	1
70	1	0.0	1	1
75	1	0.0	1	1
77	1	0.0	1	0 1
78	3	0.0	1	3
79	2	0.0	1	2
80	4	0.0	1	4
82	2	0.0	1	2
83	2	0.0	1	2
84	1	0.0	1	1
85	2	0.0	1	2
89	2	0.0	1	1 1
90	1	0.0	1	1
91	3	0.0	1	3
94	1	0.0	1	1
97	1	0.0	1	1
100	2	0.0	1	2
102	1	0.0	1	1
111	2	0.0	1	2
114	1	0.0	1	1
116	1	0.0	1	1
120	1	0.0	1	1
125	1	0.0	1	1
127	1	0.0	1	1
131	3	0.0	1	3
132	1	0.0	1	1
137	2	0.0	1	2
143	1	0.0	1	1
153	2	0.0	1	2
167	1	0.0	1	0 1
168	1	0.0	1	1
169	1	0.0	1	1
173	2	0.0	1	2
174	1	0.0	1	1
178	2	0.0	1	2
182	3	0.0	1	3
184	1	0.0	1	1
186	1	0.0	1	1
187	1	0.0	1	1
188	1	0.0	1	1
190	1	0.0	1	1
198	1	0.0	1	1
209	1	0.0	1	0 1
211	1	0.0	1	1
213	1	0.0	1	1
217	1	0.0	1	1
218	3	0.0	1	3
242	1	0.0	1	1
248	1	0.0	1	1
253	2	0.0	1	2
271	1	0.0	1	1
272	1	0.0	1	1
274	1	0.0	1	1
276	1	0.0	1	1
281	1	0.0	1	1
284	1	0.0	1	1
289	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/SAH-8_1.fastq.gz
=============================================
241618 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-8_trimgalore/SAH-8_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-8_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to SAH-8_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-8_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-8_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 1.021 s (4.226 µs/read; 14.20 M reads/minute).

=== Summary ===

Total reads processed:                 241,618
Reads with adapters:                   162,433 (67.2%)
Reads written (passing filters):       241,618 (100.0%)

Total basepairs processed:    72,727,018 bp
Quality-trimmed:               6,386,613 bp (8.8%)
Total written (filtered):     66,154,401 bp (91.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 162433 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.4%
  C: 57.6%
  G: 26.2%
  T: 3.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	151258	60404.5	0	151258
2	8423	15101.1	0	8423
3	2284	3775.3	0	2284
4	266	943.8	0	266
5	90	236.0	0	90
6	23	59.0	0	23
7	2	14.7	0	2
8	1	3.7	0	1
25	1	0.0	1	1
29	1	0.0	1	1
31	2	0.0	1	2
38	1	0.0	1	1
44	1	0.0	1	1
48	1	0.0	1	0 1
51	1	0.0	1	1
54	1	0.0	1	1
58	1	0.0	1	1
60	1	0.0	1	1
61	1	0.0	1	0 1
67	1	0.0	1	1
81	1	0.0	1	1
82	3	0.0	1	3
83	3	0.0	1	3
84	2	0.0	1	2
86	7	0.0	1	6 1
87	1	0.0	1	1
88	2	0.0	1	2
89	2	0.0	1	2
91	1	0.0	1	0 1
92	1	0.0	1	1
93	1	0.0	1	1
94	2	0.0	1	2
95	1	0.0	1	1
96	1	0.0	1	1
98	1	0.0	1	1
100	1	0.0	1	1
102	2	0.0	1	2
103	1	0.0	1	1
109	1	0.0	1	1
110	1	0.0	1	0 1
111	2	0.0	1	2
112	1	0.0	1	1
114	1	0.0	1	1
115	1	0.0	1	1
116	1	0.0	1	1
118	2	0.0	1	1 1
119	2	0.0	1	2
120	1	0.0	1	1
122	1	0.0	1	1
123	1	0.0	1	1
124	1	0.0	1	1
125	1	0.0	1	1
127	1	0.0	1	1
131	1	0.0	1	1
134	1	0.0	1	1
136	1	0.0	1	1
142	1	0.0	1	1
149	1	0.0	1	1
151	2	0.0	1	2
156	1	0.0	1	1
158	1	0.0	1	1
163	1	0.0	1	1
169	1	0.0	1	0 1
172	2	0.0	1	2
177	3	0.0	1	3
181	1	0.0	1	1
190	1	0.0	1	0 1
193	1	0.0	1	1
203	1	0.0	1	1
209	1	0.0	1	1
226	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/SAH-8_2.fastq.gz
=============================================
241618 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SAH-8_1_trimmed.fq.gz and SAH-8_2_trimmed.fq.gz
file_1: SAH-8_1_trimmed.fq.gz, file_2: SAH-8_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SAH-8_1_trimmed.fq.gz and SAH-8_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SAH-8_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SAH-8_2_val_2.fq.gz

Total number of sequences analysed: 241618

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 46068 (19.07%)


  >>> Now running FastQC on the validated data SAH-8_1_val_1.fq.gz<<<

Started analysis of SAH-8_1_val_1.fq.gz
Approx 5% complete for SAH-8_1_val_1.fq.gz
Approx 10% complete for SAH-8_1_val_1.fq.gz
Approx 15% complete for SAH-8_1_val_1.fq.gz
Approx 20% complete for SAH-8_1_val_1.fq.gz
Approx 25% complete for SAH-8_1_val_1.fq.gz
Approx 30% complete for SAH-8_1_val_1.fq.gz
Approx 35% complete for SAH-8_1_val_1.fq.gz
Approx 40% complete for SAH-8_1_val_1.fq.gz
Approx 45% complete for SAH-8_1_val_1.fq.gz
Approx 50% complete for SAH-8_1_val_1.fq.gz
Approx 55% complete for SAH-8_1_val_1.fq.gz
Approx 60% complete for SAH-8_1_val_1.fq.gz
Approx 65% complete for SAH-8_1_val_1.fq.gz
Approx 70% complete for SAH-8_1_val_1.fq.gz
Approx 75% complete for SAH-8_1_val_1.fq.gz
Approx 80% complete for SAH-8_1_val_1.fq.gz
Approx 85% complete for SAH-8_1_val_1.fq.gz
Approx 90% complete for SAH-8_1_val_1.fq.gz
Approx 95% complete for SAH-8_1_val_1.fq.gz
Analysis complete for SAH-8_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SAH-8_2_val_2.fq.gz<<<

Started analysis of SAH-8_2_val_2.fq.gz
Approx 5% complete for SAH-8_2_val_2.fq.gz
Approx 10% complete for SAH-8_2_val_2.fq.gz
Approx 15% complete for SAH-8_2_val_2.fq.gz
Approx 20% complete for SAH-8_2_val_2.fq.gz
Approx 25% complete for SAH-8_2_val_2.fq.gz
Approx 30% complete for SAH-8_2_val_2.fq.gz
Approx 35% complete for SAH-8_2_val_2.fq.gz
Approx 40% complete for SAH-8_2_val_2.fq.gz
Approx 45% complete for SAH-8_2_val_2.fq.gz
Approx 50% complete for SAH-8_2_val_2.fq.gz
Approx 55% complete for SAH-8_2_val_2.fq.gz
Approx 60% complete for SAH-8_2_val_2.fq.gz
Approx 65% complete for SAH-8_2_val_2.fq.gz
Approx 70% complete for SAH-8_2_val_2.fq.gz
Approx 75% complete for SAH-8_2_val_2.fq.gz
Approx 80% complete for SAH-8_2_val_2.fq.gz
Approx 85% complete for SAH-8_2_val_2.fq.gz
Approx 90% complete for SAH-8_2_val_2.fq.gz
Approx 95% complete for SAH-8_2_val_2.fq.gz
Analysis complete for SAH-8_2_val_2.fq.gz
Deleting both intermediate output files SAH-8_1_trimmed.fq.gz and SAH-8_2_trimmed.fq.gz

====================================================================================================

Run trimgalore to SAH-9 sample
trim_galore --fastqc --length 250 -q 15 -j 12 --gzip --paired data/SAH-9_1.fastq.gz data/SAH-9_2.fastq.gz -o results/02.trimgalore/SAH-9_trimgalore 

Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 12 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.6
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 12 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output directory results/02.trimgalore/SAH-9_trimgalore/ doesn't exist, creating it for you...

Output will be written into the directory: /axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-9_trimgalore/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/SAH-9_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	88	CTGTCTCTTATA	182285	0.05
smallRNA	3	TGGAATTCTCGG	182285	0.00
Illumina	0	AGATCGGAAGAGC	182285	0.00
Using Nextera adapter for trimming (count: 88). Second best hit was smallRNA (count: 3)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-9_trimgalore/SAH-9_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-9_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 12
Writing final adapter and quality trimmed output to SAH-9_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-9_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-9_1.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.727 s (3.988 µs/read; 15.04 M reads/minute).

=== Summary ===

Total reads processed:                 182,285
Reads with adapters:                    16,886 (9.3%)
Reads written (passing filters):       182,285 (100.0%)

Total basepairs processed:    54,867,785 bp
Quality-trimmed:                 336,061 bp (0.6%)
Total written (filtered):     54,486,884 bp (99.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 16886 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 52.5%
  C: 11.4%
  G: 19.6%
  T: 16.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	8580	45571.2	0	8580
2	3062	11392.8	0	3062
3	4535	2848.2	0	4535
4	558	712.1	0	558
5	37	178.0	0	37
6	7	44.5	0	7
7	10	11.1	0	10
11	1	0.0	1	0 1
20	1	0.0	1	1
36	2	0.0	1	1 1
40	1	0.0	1	1
71	1	0.0	1	1
73	1	0.0	1	1
77	1	0.0	1	1
78	5	0.0	1	5
79	7	0.0	1	7
80	4	0.0	1	3 1
81	1	0.0	1	1
82	1	0.0	1	1
83	2	0.0	1	2
84	1	0.0	1	1
87	3	0.0	1	3
88	1	0.0	1	0 1
90	2	0.0	1	1 1
92	1	0.0	1	1
93	1	0.0	1	1
94	1	0.0	1	1
96	2	0.0	1	2
97	1	0.0	1	1
98	2	0.0	1	2
100	1	0.0	1	1
106	1	0.0	1	1
110	1	0.0	1	1
115	2	0.0	1	2
120	1	0.0	1	1
123	1	0.0	1	1
125	1	0.0	1	1
126	1	0.0	1	1
131	1	0.0	1	1
132	1	0.0	1	1
142	2	0.0	1	2
153	1	0.0	1	1
155	1	0.0	1	1
157	1	0.0	1	1
164	1	0.0	1	1
166	1	0.0	1	1
170	2	0.0	1	2
172	1	0.0	1	0 1
173	1	0.0	1	1
176	1	0.0	1	1
184	1	0.0	1	0 1
185	2	0.0	1	0 2
190	1	0.0	1	1
205	1	0.0	1	1
207	1	0.0	1	1
210	1	0.0	1	1
211	2	0.0	1	2
215	1	0.0	1	1
216	1	0.0	1	1
219	3	0.0	1	3
229	1	0.0	1	1
234	1	0.0	1	1
238	1	0.0	1	1
245	1	0.0	1	1
255	1	0.0	1	1
261	1	0.0	1	1
264	1	0.0	1	1
266	1	0.0	1	1
267	1	0.0	1	1
276	1	0.0	1	1
279	1	0.0	1	1
286	1	0.0	1	1
288	1	0.0	1	1
290	2	0.0	1	2
291	2	0.0	1	2

RUN STATISTICS FOR INPUT FILE: data/SAH-9_1.fastq.gz
=============================================
182285 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/axolote/diana/diana/macrogen_all/pisolithus/results/02.trimgalore/SAH-9_trimgalore/SAH-9_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SAH-9_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 4.4
Python version: could not detect
Number of cores used for trimming: 12
Quality Phred score cutoff: 15
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 250 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 12
Writing final adapter and quality trimmed output to SAH-9_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 15') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file data/SAH-9_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.8.16
Command line parameters: -j 12 -e 0.1 -q 15 -O 1 -a CTGTCTCTTATA data/SAH-9_2.fastq.gz
Processing single-end reads on 12 cores ...
Finished in 0.789 s (4.327 µs/read; 13.87 M reads/minute).

=== Summary ===

Total reads processed:                 182,285
Reads with adapters:                   121,836 (66.8%)
Reads written (passing filters):       182,285 (100.0%)

Total basepairs processed:    54,867,785 bp
Quality-trimmed:               4,661,524 bp (8.5%)
Total written (filtered):     50,064,651 bp (91.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 121836 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 12.5%
  C: 57.0%
  G: 26.8%
  T: 3.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	113296	45571.2	0	113296
2	6324	11392.8	0	6324
3	1875	2848.2	0	1875
4	166	712.1	0	166
5	74	178.0	0	74
6	17	44.5	0	17
15	1	0.0	1	1
21	1	0.0	1	0 1
29	1	0.0	1	1
32	1	0.0	1	1
35	1	0.0	1	1
37	2	0.0	1	2
38	1	0.0	1	0 1
42	1	0.0	1	0 1
43	1	0.0	1	1
47	1	0.0	1	1
48	1	0.0	1	1
55	1	0.0	1	1
56	1	0.0	1	1
59	1	0.0	1	1
82	3	0.0	1	3
83	3	0.0	1	3
84	3	0.0	1	3
85	4	0.0	1	4
86	2	0.0	1	2
87	4	0.0	1	4
88	3	0.0	1	3
89	2	0.0	1	2
90	3	0.0	1	2 1
92	1	0.0	1	1
93	3	0.0	1	3
95	1	0.0	1	1
97	2	0.0	1	2
100	1	0.0	1	1
103	3	0.0	1	3
104	1	0.0	1	1
106	1	0.0	1	1
108	1	0.0	1	1
113	1	0.0	1	1
120	1	0.0	1	1
129	1	0.0	1	1
133	1	0.0	1	1
135	1	0.0	1	1
136	1	0.0	1	1
141	1	0.0	1	1
143	2	0.0	1	2
152	1	0.0	1	1
153	2	0.0	1	2
154	1	0.0	1	1
156	1	0.0	1	1
159	1	0.0	1	1
160	1	0.0	1	1
161	1	0.0	1	1
166	1	0.0	1	1
167	1	0.0	1	1
172	2	0.0	1	2
189	1	0.0	1	1
190	1	0.0	1	1
192	1	0.0	1	1
200	1	0.0	1	0 1
202	1	0.0	1	1
248	1	0.0	1	1
266	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: data/SAH-9_2.fastq.gz
=============================================
182285 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SAH-9_1_trimmed.fq.gz and SAH-9_2_trimmed.fq.gz
file_1: SAH-9_1_trimmed.fq.gz, file_2: SAH-9_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SAH-9_1_trimmed.fq.gz and SAH-9_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SAH-9_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SAH-9_2_val_2.fq.gz

Total number of sequences analysed: 182285

Number of sequence pairs removed because at least one read was shorter than the length cutoff (250 bp): 33224 (18.23%)


  >>> Now running FastQC on the validated data SAH-9_1_val_1.fq.gz<<<

Started analysis of SAH-9_1_val_1.fq.gz
Approx 5% complete for SAH-9_1_val_1.fq.gz
Approx 10% complete for SAH-9_1_val_1.fq.gz
Approx 15% complete for SAH-9_1_val_1.fq.gz
Approx 20% complete for SAH-9_1_val_1.fq.gz
Approx 25% complete for SAH-9_1_val_1.fq.gz
Approx 30% complete for SAH-9_1_val_1.fq.gz
Approx 35% complete for SAH-9_1_val_1.fq.gz
Approx 40% complete for SAH-9_1_val_1.fq.gz
Approx 45% complete for SAH-9_1_val_1.fq.gz
Approx 50% complete for SAH-9_1_val_1.fq.gz
Approx 55% complete for SAH-9_1_val_1.fq.gz
Approx 60% complete for SAH-9_1_val_1.fq.gz
Approx 65% complete for SAH-9_1_val_1.fq.gz
Approx 70% complete for SAH-9_1_val_1.fq.gz
Approx 75% complete for SAH-9_1_val_1.fq.gz
Approx 80% complete for SAH-9_1_val_1.fq.gz
Approx 85% complete for SAH-9_1_val_1.fq.gz
Approx 90% complete for SAH-9_1_val_1.fq.gz
Approx 95% complete for SAH-9_1_val_1.fq.gz
Analysis complete for SAH-9_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SAH-9_2_val_2.fq.gz<<<

Started analysis of SAH-9_2_val_2.fq.gz
Approx 5% complete for SAH-9_2_val_2.fq.gz
Approx 10% complete for SAH-9_2_val_2.fq.gz
Approx 15% complete for SAH-9_2_val_2.fq.gz
Approx 20% complete for SAH-9_2_val_2.fq.gz
Approx 25% complete for SAH-9_2_val_2.fq.gz
Approx 30% complete for SAH-9_2_val_2.fq.gz
Approx 35% complete for SAH-9_2_val_2.fq.gz
Approx 40% complete for SAH-9_2_val_2.fq.gz
Approx 45% complete for SAH-9_2_val_2.fq.gz
Approx 50% complete for SAH-9_2_val_2.fq.gz
Approx 55% complete for SAH-9_2_val_2.fq.gz
Approx 60% complete for SAH-9_2_val_2.fq.gz
Approx 65% complete for SAH-9_2_val_2.fq.gz
Approx 70% complete for SAH-9_2_val_2.fq.gz
Approx 75% complete for SAH-9_2_val_2.fq.gz
Approx 80% complete for SAH-9_2_val_2.fq.gz
Approx 85% complete for SAH-9_2_val_2.fq.gz
Approx 90% complete for SAH-9_2_val_2.fq.gz
Approx 95% complete for SAH-9_2_val_2.fq.gz
Analysis complete for SAH-9_2_val_2.fq.gz
Deleting both intermediate output files SAH-9_1_trimmed.fq.gz and SAH-9_2_trimmed.fq.gz

====================================================================================================

Tue Feb 20 18:57:05 MST 2024
